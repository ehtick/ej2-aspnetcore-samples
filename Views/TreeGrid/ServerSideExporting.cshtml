@using Syncfusion.EJ2


@section ControlsSection{
    <div class="control-section">
        <ejs-treegrid id="TreeGrid" dataSource="@ViewData["dataSource"]" height="366" childMapping="Children" toolbarClick="toolbarClick" allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "ExcelExport", "CsvExport", "PdfExport"})" treeColumnIndex="1">
            <e-treegrid-columns>
                <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="95"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" width="220"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="115"></e-treegrid-column>
                <e-treegrid-column field="EndDate" headerText=" End Date" textAlign="Right" format="yMd" type="date" width="115"></e-treegrid-column>
                <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="100"></e-treegrid-column>
                <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="105"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
    </div>
    <script>

        function toolbarClick(args) {
            var gridObj = document.getElementById("TreeGrid").ej2_instances[0];
            if (args.item.text == "PDF Export") {
                gridObj.serverPdfExport("@Url.Action("PdfExport", "TreeGrid")");
            }
            if (args.item.text == "Excel Export") {
                gridObj.serverExcelExport("@Url.Action("ExcelExport", "TreeGrid")");
            }
            if (args.item.text == "CSV Export") {
                gridObj.serverCsvExport("@Url.Action("CsvExport", "TreeGrid")");
            }
        }
    </script>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Server Side Exporting in ASP.NET Core Tree Grid control. Explore here for more details." />
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the server-side exporting of the Tree Grid, which allows you to export its data to the Excel, CSV and PDF formats using server-side actions.
            Use the toolbar buttons to export Tree Grid data to desired format.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p> Server-side exporting is implemented by using the <a target="_blank" href="https://www.nuget.org/packages/Syncfusion.EJ2.GridExport.Core/" aria-label="Navigate to the nuget package manger for Syncfusion GridExport">Syncfusion.EJ2.GridExport </a> library. </p>
        <p>
            In this demo, ExcelExport, CsvExport and PdfExport items are defined in the toolbar and for these toolbar items, we have defined actions in 
        
                <a target="_blank"
               href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.treegrid.treegrid.html#Syncfusion_EJ2_TreeGrid_TreeGrid_ToolbarClick" aria-label="Navigate to the ToolbarClick property reference for ASP.NET Core TreeGrid control">
                    ToolbarClick
                </a> event to export the Grid data using the 
                <a target="_blank"
               href="https://ej2.syncfusion.com/javascript/documentation/api/treegrid/#serverexcelexport" aria-label="Navigate to the serverExcelExport method reference for ASP.NET Core TreeGrid control">
                    serverExcelExport
                </a>
                <a target="_blank"
               href="https://ej2.syncfusion.com/javascript/documentation/api/treegrid/#servercsvexport" aria-label="Navigate to the serverCsvExport method reference for ASP.NET Core TreeGrid control">
                    serverCsvExport
                </a> and 
                <a target="_blank"
               href="https://ej2.syncfusion.com/javascript/documentation/api/treegrid/#serverpdfexport" aria-label="Navigate to the serverPdfExport method reference for ASP.NET Core TreeGrid control">
                    serverPdfExport
                </a> methods.
        </p>
    </div>
}

@*custom code end*@
@section Title{
    <title>ASP.NET Core Tree Grid Server Side Exporting Example - Syncfusion Demos  </title>
                }
@section Header{
    <h1 class='sb-sample-text'>ASP.NET Core Tree Grid Server Side Exporting Example - Syncfusion Demos </h1>
                }
