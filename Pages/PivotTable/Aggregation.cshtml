@page
@model EJ2CoreSampleBrowser.Pages.PivotTable.Aggregation

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Aggregation in ASP.NET Core Pivot Table control. Explore here for more details."/>
}

@{
    var data = new PivotTableData().GetrenewableEnergy();
    var drilledMembers = new string[] { "Biomass", "Free Energy" };
}
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <ejs-pivotview id="pivotview" width="100%" height="290" showFieldList="true">
                <e-datasourcesettings dataSource="@data" expandAll="false" enableSorting="true">
                    <e-drilledmembers>
                        <e-field name="EnerType" items="@drilledMembers"></e-field>
                    </e-drilledmembers>
                    <e-formatsettings>
                        <e-field name="PowUnits" format="N"></e-field>  
                        <e-field name="ProCost" format="C2"></e-field>                        
                    </e-formatsettings>
                    <e-rows>
                        <e-field name="Year" caption="Production Year"></e-field>
                        <e-field name="HalfYear" caption="Half Year"></e-field>
                        <e-field name="Quarter" caption="Quarter Year"></e-field>
                    </e-rows>
                    <e-columns>
                        <e-field name="EnerType" caption="Energy Type"></e-field>
                        <e-field name="EneSource" caption="Energy Source"></e-field>
                    </e-columns>
                    <e-values>
                        <e-field name="PowUnits" caption="Units (GWh)"></e-field>
                        <e-field name="ProCost" caption="Cost (MM)"></e-field>
                    </e-values>
                </e-datasourcesettings>
                <e-gridSettings columnWidth="140"></e-gridSettings>
            </ejs-pivotview>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id='property' title='Properties' class='property-panel-table' style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td>
                        <div>
                            <ejs-dropdownlist id="unitdrpdwn" dataSource="@Model.unitData" change="setUnitTypeChange" index="0" popupWidth="auto" placeholder="Units">
                                <e-dropdownlist-fields text="Value" value="Name"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td>
                        <div>
                            <ejs-dropdownlist id="costdrpdwn" dataSource="@Model.costData" change="setCostTypeChange" index="0" popupWidth="auto" placeholder="Cost">
                                <e-dropdownlist-fields text="Value" value="Name"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
        .e-bigger .e-float-input.e-control-wrapper {
        width: 100% !important;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var drpdwn1 = document.getElementById('costdrpdwn').ej2_instances[0];
            var drpdwn2 = document.getElementById('unitdrpdwn').ej2_instances[0];
            drpdwn1.floatLabelType = "Auto";
            drpdwn2.floatLabelType = "Auto";
        });
        function setUnitTypeChange(args) {
            setSummaryType('PowUnits', args.value);
        }
        function setCostTypeChange(args) {
            setSummaryType('ProCost', args.value);
        }
        function setSummaryType(fieldName, summaryType) {
            var isAvail = false;
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            for (var vCnt = 0; vCnt < pivotObj.dataSourceSettings.values.length; vCnt++) {
                if (pivotObj.dataSourceSettings.values[vCnt].name === fieldName) {
                    if (pivotObj.dataSourceSettings.values[vCnt].name === 'PowUnits' && summaryType === 'Avg') {
                        pivotObj.setProperties({ dataSourceSettings: { formatSettings: [{ name: 'PowUnits', format: 'N2' }, { name: 'ProCost', format: 'C' }] } }, true);
                    } else {
                        pivotObj.setProperties({ dataSourceSettings: { formatSettings: [{ name: 'PowUnits', format: 'N' }, { name: 'ProCost', format: 'C' }] } }, true);
                    }
                    pivotObj.dataSourceSettings.values[vCnt].type = summaryType;
                    isAvail = true;
                }
            }
            if (isAvail) {
                pivotObj.updateDataSource();
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the aggregate types like sum, average, median, min, max, count, distinct count, and more in the pivot table for quick business analysis. End users can also change the aggregation type of each field bound to the value axis in the field list at runtime.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this sample, you can change the aggregate types for value fields using the dropdown list separately. The aggregate type can be set using the <code>type</code>
            property of the value field. The built-in aggregates are:
        </p>
        <p>
            <code>Sum</code>,  <code>Average</code>,  <code>Median</code>, <code>Min</code>, <code>Max</code>, <code>Count</code>, <code>Distinct Count</code>, <code>Product</code>,
            <code>Index</code>, <code>Population StDev</code>, <code>Sample StDev</code>, <code>Population Var</code>, <code>Sample Var</code>, <code>Running Totals</code>,
            <code>Difference From</code>, <code>% of Difference From</code>, <code>% of Grand Total</code>, <code>% of Column Total</code>, <code>% of Row Total</code>,
            <code>% of Parent Total</code>, <code>% of Parent Column Total</code>, <code>% of Parent Row Total.</code>
        </p>
        <p>
            To achieve aggregation through UI, navigate to <b>"User Interaction > Field List"</b> sample and click and open the value field settings menu to experience the same.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Pivot Table Aggregation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Aggregation in ASP.NET Core Pivot Table Control</h1>
                }