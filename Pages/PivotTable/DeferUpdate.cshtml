@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Defer Layout Update in ASP.NET Core Pivot Table control. Explore here for more details."/>
}

@{
    var data = new PivotTableData().GetPivot_Data();
    var drilledMembers = new string[] { "France", "Germany", "United States" };
    var filterMembers = new string[] { "Gloves", "Helmets", "Shorts", "Vests" };
}
@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper">
            <ejs-pivotview id="pivotview" enginePopulated="onGridEnginePopulate" allowDeferLayoutUpdate="true" width="99%" height="620" locale="en">
                <e-gridSettings columnWidth="140"></e-gridSettings>
            </ejs-pivotview>
            <ejs-pivotfieldlist id="pivotfieldlist" renderMode="Fixed" load="onLoad" enginePopulated="onFieldListEnginePopulate" dataBound="onDataBound" allowDeferLayoutUpdate="true" allowCalculatedField="true" locale="en">
                <e-datasourcesettings dataSource="@data" expandAll="false" enableSorting="true" allowLabelFilter="true" allowValueFilter="true">
                    <e-fieldlist-drilledmembers>
                        <e-field name="Country" items="@drilledMembers"></e-field>
                    </e-fieldlist-drilledmembers>
                    <e-fieldlist-filtersettings>
                        <e-field name="Products" items="@filterMembers" type="Include"></e-field>
                    </e-fieldlist-filtersettings>
                    <e-fieldlist-formatsettings>
                        <e-field name="Amount" format="C0" maximumSignificantDigits="10" minimumSignificantDigits="1" useGrouping="true"></e-field>
                    </e-fieldlist-formatsettings>
                    <e-fieldlist-rows>
                        <e-field name="Country"></e-field>
                        <e-field name="Products"></e-field>
                    </e-fieldlist-rows>
                    <e-fieldlist-columns>
                        <e-field name="Year"></e-field>
                        <e-field name="Order_Source" caption="Order Source"></e-field>
                    </e-fieldlist-columns>
                    <e-fieldlist-values>
                        <e-field name="In_Stock" caption="In Stock"></e-field>
                        <e-field name="Sold" caption="Units Sold"></e-field>
                        <e-field name="Amount" caption="Sold Amount"></e-field>
                    </e-fieldlist-values>
                    <e-fieldlist-filters>
                        <e-field name="Product_Categories" caption="Product Categories"></e-field>
                    </e-fieldlist-filters>
                </e-datasourcesettings>
            </ejs-pivotfieldlist>
        </div>
    </div>

    <style>
        #pivotview {
            width: 58%;
            height: 100%;
        }

        #pivotfieldlist {
            width: 42%;
            height: 100%;
        }
        .e-pivotview {
            float: left;
        }

        .e-pivotfieldlist {
            float: right;
        }

        .e-pivotfieldlist .e-static {
            width: 100% !important;
        }
    </style>
    <script>
        function onLoad(args) {
            var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
            if (fieldlistObj) {
                if (ej.base.Browser.isDevice) {
                    fieldlistObj.renderMode = 'Popup';
                    fieldlistObj.target = '.control-section';
                    ej.base.setStyleAttribute(document.getElementById('pivotfieldlist'), {
                        'width': 0,
                        'height': 0,
                        'float': 'left',
                        'display': 'none'
                    });
                }
            }
        }
        function onGridEnginePopulate(args) {
            if (!ej.base.Browser.isDevice) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                if (fieldlistObj) {
                    fieldlistObj.update(pivotObj);
                }
            }
        }
        function onFieldListEnginePopulate(args) {
            if (document.getElementById('pivotview')) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                if (fieldlistObj.isRequiredUpdate) {
                    fieldlistObj.updateView(pivotObj);
                }
                pivotObj.notify('ui-update', pivotObj);
                if (!ej.base.Browser.isDevice) {
                    fieldlistObj.notify('tree-view-update', fieldlistObj);
                }
            }
        }
        function onDataBound(args) {
            if (document.getElementById('pivotview')) {
                var pivotObj = document.getElementById('pivotview').ej2_instances[0];
                var fieldlistObj = document.getElementById('pivotfieldlist').ej2_instances[0];
                pivotObj.tooltip.destroy();
                if (ej.base.Browser.isDevice) {
					pivotObj.element.style.width = "100%";
                    pivotObj.allowCalculatedField = true;
                    pivotObj.showFieldList = true;
                }
                pivotObj.refresh();
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates the defer layout update feature of the pivot table. The defer layout update allows users to refresh the pivot table on-demand instead of during every UI interaction.</p>
</div>
}

@section Description{
    <div id="description">
        <p>
            Deferring a layout update can be useful when you need to remove or add multiple fields in a report and you don't want to update the pivot table after each change. Now, you can update a pivot table after performing all changes at the report level in the field list resulting in better performance.
        </p>
        <p>
            In this sample, the <b>Defer Layout Update</b> option can be enabled or disabled via field list UI.
        </p>
        <p>
            In general, this feature can be enabled by setting  <code>AllowDeferLayoutUpdate</code> as true.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Pivot Table Defer Layout Update Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Defer Layout Update in ASP.NET Core Pivot Table Control</h1>
                }