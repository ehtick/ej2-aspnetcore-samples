@page

@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the OLAP in ASP.NET Core Pivot Table control. Explore here for more details."/>
}

@{
    var filterMembers = new string[] { "[Date].[Fiscal].[Fiscal Quarter].&[2002]&[4]", "[Date].[Fiscal].[Fiscal Year].&[2005]" };
}
@section ControlsSection{

    <div class="control-section">
        <div class="content-wrapper">
             <ejs-pivotview id="pivotview" allowExcelExport="true" allowConditionalFormatting="true" allowPdfExport="true" showToolbar="true" enableFieldSearching="true" allowCalculatedField="true" showFieldList="true" showGroupingBar="true" enableValueSorting="true" width="100%" height="500" toolbar="@(new List<string>() {"New", "Save", "SaveAs", "Rename", "Remove", "Load",
        "Grid", "Chart", "MDX", "Export", "SubTotal", "GrandTotal", "ConditionalFormatting", "FieldList" })" saveReport="saveReport" loadReport="loadReport" fetchReport="fetchReport" renameReport="renameReport" removeReport="removeReport" newReport="newReport" toolbarRender="beforeToolbarRender">
                <e-datasourcesettings catalog="Adventure Works DW 2008 SE" cube="Adventure Works" url="https://bi.syncfusion.com/olap/msmdpump.dll"  providerType="SSAS" enableSorting="true">
                    <e-rows>
                        <e-field name="[Customer].[Customer Geography]" caption="Customer Geography"></e-field>
                    </e-rows>
                    <e-columns>
                        <e-field name="[Product].[Product Categories]" caption="Product Categories"></e-field>
                        <e-field name="[Measures]" caption="Measures"></e-field>
                    </e-columns>
                    <e-values>
                        <e-field name="[Measures].[Customer Count]" caption="Customer Count"></e-field>
                        <e-field name="[Measures].[Internet Sales Amount]" caption="Internet Sales Amount"></e-field>
                    </e-values>
                    <e-filters>
                        <e-field name="[Date].[Fiscal]" caption="Date Fiscal"></e-field>
                    </e-filters>
                </e-datasourcesettings>
                <e-gridSettings columnWidth="160"></e-gridSettings>
                <e-displayOption view="Both"></e-displayOption>
                <e-chartSettings title="Sales Analysis" load="onChartLoad"></e-chartSettings>
            </ejs-pivotview>
        </div>
    </div>
    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
         
        @@media only screen and (max-width: 400px) {
            #pivot-table-section {
                overflow: auto;
            }
        }
        .e-pivotview .e-pivotchart-type-dialog {
            max-width: 380px !important;
            max-height: 380px !important;
        }
    </style>
<script>        
        function saveReport(args) {
            var reports = [];
            var isSaved = false;
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reports = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.report && args.reportName && args.reportName !== '') {
                reports.map(function (item) {
                    if (args.reportName === item.reportName) {
                        item.report = args.report;
                        isSaved = true;
                    }
                });
                if (!isSaved) {
                    reports.push(args);
                }
                localStorage.pivotviewReports = JSON.stringify(reports);
            }
        }
        function fetchReport(args) {
            var reportCollection = [];
            var reeportList = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                reeportList.push(item.reportName);
            });
            args.reportName = reeportList;
        }
        function loadReport(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    args.report = item.report;
                }
            });
            if (args.report) {
                pivotObj.dataSourceSettings = JSON.parse(args.report).dataSourceSettings;
            }
        }
        function removeReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            for (var i = 0; i < reportCollection.length; i++) {
                if (reportCollection[i].reportName === args.reportName) {
                    reportCollection.splice(i, 1);
                }
            }
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function renameReport(args) {
            var reportCollection = [];
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                reportCollection = JSON.parse(localStorage.pivotviewReports);
            }
            if (args.isReportExists) {
                for (var i = 0; i < reportCollection.length; i++) {
                    if (reportCollection[i].reportName === args.rename) {
                        reportCollection.splice(i, 1);
                    }
                }
            }
            reportCollection.map(function (item) {
                if (args.reportName === item.reportName) {
                    item.reportName = args.rename;
                }
            });
            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
                localStorage.pivotviewReports = JSON.stringify(reportCollection);
            }
        }
        function newReport() {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            pivotObj.setProperties({
                dataSourceSettings: {
                    columns: [],
                    rows: [],
                    values: [],
                    filters: []
                }
            }, false);
        }
		function beforeToolbarRender(args) {
			args.customToolbar.splice(6, 0, {
				type: 'Separator' 
			});
			args.customToolbar.splice(9, 0, {
				type: 'Separator' 
			});
		}
        function onChartLoad(args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() +
                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the rendering of a pivot table bound to an online SSAS OLAP cube as its data source.
        OLAP cube elements like dimension, hierarchy, measure, and others can be arranged in row, column, value, and
        slicer axes to create desired views at runtime.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this example, users can explore all of an OLAP cube and its elements and view the resultant report in a pivot
            table or pivot chart at runtime. Grouping bar and field list options are included for exploring the data. Along
            with these, toolbar options are included for switching to the pivot chart, performing report manipulation, and
            more:
        </p>
        <table>
            <tr>
                <td style="vertical-align: top;padding: 10px 0;width:230px">
                    <code>Create new report:</code>
                </td>
                <td>Allows user to create new reports at runtime.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Rename report:</code>
                </td>
                <td>Allows user to change current report name dynamically through UI.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Remove report:</code>
                </td>
                <td>Allows user to remove current report from the report collection at runtime.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Save as option:</code>
                </td>
                <td>Allows user to save report locally in browser memory.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Report list:</code>
                </td>
                <td>Swap between reports within the report collection.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Pivot Table:</code>
                </td>
                <td>Allows user to view data in cross-tabulation format.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Pivot Chart and its types:</code>
                </td>
                <td>Allows user to view data in graphical format. The chart types include column, bar, line, area, etc. It
                    also has options for showing and hiding legends and displaying chart series of different measures on
                    single and multiple axes.
                </td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Show MDX query:</code>
                </td>
                <td>View the MDX query of the current pivot table that is used to fetch the data from the cube.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Export:</code>
                </td>
                <td>Provides options to save data in PDF, Excel, and CSV document types.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Hide subtotals and grand totals:</code>
                </td>
                <td>Hide grand totals and subtotals based on hierarchies in rows and columns.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>Conditional formatting:</code>
                </td>
                <td>Allows user to customize cells base on certain conditions.</td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">
                    <code>PivotTable Field List:</code>
                </td>
                <td>Provides option to alter the report dynamically through UI.</td>
            </tr>
        </table>
    </div>
}
@section Title{
                    <title>ASP.NET Core Pivot Table OLAP Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of OLAP in ASP.NET Core Pivot Table Control</h1>
                }