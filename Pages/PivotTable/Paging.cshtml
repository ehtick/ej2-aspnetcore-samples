@page

@using Syncfusion.EJ2.PivotView
@section Meta{
<meta name="description"
    content="This example demonstrates the Paging in ASP.NET Core Pivot Table control. Explore here for more details." />
}
@{
    var pagerPositions = new string[] { "Top", "Bottom" };
    var pageSizes = new string[] { "Row", "Column", "Both", "None" };
    var pagerViewData = new string[] { "Row", "Column", "Both" };
}
@section ControlsSection{

<div class="col-lg-9 control-section" style="overflow:auto;">
    <div class="content-wrapper">
        <ejs-pivotview id="pivotview" width="100%" height="600" enablePaging="true">
            <e-datasourcesettings expandAll="true" type="JSON">
                <e-data-manager url="https://ej2services.syncfusion.com/aspnet/development/api/order" crossdomain="true" adaptor="WebApiAdaptor"></e-data-manager>
                <e-rows>
                    <e-field name="ShipCountry" caption = "Ship Country"></e-field>
                    <e-field name="ShipCity" caption = "Ship City"></e-field>
                </e-rows>
                <e-columns>
                    <e-field name="ProductName" caption ="Product Name" ></e-field>
                </e-columns>
                <e-formatsettings>
                     <e-field name="UnitPrice" format="C0"></e-field>
                </e-formatsettings>
                <e-values>
                    <e-field name="Quantity"></e-field>
                    <e-field name="UnitPrice" caption="Unit Price"></e-field>
                </e-values>
            </e-datasourcesettings>
            <e-gridsettings columnwidth="120"></e-gridsettings>
            <e-pagesettings rowpagesize="10" columnpageSize="5" currentcolumnpage="1" currentrowpage="1"></e-pagesettings>
            <e-pagersettings position="Bottom" enablecompactview="false" showcolumnpager="true" showrowpager="true"></e-pagersettings>
            </ejs-pivotview>
    </div>
</div>

<div class="col-lg-3 property-section pivot-property-section">
    <table id="property" title="Properties" style="width: 100%;height:100%;" class="pivot-property-panel-table">
        <tbody>
            <tr style="height: 50px">
                <td>
                    <div class="hdrlabel">Pager Position
                    </div>
                </td>
                <td>
                    <div>
                        <ejs-dropdownlist id="Pager_Position" dataSource="@pagerPositions" index="1"
                            change="onDropDownChange">
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td>
                    <div class="hdrlabel">Show Pager
                    </div>
                </td>
                <td>
                    <div>
                        <ejs-dropdownlist id="Pager_View" dataSource="@pagerViewData" index="2"
                            change="onDropDownChange">
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td>
                    <div class="hdrlabel">Show Page Size
                    </div>
                </td>
                <td>
                    <div>
                        <ejs-dropdownlist id="Page_Size" dataSource="@pageSizes" index="2"
                            change="onDropDownChange">
                        </ejs-dropdownlist>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td>
                    <div class="hdrlabel">Compact View
                    </div>
                </td>
                <td>
                    <div>
                        <ejs-checkbox id="Compact_View" change="onCheckBoxChange"></ejs-checkbox>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td>
                    <div class="hdrlabel">Inverse Pager
                    </div>
                </td>
                <td>
                    <div>
                        <ejs-checkbox id="Inverse" change="onCheckBoxChange"></ejs-checkbox>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<style>
    .sb-sample-content-area {
        min-height: 255px !important;
    }

    .control-section {
        min-height: 255px !important;
    }

    #PivotViewcontainerwrapper {
        height: auto !important;
    }

    .e-bigger .e-float-input.e-control-wrapper {
        width: 100% !important;
    }

    .pivot-property-panel-table div {
        padding: 0;
    }

    .pivot-property-panel-table {
        margin-left: 10px;
    }
</style>
<script>
    function onDropDownChange(args) {
        var pivotObj = document.getElementById('pivotview').ej2_instances[0];
        if (args.element.id === 'Pager_Position') {
            pivotObj.pagerSettings.position = args.value;
        } else if (args.element.id === 'Pager_View') {
            if (args.value === 'Row') {
                pivotObj.pagerSettings.showRowPager = true;
                pivotObj.pagerSettings.showColumnPager = false;
            } else if (args.value === 'Column') {
                pivotObj.pagerSettings.showRowPager = false;
                pivotObj.pagerSettings.showColumnPager = true;
            } else {
                pivotObj.pagerSettings.showRowPager = pivotObj.pagerSettings.showColumnPager = true;
            }
        } else {
            if (args.value === 'Row') {
                pivotObj.pagerSettings.showRowPageSize = true;
                pivotObj.pagerSettings.showColumnPageSize = false;
            } else if (args.value === 'Column') {
                pivotObj.pagerSettings.showRowPageSize = false;
                pivotObj.pagerSettings.showColumnPageSize = true;
            } else if (args.value === 'Both') {
                pivotObj.pagerSettings.showRowPageSize = pivotObj.pagerSettings.showColumnPageSize = true;
            } else {
                pivotObj.pagerSettings.showRowPageSize = pivotObj.pagerSettings.showColumnPageSize = false;
            }
        }
    }

    function onCheckBoxChange(args) {
        var pivotObj = document.getElementById('pivotview').ej2_instances[0];
        if (this.element.id === 'Compact_View') {
            pivotObj.pagerSettings.enableCompactView = args.checked;
        } else {
            pivotObj.pagerSettings.isInversed = args.checked;
        }
    }
</script>
}

@section PreScripts {
<script>
    ej.base.enableRipple(false);
</script>
}

@section ActionDescription{
<div id="action-description">
    <p>This sample shows how to use the paging option to break and load a large data source into chunks and display them
        page by page. You can also use the built-in navigation buttons to move between pages.
    </p>
</div>
}

@section Description{
<div id="description">
    <p>The pivot table provides an optimized way to render rows and columns page by page without displaying the entire
        pivot data. To enable paging, set the <code>enablePaging</code> property to <b>true</b>. You can also configure
        page information for
        row and column, such as page size, current page, and so on, using the <code>pageSettings</code>. The
        <code>pageSettings</code>
        properties are explained in-detail below:
    </p>
    <table>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>currentRowPage :</code>
            </td>
            <td>Holds the current page number, row-wise. You can also change the page number at runtime.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 10px 0;width: 180px;">
                <code>currentColumnPage :</code>
            </td>
            <td>Holds the current page number, column-wise. You can also change the page number at runtime.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>rowPageSize :</code>
            </td>
            <td>Indicates the number of records to be displayed in each page, row-wise. You can also change the page
                size at runtime.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>columnPageSize :</code>
            </td>
            <td>Indicates the number of records to be displayed in each page, column-wise. You can also change the page
                size at runtime.</td>
        </tr>
    </table>
    <br />
    <p>Also, you can customize the paging UI by changing the position, visibility, page size, and other settings for
        row and column using the <code>pagerSettings</code>. The <code>pagerSettings</code> properties are explained
        in-detail below:
    </p>
    <table>
        <tr>
            <td style="vertical-align: top;padding: 10px 0;width: 180px;">
                <code>position :</code>
            </td>
            <td>Display the pager UI either at top or bottom of the Pivot Table.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>isInversed :</code>
            </td>
            <td>Toggle and display the row and column pagers.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>showRowPager :</code>
            </td>
            <td>Show or hide the row pager in the pager UI.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>showColumnPager :</code>
            </td>
            <td>Show or hide the column pager in the pager UI.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>showRowPageSize :</code>
            </td>
            <td>Show or hide the pre-defined page sizes in the row pager UI.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>showColumnPageSize :</code>
            </td>
            <td>Show or hide the pre-defined page sizes in the column pager UI.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>rowPageSizes :</code>
            </td>
            <td>Allows you to assign a set of pre-defined page sizes in the pager UI's "Rows per page" dropdown, which
                can be used to change the number of records displayed in row at runtime.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>columnPageSizes :</code>
            </td>
            <td>Allows you to assign a set of pre-defined page sizes in the pager UI's "Columns per page" dropdown,
                which can be used to change the number of records displayed in column at runtime.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>enableCompactView :</code>
            </td>
            <td>Allows the paging UI to be displayed with minimal design by hiding all paging information except
                navigation options.</td>
        </tr>
        <tr>
            <td style="vertical-align: top;padding: 4px 0;">
                <code>template :</code>
            </td>
            <td>Allows you to change the appearance of the pager UI by displaying user-defined HTML elements instead of
                built-in HTML elements.</td>
        </tr>
    </table>
</div>
}
@section Title{
<title>ASP.NET Core Pivot Table Paging Example - Syncfusion Demos </title>
}
@section Header{
<h1 class='sb-sample-text'>Example of Paging in ASP.NET Core Pivot Table Control</h1>
}
