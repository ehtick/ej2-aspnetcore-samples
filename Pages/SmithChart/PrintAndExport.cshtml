@page
@using Syncfusion.EJ2.Charts;

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div id="container">
            <ejs-smithchart id="container" load="smithLoad" loaded="smithLoaded">
                <e-smithchart-smithchartseriescollection>
                    <e-smithchart-smithchartseries name="Transmission" enableAnimation="true"></e-smithchart-smithchartseries>
                </e-smithchart-smithchartseriescollection>
                <e-smithchart-legendsettings visible="true" shape="Circle"></e-smithchart-legendsettings>
            </ejs-smithchart>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>Export Type</div>
                    </td>
                    <td style="width: 60%;">
                        <div style="margin-left: -10px">
                            <select id="mode">
                                <option value="JPEG">JPEG</option>
                                <option value="PNG">PNG</option>
                                <option value="SVG">SVG</option>
                                <option value="PDF">PDF</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>File Name</div>
                    </td>
                    <td style="width: 60%;">
                        <div class="e-float-input" style="margin-top: 0px;">
                            <input type="text" value="Smith chart" id="fileName" style="margin-left: -10px;width: 100px">
                        </div>
                    </td>
                </tr>
                <tr id="button-control1">
                    <td>
                        <div style="height: 45px;margin-left:50%">
                            <button id="export" style="text-transform:none !important;width:90px;">Export</button>
                        </div>
                    </td>
                </tr>
                <tr id="button-control2">
                    <td>
                        <div style="height: 45px;margin-left:50%">
                            <button id="print" style="text-transform:none !important;width:80px;">Print</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script src="~/scripts/SmithChart/theme-color.js"></script>
    <script type="text/javascript">
        function smithLoad(args) {
            loadSmithChartTheme(args);
            args.smithchart.horizontalAxis.minorGridLines.visible = true;
            args.smithchart.radialAxis.minorGridLines.visible = true;
        }

        window.onload = function () {
            window.exportType = new ej.dropdowns.DropDownList({
                index: 0,
                width: 100
            });
            window.exportType.appendTo('#mode');
            window.togglebtn1 = new ej.buttons.Button({
                isPrimary: true,
                iconCss: 'e-icons e-export-icon',
                cssClass: 'e-flat'
            });
            window.togglebtn1.appendTo('#export');
            window.togglebtn2 = new ej.buttons.Button({
                isPrimary: true,
                iconCss: 'e-icons e-print-icon',
                cssClass: 'e-flat'
            });
            window.togglebtn2.appendTo('#print');

            document.getElementById('export').onclick = () => {
                var fileName = document.getElementById('fileName').value;
                window.smithchart.export(window.exportType.value, fileName);
            };
            document.getElementById('print').onclick = () => {
                window.smithchart.print();
            };
        };

        function smithLoaded(args) {
            window.smithchart = args.smithchart;
            args.smithchart.series[0].tooltip.visible = true;
            args.smithchart.series[0].marker = {
                shape: 'Circle',
                visible: true,
                border: {
                    width: 2,
                }
            };
            args.smithchart.series[0].points = [
                { resistance: 0.15, reactance: 0 },
                { resistance: 0.15, reactance: 0.15 },
                { resistance: 0.18, reactance: 0.3 },
                { resistance: 0.2, reactance: 0.4 },
                { resistance: 0.25, reactance: 0.6 },
                { resistance: 0.38, reactance: 0.95 },
                { resistance: 0.6, reactance: 1.25 },
                { resistance: 1, reactance: 1.6 },
                { resistance: 1.65, reactance: 1.9 },
                { resistance: 2.75, reactance: 2 },
                { resistance: 4.5, reactance: 0 },
                { resistance: 3, reactance: -2 },
                { resistance: 1.65, reactance: -1.95 },
                { resistance: 1, reactance: -1.65 },
                { resistance: 0.6, reactance: -1.25 },
                { resistance: 0.35, reactance: -0.9 },
                { resistance: 0.25, reactance: -0.6 },
                { resistance: 0.25, reactance: -0.4 },
                { resistance: 0.25, reactance: -0.3 },
                { resistance: 0.25, reactance: -0.15 },
                { resistance: 0.25, reactance: 0 },
            ];
            args.smithchart.loaded = null;
            args.smithchart.refresh();
        }
    </script>
}
<style>
    #control-container {
        padding: 0px !important;
    }

    .e-print-icon::before {
        content: '\e34b';
    }

    .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {
        content: '\e7df';
    }

    .e-view.bootstrap .e-print-icon::before {
        content: '\ebd2';
    }

    .e-view.bootstrap4 .e-print-icon::before {
        content: '\e743';
    }

    .e-view.tailwind .e-print-icon::before, .e-view.tailwind3 .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before, .e-view.tailwind3-dark .e-print-icon::before {
        content: '\e76c';
    }

    .e-view.highcontrast .e-print-icon::before {
        content: '\ebf9';
    }

    .e-view.bootstrap5\.3 .e-print-icon::before, .e-view.bootstrap5\.3-dark .e-print-icon::before {
        content: '\e75d';
    }

    .e-view.fluent .e-print-icon::before, .e-view.fluent-dark .e-print-icon::before {
        content: '\e75d';
    }

    .e-view.fluent2 .e-print-icon::before, .e-view.fluent2-dark .e-print-icon::before, .e-view.fluent2-highcontrast .e-print-icon::before {
        content: '\e75d';
    }

    .e-view.material3 .e-print-icon::before, .e-view.material3-dark .e-print-icon::before {
        content: '\e75d';
    }

    .e-export-icon::before {
        content: '\e728';
    }

    .e-view.fabric .e-export-icon::before, .e-view.fabric-dark .e-export-icon::before {
        content: '\e710';
    }

    .e-view.bootstrap4 .e-export-icon::before {
        content: '\e780';
    }

    .e-view.tailwind-dark .e-export-icon::before, .e-view.tailwind3-dark .e-export-icon::before, .e-view.tailwind .e-export-icon::before, .e-view.tailwind3 .e-export-icon::before {
        content: '\e7bf';
    }

    .e-view.highcontrast .e-export-icon::before {
        content: '\e710';
    }

    .e-view.bootstrap5\.3 .e-export-icon::before, .e-view.bootstrap5\.3-dark .e-export-icon::before {
        content: '\e72e';
    }

    .e-view.fluent .e-export-icon::before, .e-view.fluent-dark .e-export-icon::before {
        content: '\e72e';
    }

    .e-view.fluent2 .e-export-icon::before, .e-view.fluent2-dark .e-export-icon::before, .e-view.fluent2-highcontrast .e-export-icon::before {
        content: '\e72e';
    }

    .e-view.material3 .e-export-icon::before, .e-view.material3-dark .e-export-icon::before {
        content: '\e72e';
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Print & Export in ASP.NET Core SmithChart control. Explore here for more details."/>
                }
@section ActionDescription{
   <div id="action-description">
        <p>
            This sample explores the exporting and printing functionality in smith chart.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to export and print the rendered smith chart. Smith chart can be exported to JPEG, PNG, SVG and PDF formats.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core SmithChart Print & Export Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Print & Export in ASP.NET Core SmithChart Control</h1>
                }