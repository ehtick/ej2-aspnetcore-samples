@page

@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.LinearGauge.LinearGaugeLabel { Font = new Syncfusion.EJ2.LinearGauge.LinearGaugeFont { FontFamily = "inherit", Size = "0px" } };
    }
    <div class="control-section">
        <div style="justify-content: center; display: flex; align-items: center;">
            <ejs-lineargauge load="gaugeLoad" id='container' background='Transparent' style='display:block;'
                         orientation='Horizontal' width='200px'>
                <e-lineargauge-container Type="RoundedRectangle" Width="58">
                    <e-container-border Width=5></e-container-border>
                </e-lineargauge-container>
                <e-lineargauge-axes>
                    <e-lineargauge-axis Minimum="0" Maximum="60" labelStyle="labelFont">
                        <e-axis-majorticks Interval="15" Height="0"></e-axis-majorticks>
                        <e-axis-minorticks Interval="5" Height="0"></e-axis-minorticks>
                        <e-axis-line Width="0"></e-axis-line>
                        <e-lineargauge-pointers>
                            <e-lineargauge-pointer Width=0></e-lineargauge-pointer>
                        </e-lineargauge-pointers>
                        <e-lineargauge-ranges>
                            <e-lineargauge-range Start="3" End="14" Color="#66BB6A" StartWidth="45" EndWidth="45" Offset="52"></e-lineargauge-range>
                            <e-lineargauge-range Start="16" End="29" Color="#66BB6A" StartWidth="45" EndWidth="45" Offset="52"></e-lineargauge-range>
                            <e-lineargauge-range Start="31" End="44" Color="#66BB6A" StartWidth="45" EndWidth="45" Offset="52"></e-lineargauge-range>
                        </e-lineargauge-ranges>
                    </e-lineargauge-axis>
                </e-lineargauge-axes>
                <e-lineargauge-annotations>
                    <e-lineargauge-annotation X="0" Y="0" AxisValue=60 AxisIndex=0 ZIndex="1"></e-lineargauge-annotation>
                    <e-lineargauge-annotation X="0" Y="0" AxisValue=0 AxisIndex=0 ZIndex="1"></e-lineargauge-annotation>
                </e-lineargauge-annotations>
            </ejs-lineargauge>
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
}

<script>
    var textColor, borderColor;
    window.gaugeLoad = function (args) {
    @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
    @* custom code end *@
        borderColor = args.gauge.theme.indexOf('Dark') > -1 ? 'white' : '#bfbfbf';
        textColor = args.gauge.theme.indexOf('Dark') > -1 || args.gauge.theme.indexOf('HighContrast') > -1 ? '#FFFFFF' : '#000000';
        if (args.gauge.theme == 'Bootstrap5Dark' || args.gauge.theme == 'TailwindDark' || args.gauge.theme == 'Tailwind3Dark') {
            borderColor = "#4b5563";
        }
        if (args.gauge.theme == 'FabricDark' || args.gauge.theme == 'BootstrapDark' || args.gauge.theme == 'MaterialDark' || args.gauge.theme == 'HighContrast' || args.gauge.theme == 'Material' || args.gauge.theme == 'Fabric' || args.gauge.theme == 'Bootstrap') {
            borderColor = "#bfbfbf";
        }
        if (args.gauge.theme == 'Fluent' || args.gauge.theme == 'Fluent2') {
            borderColor = "#EDEBE9";
        }
        if (args.gauge.theme == 'FluentDark' || args.gauge.theme == 'Fluent2Dark' || args.gauge.theme == 'Fluent2HighContrast') {
            borderColor = "#292827";
        }
        if (args.gauge.theme == 'Bootstrap5' || args.gauge.theme == 'Tailwind' || args.gauge.theme == 'Tailwind3') {
            borderColor = "#E5E7EB";
        }
        args.gauge.annotations[0].content = "<div style='width: 16px;height: 37px;border: 5px solid " + borderColor + ";margin-left:26px;margin-top:57px;border-radius: 6px;' />";
        args.gauge.annotations[1].content = "<div style='width: 137px;font-size: 20px;margin-top:150px;margin-left:40px;color:" + textColor + ";'>Charged: 75%</div>";
    }
</script>

@section Meta{
    <meta name="description" content="This example demonstrates the Battery Indicator in ASP.NET Core LinearGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows the battery indicator charged up to 75% by utilizing the linear gauge's functionalities.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure a linear gauge to look like a battery indicator. This can be accomplished by combining axis, pointer, multiple ranges, and multiple annotation.
        </p>
        <p>
            More information on the linear gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/linear-gauge/getting-started" aria-label="documentation section">documentation section</a>.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Battery Indicator Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Battery Indicator in ASP.NET Core LinearGauge Control</h1>
                }
