@page

@using Syncfusion.EJ2;
@section Meta{
    <meta name="description" content="This example demonstrates the Tooltip in ASP.NET Core LinearGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample depicts the linear gauge as a measuring scale and shows the tooltip in the linear gauge.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The tooltip is used to track the current value that is closest to the mouse position or touch contact. When using a touch-enabled device, the tooltip is displayed by hovering or tapping.
            <br>
        <p>
            More information about tooltip can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/linear-gauge/user-interaction#tooltip" aria-label="documentation section">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.LinearGauge.LinearGaugeFont { FontFamily = "inherit" };
    }
    <div class="control-section" style="border-right:0px;">
        <div class="content-wrapper">
            <ejs-lineargauge id="tooltipContainer" load="gaugeLoad" orientation="Horizontal" background="Transparent" axisLabelRender="labelRender"
                             tooltipRender="renderTooltip" loaded="gaugeLoaded" resized="gaugeResized">
                <e-lineargauge-container Width=140 >
                    <e-container-border width=2 color="#a6a6a6"></e-container-border>
                </e-lineargauge-container>
                <e-lineargauge-tooltip Enable="true" showAtMousePosition=true textStyle=labelFont></e-lineargauge-tooltip>
                <e-lineargauge-axes>
                    <e-lineargauge-axis maximum="10" minimum="0">
                        <e-axis-labelstyle font="labelFont"></e-axis-labelstyle>
                        <e-axis-majorticks interval="1" color="#9E9E9E" height="20"></e-axis-majorticks>
                        <e-axis-minorticks height="10" interval=0.2 color="#9E9E9E"></e-axis-minorticks>
                        <e-axis-line offset="140" color="#a6a6a6"></e-axis-line>
                        <e-lineargauge-pointers>
                            <e-lineargauge-pointer Type="Bar" Value="5.4" Offset="15" Color="#ff66b3"></e-lineargauge-pointer>
                    </e-lineargauge-pointers>
                    </e-lineargauge-axis>
                    <e-lineargauge-axis opposedPosition="true" minimum="0" maximum="25">
                        <e-axis-labelstyle font="labelFont"></e-axis-labelstyle>
                        <e-axis-majorticks interval="1" color="#9E9E9E" height="20"></e-axis-majorticks>
                        <e-axis-minorticks height="10" interval=0.2 color="#9E9E9E"></e-axis-minorticks>
                        <e-axis-line offset="-140" color="#a6a6a6"></e-axis-line>
                        <e-lineargauge-pointers>
                            <e-lineargauge-pointer Type="Bar" Value="16.5" Offset="-15" Color="#4d94ff"></e-lineargauge-pointer>
                    </e-lineargauge-pointers>
                    </e-lineargauge-axis>
                </e-lineargauge-axes>
                <e-lineargauge-annotations>
                    <e-lineargauge-annotation Content='<div id="first"><h1 style="font-size:15px;color:#686868;">Inches</h1></div>' X="35" Y="-58" AxisValue=5.4 AxisIndex=0 ZIndex="1"></e-lineargauge-annotation>
                    <e-lineargauge-annotation Content='<div id="second"><h1 style="font-size:15px;color:#686868;">Centimeters</h1></div>' X="50" Y="52" AxisValue=16.5 AxisIndex=1 ZIndex="1"></e-lineargauge-annotation>
                </e-lineargauge-annotations>
            </ejs-lineargauge>
        </div>
    </div>
}
<script>
     var gauge;
    window.gaugeLoad = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
        @* custom code end *@
         gauge = args.gauge;
         var width = parseInt(((this.width, this.element.offsetWidth) || this.element.offsetWidth || 600), 10);
         if (width < 500) {
             gaugeMobileSize();
         }
         else {
             gaugeDesktopSize();
        }
        if (args.gauge.theme.toLowerCase().indexOf('dark') > 1 || args.gauge.theme.toLowerCase().indexOf('highcontrast') > -1) {
            args.gauge.annotations[0].content = '<div id="first"><h1 style="font-size:15px; color: #DADADA;font-family: Segoe UI">Inches</h1></div>';
            args.gauge.annotations[1].content = '<div id="second"><h1 style="font-size:15px; color: #DADADA;font-family: Segoe UI">Centimeters</h1></div>';
        }

    }
    function renderTooltip(args) {
        args.content = (args.axis.visibleRange.max === 25) ? args.content + ' cm' : args.content + ' in';
    }
    function labelRender(args) {
        if (args.axis.visibleRange.min === args.value || args.axis.visibleRange.max === args.value) {
            args.text = '';
        }
    }
    function gaugeMobileSize() {
        gauge.axes[1].majorTicks.interval = 2;
        gauge.axes[1].minorTicks.interval = 1;
        gauge.orientation = 'Vertical';
        gauge.annotations[0].x = -57;
        gauge.annotations[0].y = -30;
        gauge.annotations[1].x = 50;
        gauge.annotations[1].y = -45;
    }
    function gaugeDesktopSize() {
        gauge.axes[1].majorTicks.interval = 1;
        gauge.axes[1].minorTicks.interval = 0.2;
        gauge.orientation = 'Horizontal';
        gauge.annotations[0].x = 35;
        gauge.annotations[0].y = -58;
        gauge.annotations[1].x = 50;
        gauge.annotations[1].y = 52;
    }
    function gaugeResized(args) {
        if (args.currentSize.width < 500) {
            gaugeMobileSize();
        }
        else {
            gaugeDesktopSize();
        }
    }

    function gaugeLoaded(args) {
        if (document.getElementById('tooltipContainer')) {
            if (gauge.availableSize.width < 500) {
                document.getElementById('tooltipContainer_Annotation_0').style.transform = 'rotate(270deg)';
                document.getElementById('tooltipContainer_Annotation_1').style.transform = 'rotate(270deg)';
            }
            else {
                document.getElementById('tooltipContainer_Annotation_0').style.transform = '';
                document.getElementById('tooltipContainer_Annotation_1').style.transform = '';
            }
        }
    }
</script>
@section Title{
                    <title>ASP.NET Core LinearGauge Tooltip Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Tooltip in ASP.NET Core LinearGauge Control</h1>
                }