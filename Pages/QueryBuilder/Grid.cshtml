@page
@model EJ2CoreSampleBrowser.Pages.QueryBuilder.GridModel
@using Syncfusion.EJ2;
@using Newtonsoft.Json;
@using Syncfusion.EJ2.QueryBuilder;

@section ControlsSection{
    <div class="col-lg-12 control-section" style="min-height: auto;">
        <ejs-querybuilder id="querybuilder" width="100%" rule="@Model.rule" dataSource="@Model.dataSource" maxGroupCount=5 ruleChange="updateRule">
            <e-querybuilder-columns>
                <e-querybuilder-column field="TaskID" label="Task ID" type="number"></e-querybuilder-column>
                <e-querybuilder-column field="Name" label="Name" type="string"></e-querybuilder-column>
                <e-querybuilder-column field="Category" label="Category" type="string"></e-querybuilder-column>
                <e-querybuilder-column field="SerialNo" label="Serial No" type="string"></e-querybuilder-column>
                <e-querybuilder-column field="InvoiceNo" label="Invoice No" type="string"></e-querybuilder-column>
                <e-querybuilder-column field="Status" label="Status" type="string"></e-querybuilder-column>
            </e-querybuilder-columns>
        </ejs-querybuilder>
    </div>
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <ejs-grid id="grid" allowPaging="true" dataSource="@Model.dataSource" width="100%">
                <e-grid-pagesettings pageCount="5" pageSize="8"></e-grid-pagesettings>
                <e-grid-columns>
                    <e-grid-column field="TaskID" headerText="Task ID" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Name" headerText="Name" width="140"></e-grid-column>
                    <e-grid-column field="Category" headerText="Category" textAlign="Right" width="140"></e-grid-column>
                    <e-grid-column field="InvoiceNo" headerText="Invoice No" width="130"></e-grid-column>
                    <e-grid-column field="Status" headerText="Status" width="120"></e-grid-column>
                    <e-grid-column field="SerialNo" headerText="Serial No" width="130"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Integration With Data Grid in ASP.NET Core Query Builder control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the integration of the Data Grid component to showcase data population based on the created filters using the Query Builder component.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample illustrates how to integrate the Data Grid component with the Query Builder. The Data Grid component will be refreshed while editing the filters in Query Builder.
        </p>
        <p>
            More information about Query Builder can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/aspnetcore/documentation/querybuilder/getting-started" aria-label="Navigate to the documentation for getting started with ASP.NET Core Query Builder control">
        documentation section</a>.
            
        </p>
    </div>
}
@*custom code start*@
@section Scripts {
    <script>
    var qryBldrObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
    updateRule({rule: qryBldrObj.getValidRules(qryBldrObj.rule)});
    </script>
}

<style>
    #grid {
        margin: 0 auto;
    }

    .e-querybuilder {
        margin: 4% auto;
    }
</style>
@*custom code end*@
<script>
    function updateRule(args) {
        var dataManagerQuery
        var qryBldrObj = ej.base.getComponent(document.getElementById("querybuilder"), 'query-builder');
        var predicate = qryBldrObj.getPredicate(args.rule);
        if (ej.base.isNullOrUndefined(predicate)) {
            dataManagerQuery = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']);
         } else {
            dataManagerQuery = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']).where(predicate);
         }
            var grid = ej.base.getComponent(document.getElementById("grid"), 'grid');
            var fltrDataSource = [];

            new ej.data.DataManager(@Html.Raw(JsonConvert.SerializeObject(Model.dataSource)))
                .executeQuery(dataManagerQuery)
                .then(function (e) {
                    e.result.forEach(function (data) {
                        fltrDataSource.push(data);
                    });
                });
            grid.dataSource = fltrDataSource;
            grid.refresh();
    }
</script>
@section Title{
                    <title>ASP.NET Core Query Builder Integration With Data Grid Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Integration With Data Grid in ASP.NET Core Query Builder Control</h1>
                }