@page
@using Syncfusion.EJ2;
@using Syncfusion.EJ2.QueryBuilder;
@model EJ2CoreSampleBrowser.Pages.QueryBuilder.ComplexDatabindingModel
@section ControlsSection{
<div class="col-lg-12 control-section">
    <ejs-querybuilder id="querybuilder" width="100%" rule="@Model.rule" fieldMode="DropdownTree" separator=".">

    <e-querybuilder-columns>
        <e-querybuilder-column field="Employee" label="Employee" columns="@(
            new List<Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn>() {
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "ID", Label = "ID", Type = "number" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "DOB", Label = "Date of birth", Type = "date" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "HireDate", Label = "Hire Date", Type = "date" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "Salary", Label = "Salary", Type = "number" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "Age", Label = "Age", Type = "number" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "Title", Label = "Title", Type = "string"}
            })"></e-querybuilder-column>
        <e-querybuilder-column field="Name" label="Name" columns="@(
            new List<Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn>() {
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "FirstName", Label = "First Name", Type = "string" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "LastName", Label = "Last Name", Type = "string"}
            })">
        </e-querybuilder-column>
        <e-querybuilder-column field="Country" label="Country" columns="@(
            new List<Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn>() {
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "State", Label = "State", Type = "string" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "Region", Label = "Region", Type = "string" },
                new Syncfusion.EJ2.QueryBuilder.QueryBuilderColumn { Field = "Name", Label = "Name", Type = "string"}
            })" ></e-querybuilder-column>
    </e-querybuilder-columns>
    </ejs-querybuilder>
</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Complex Databinding in ASP.NET Core Query Builder control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the Complex Databinding functionalities of the Query Builder component. In the <b>Complex Databinding</b>, select an item from the hierarchical structure options list.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>In <b>Query Builder</b>, the Complex Databinding input field can be change neither <b>Dropdown List</b> nor <b>Dropdown Tree</b> using the <code>fieldMode</code> property.</p>
    <p>In this sample, the Complex Databinding integrated with the Dropdown Tree.</p>
        <p>
            More information about Query Builder can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/aspnetcore/documentation/query-builder/getting-started" aria-label="Navigate to the documentation for getting started with ASP.NET Core Query Builder control">
        documentation section</a>.
            
        </p>
    </div>
}
@*custom code start*@
<style>
    .e-query-builder {
        margin: 0 auto;
    }

    .tailwind3-dark .e-ddt.e-popup {
        background: #111827;
    }

    .tailwind3 .e-ddt.e-popup {
        background: white;
    }
</style>
@*custom code end*@
@section Title{
                    <title>ASP.NET Core Query Builder Complex Databinding Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Complex Databinding in ASP.NET Core Query Builder Control</h1>
                }