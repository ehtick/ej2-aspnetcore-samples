@page

@using Syncfusion.EJ2
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="content-wrapper" id="all-option-sample">
            <div class="sliderwrap">
                <ejs-slider id="slider" created="onCreated" value="30" min="0" max="100" change="onSliderChange" type="MinRange">
                    <e-slider-tooltipdata showOn="Hover" isVisible="true" placement="Before" ></e-slider-tooltipdata>
                    <e-slider-ticksdata largeStep="20" placement="After"></e-slider-ticksdata>
                </ejs-slider>
            </div>
        </div>
    </div>

    <div class="col-lg-4 property-section" id="all-option-table">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Value</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-numerictextbox id="value" created="onValueCreated" format="n0" value="30" change="change" ></ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Min</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-numerictextbox id="min" format="n0" value="0" change="min_change"></ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Max</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-numerictextbox id="max" format="n0" value="100" change="max_change"></ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%">
                        <div class="userselect">Step</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-numerictextbox id="step" format="n0" value="1" change="step_change"></ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr id="desktop-checkbox-row-1">
                    <td style="width: 50%">
                        <div class="userselect" style="padding-left: 0">
                            <ejs-checkbox id="button" checked="false" label="Show Buttons" change="button_onChange"></ejs-checkbox>
                        </div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div class="apiSlider">
                            <ejs-checkbox id="disabled" checked="false" label="Disabled" change="disabled_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr id="desktop-checkbox-row-2">
                    <td style="width: 50%;padding-right: 10px">
                        <div style="padding-left: 0;padding-top: 0">
                            <ejs-checkbox id="readOnly" checked="false" label="Readonly" change="readOnly_onChange"></ejs-checkbox>
                        </div>
                    </td>
                    <td style="width: 50%">
                        <div class="userselect" style="padding-left: 0">
                            <ejs-checkbox id="orientation" checked="false" label="Vertical Orientation" change="orientation_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr id="mobie-checkbox-row-1">
                    <td style="width: 50%">
                        <div class="userselect">Show Buttons</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-checkbox id="mb-button" checked="false" change="buttonM_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr id="mobile-checkbox-row-2">
                    <td style="width: 50%">
                        <div class="userselect">Disabled</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-checkbox id="mb-disabled" checked="false" change="disabledM_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr id="mobile-checkbox-row-3">
                    <td style="width: 50%">
                        <div class="userselect">Vertical Orientation</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-checkbox id="mb-orientation" checked="false" change="orientationM_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
                <tr id="mobile-checkbox-row-4">
                    <td style="width: 50%">
                        <div class="userselect">Readonly</div>
                    </td>
                    <td style="width: 50%;padding-right: 10px">
                        <div>
                            <ejs-checkbox id="mb-readOnly" checked="false" change="disabledM_onChange"></ejs-checkbox>
                        </div>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the API in ASP.NET Core Range Slider control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the customization of Slider component by using its properties from property pane. Select any
            combination of properties from property pane to customize Slider component.
        </p>

    </div>
}

@section Description{
    <div id="description">
        <p>In this demo, default slider is rendered with minimal configuration.</p>
        <p>This sample can be customized further with the combination of Slider properties from the property pane. For example,</p>
        <ul>
            <li>Min, max, value, and Steps can be changed from the property pane.</li>
            <li>Ticks can be enabled by selecting the ticks placement from the property pane.</li>
            <li>Tooltip can be enabled by checking Show tooltip checkbox from property pane.</li>
            <li>Vertical orientation can be enabled by checking vertical orientation from property pane and so on.</li>
        </ul>

    </div>
}

<style>
    .sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-1,
    .sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-2 {
        display: none;
    }

    .sb-mobile-prop-pane #all-option-table #mobie-checkbox-row-1,
    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-2,
    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-3,
    .sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-4 {
        display: table-row;
    }

    #all-option-table #mobie-checkbox-row-1,
    #all-option-table #mobile-checkbox-row-2,
    #all-option-table #mobile-checkbox-row-3,
    #all-option-table #mobile-checkbox-row-4 {
        display: none;
    }

    #all-option-table .property-panel-section .property-panel-content table#property tr {
        height: 50px;
    }

    #all-option-sample .e-slider-container.e-horizontal {
        margin-top: 160px;
    }

    #all-option-sample .e-slider-container.e-vertical {
        margin-left: 40%;
    }

    #all-option-sample.content-wrapper {
        height: 363px;
        width: 50%;
        margin: 0 auto;
        min-width: 185px;
    }

    .sliderwrap {
        height: 340px;
    }

    .e-bigger .content-wrapper {
        width: 50%;
    }

    .sliderwrap label {
        padding-bottom: 26px;
        font-size: 13px;
        font-weight: 500;
        margin-top: 15px;
        text-align: left;
        width: 100%;
    }

    #desktop-checkbox-row-1 .apiSlider {
        padding-left: 0;
        padding-top: 0;
    }

    .tailwind.e-bigger #desktop-checkbox-row-1 .apiSlider,
    .tailwind-dark.e-bigger #desktop-checkbox-row-1 .apiSlider {
        padding-left: 10px;
        padding-top: 10px;
    }

    .userselect {
        -webkit-user-select: none;
        /* Safari 3.1+ */
        -moz-user-select: none;
        /* Firefox 2+ */
        -ms-user-select: none;
        /* IE 10+ */
        user-select: none;
        /* Standard syntax */
    }

    body.tailwind3 .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,
    body.tailwind3-dark .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,
    body.tailwind3.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick
    body.tailwind3-dark.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick {
        top: 0px;
    }
</style>

<script type="text/javascript">
    var sliderObj;
    var valueObj;

    function onCreated(args) {
        if(document.getElementById('right-pane')) {
        document.getElementById('right-pane').addEventListener('scroll', onScroll);
        }
        sliderObj = document.getElementById("slider").ej2_instances[0];
    }
    function onValueCreated(args) {
        valueObj = document.getElementById("value").ej2_instances[0];
    }
    function onSliderChange(args) {
        valueObj.value = args.value;
    }
    function change(args) {
        sliderObj.value = args.value;
    }
    function min_change(args) {
        sliderObj.min = args.value;
    }
    function max_change(args) {
        sliderObj.max = args.value;
    }
    function step_change(args) {
        sliderObj.step = args.value;
    }

    function button_onChange(args) {
        sliderObj.showButtons = args.checked;
    }
    function orientation_onChange(args) {
        args.checked ? sliderObj.orientation = 'Vertical' : sliderObj.orientation = 'Horizontal';
    }
    function readOnly_onChange(args) {
        sliderObj.readonly = args.checked;
    }
    function disabled_onChange(args) {
        sliderObj.enabled = !args.checked;
    }

    function buttonM_onChange(args) {
        sliderObj.showButtons = args.checked;
    }
    function orientationM_onChange(args) {
        args.checked ? sliderObj.orientation = 'Vertical' : sliderObj.orientation = 'Horizontal';
    }
    function readOnlyM_onChange(args) {
        sliderObj.readonly = args.checked;
    }
    function disabledM_onChange(args) {
        sliderObj.enabled = !args.checked;
    }
    function onScroll() {
        var slider = [sliderObj];
        slider.forEach(function (slider) {
            // Refreshing each slider tooltip object position
            slider.refreshTooltip(slider.tooltipTarget);
        });
    }


</script>
@section Title{
                    <title>ASP.NET Core Range Slider API Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of API in ASP.NET Core Range Slider Control</h1>
                }
