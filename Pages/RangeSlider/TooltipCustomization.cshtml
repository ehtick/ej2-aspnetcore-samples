@page

@using Syncfusion.EJ2
@{
    var timeValue = new decimal[] { 1373697000000, 1373718600000 };
}
@section ControlsSection{
    <div class="control-section">
        <div class="slider-content-wrapper content-wrapper">
            <div class="sliderwrap">
                <label class="labeltext userselect">Background color</label>
                <ejs-slider id="default" type="Range" tooltipChange="tooltipChangeHandler" renderingTicks="renderingTicksHandler" value=timeValue min="1373693400000" max="1373736600000" step="600000">
                    <e-slider-tooltipdata placement="Before" isVisible="true" cssClass="e-tooltip-cutomization"></e-slider-tooltipdata>
                    <e-slider-ticksdata placement="After" largeStep="10800000" smallStep="3600000" showSmallTicks="true"></e-slider-ticksdata>
                </ejs-slider>
            </div>
            <div class="sliderwrap">
                <label class="labeltext userselect">Color and text</label>
                <ejs-slider id="out" type="MinRange" tooltipChange="tooltipChangeHandler" renderingTicks="renderingTicksHandler"  created="onCreated" value=1373715000000  min="1373693400000" max="1373736600000" step="600000">
                    <e-slider-tooltipdata placement="Before" isVisible="true" cssClass="e-tooltip-cutomization"></e-slider-tooltipdata>
                    <e-slider-ticksdata placement="After" largeStep="10800000" smallStep="3600000" showSmallTicks="true"></e-slider-ticksdata>
                </ejs-slider>
            </div>
        </div>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Tooltip in ASP.NET Core Range Slider control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the customization of Slider's tooltip. Drag the thumb over the bar for selecting the values
            between min and max.
        </p>

    </div>
}

@section Description{
    <div id="description">
        <p>In this demo, customization of tooltip using CSS is demonstrated.</p>
        <ul>
            <li>Background color - In this sample, tooltip has been customized to custom color.</li>
            <li>Color and text - In this sample, tooltip and its content has been customized to custom color.</li>
        </ul>
    </div>
}

<style>

    .sliderwrap .label-text {
        padding-bottom: 26px;
        font-size: 13px;
        font-weight: 500;
        margin-top: 15px;
    }

    .slider-content-wrapper.content-wrapper {
        width: 40%;
        margin: 0 auto;
        min-width: 185px;
    }

    .sliderwrap {
        margin-top: 40px;
        margin-bottom: 40px;
    }

    #default .e-handle,
    #out .e-handle,
    .bootstrap #out .e-handle,
    .bootstrap #default .e-handle,
    .fabric #out .e-handle,
    .fabric #default .e-handle,
    .highcontrast #out .e-handle,
    .highcontrast #default .e-handle {
        background-color: #ffd939;
        border-color: #ffd939;
        z-index: 1;
    }

    .e-bigger .content-wrapper {
        width: 80%;
    }

    .sliderwrap label {
        padding-bottom: 26px;
        font-size: 13px;
        font-weight: 500;
        margin-top: 15px;
    }

    .userselect {
        -webkit-user-select: none;
        /* Safari 3.1+ */
        -moz-user-select: none;
        /* Firefox 2+ */
        -ms-user-select: none;
        /* IE 10+ */
        user-select: none;
        /* Standard syntax */
    }

    body.tailwind3 .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,
    body.tailwind3-dark .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick,
    body.tailwind3.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick
    body.tailwind3-dark.e-bigger .sliderwrap .e-tick-after.e-scale.e-h-scale .e-tick {
        top: 0px;
    }

    .e-slider-tooltip.e-tooltip-wrap.e-popup.e-slider-tooltip .e-tip-content,
    .e-slider-tooltip.e-tooltip-wrap.e-popup.e-material-range .e-tip-content.e-material-tooltip-show {
        color: #333;
    }

    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup .e-arrow-tip-inner{
        color: #ffd939;
    }

    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup .e-arrow-tip-outer {
        border-top-color: #ffd939;
    }

    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup .e-arrow-tip-outer {
        border-bottom-color: #ffd939;
    }

    .e-slider-container .e-slider#default .e-range,
    .e-slider-container .e-slider#out .e-range {
        background-color: #0375be;
        z-index: unset;
    }
    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup.e-material-default.e-slider-horizontal-after,
    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup.e-material-default.e-slider-horizontal-before,
    .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup {
        background-color: #ffd939;
        border-color: #ffd939;
    }

    .bootstrap .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup .e-arrow-tip-outer {
        border-top-color: #ffd939;
    }
 
    .bootstrap .e-tooltip-cutomization.e-slider-tooltip.e-tooltip-wrap.e-popup .e-arrow-tip-inner {
        color: #ffd939;
    }

    body.fluent2-highcontrast .sliderwrap .e-scale,
    body.fluent2 .sliderwrap .e-scale,
    body.fluent2-dark .sliderwrap .e-scale {
        top: 2px;
    }

</style>
<script type="text/javascript">
    function tooltipChangeHandler(args) {
        /**
        * toLocaleTimeString is predefined javascript date function, which is used to
        * customize the date in different format
        */
        let custom = { hour: '2-digit', minute: '2-digit' };
        // Splitting the range values from the tooltip using space into an array.
        if (args.text.indexOf('-') !== -1) {
            let totalMiliSeconds = args.text.split(' ');
            // First part is the first handle value
            let firstPart = totalMiliSeconds[0];
            // Second part is the second handle value
            let secondPart = totalMiliSeconds[2];

            firstPart = new Date(Number(firstPart)).toLocaleTimeString('en-us', custom);
            secondPart = new Date(Number(secondPart)).toLocaleTimeString('en-us', custom);
            // Assigning our custom text to the tooltip value.
            args.text = firstPart + ' - ' + secondPart;
        } else {
            args.text = 'Until ' + new Date(Number(args.text)).toLocaleTimeString('en-us', custom);
        }
    }

    function renderingTicksHandler(args) {
        let totalMiliSeconds = Number(args.value);
        /**
         * toLocaleTimeString is predefined javascript date function, which is used to
         * customize the date in different format
         */
        let custom = { hour: '2-digit', minute: '2-digit' };
        // Assigning our custom text to the tick value.
        args.text = new Date(totalMiliSeconds).toLocaleTimeString('en-us', custom);
    }
    let timeObj;
    let demo;
    let source;
    let outObj;
    function onCreated() {
        outObj = document.getElementById("out").ej2_instances[0];
        if(document.getElementById('right-pane')) {
        document.getElementById('right-pane').addEventListener('scroll', onScroll);
        }
        outObj.keyUp({ keyCode: 9, target: outObj.firstHandle });
        outObj.firstHandle.focus();
    }

    // Handler used to reposition the tooltip on page scroll
    function onScroll() {
        timeObj = document.getElementById("default").ej2_instances[0];
        outObj = document.getElementById("out").ej2_instances[0];
        timeObj.refreshTooltip(timeObj.tooltipTarget);
        outObj.refreshTooltip(outObj.tooltipTarget);
    }


</script>
@section Title{
                    <title>ASP.NET Core Range Slider Tooltip Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Tooltip in ASP.NET Core Range Slider Control</h1>
                }
