@model string
<div style="display: flex;">
    <ejs-menu id=@(Model + "_menu") items="@ViewData["menuItems"]" select="selectHandler"></ejs-menu>
</div>
@*<script>
    var breadcrumbItems = [
        {
            iconCss: 'e-bicons e-picture'
        },
        {
            text: 'This PC'
        },
        {
            text: 'Local Disk (C:)'
        },
        {
            text: 'Users'
        },
        {
            text: 'Admin'
        },
        {
            text: 'Pictures'
        }
    ];

    var items = [
        {
            text: 'OneDrive', type: 'onedrive',
            items: [
                { text: 'Documents', type: 'folder' },
                { text: 'Email attachments', type: 'folder' },
                { text: 'Music', type: 'folder' },
                { text: 'Pictures', type: 'folder' }
            ]
        },
        {
            text: 'This PC', type: 'desktop',
            items: [
                { text: 'Desktop', type: 'desktop' },
                {
                    text: 'Documents', type: 'documents', items: [
                        {
                            text: 'IISExpress', type: 'folder', items: [
                                { text: 'config', type: 'folder' }
                            ]
                        },
                        {
                            text: 'Visual Studio 2019', type: 'folder', items: [
                                { text: 'Code Snippets', type: 'folder' },
                                { text: 'Templates', type: 'folder' },
                                { text: 'Visualizers', type: 'folder' }
                            ]
                        }
                    ]
                },
                { text: 'Downloads', type: 'downloads' },
                {
                    text: 'Local Disk (C:)', type: 'folder', items: [
                        {
                            text: 'Microsoft', type: 'folder'
                        },
                        {
                            text: 'Program Files', type: 'folder', items: [
                                {
                                    text: 'Git', type: 'folder', items: [
                                        { text: 'bin', type: 'folder' },
                                        { text: 'cmd', type: 'folder' },
                                        { text: 'dev', type: 'folder' }
                                    ]
                                },
                                {
                                    text: 'Google', type: 'folder', items: [
                                        { text: 'Chrome', type: 'folder' }
                                    ]
                                },
                                {
                                    text: 'Internet Explorer', type: 'folder', items: [
                                        { text: 'en-US', type: 'folder' }
                                    ]
                                }
                            ]
                        },
                        {
                            text: 'Program Files (x86)', type: 'folder', items: [
                                {
                                    text: 'Microsoft', type: 'folder', items: [
                                        { text: 'Edge', type: 'folder' }
                                    ]
                                },
                                { text: 'MSBuild', type: 'folder' },
                                { text: 'Windows Defender', type: 'folder' }
                            ]
                        },
                        {
                            text: 'Users', type: 'folder', items: [
                                {
                                    text: 'Admin', type: 'folder', items: [
                                        { text: 'Desktop', type: 'desktop' },
                                        { text: 'Documents', type: 'documents' },
                                        { text: 'Downloads', type: 'downloads' },
                                        { text: 'Pictures', type: 'picture' }
                                    ]
                                },
                                { text: 'Public', type: 'folder' }
                            ]
                        },
                        {
                            text: 'Windows', type: 'folder', items: [
                                { text: 'Boot', type: 'folder' },
                                {
                                    text: 'System32', type: 'folder', items: [
                                        { text: 'Configuration', type: 'folder' },
                                        { text: 'LogFiles', type: 'folder' }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                { text: 'Local Disk (D:)', type: 'folder' }
            ]
        },
        { text: 'Libraries', type: 'folder' },
        { text: 'Network', type: 'network' },
        { text: 'Recycle Bin', type: 'recyclebin' }
    ];

    function selectHandler(args) {
        for (var i = 0; i < breadcrumbItems.length; i++) {
            if (breadcrumbItems[i].text === args.item.text) {
                breadcrumbItems = breadcrumbItems.slice(0, i + 1);
                breadcrumbItems[0].iconCss = 'e-bicons e-' + getItems(args.item.text, true)[0].items.type;
                var breadcrumbObj = ej.base.getComponent(document.getElementById('address-bar'), 'breadcrumb');
                breadcrumbObj.items = breadcrumbItems;
                break;
            }
        }
    }

    function subMenuSelectHandler(args) {
        if (!args.element.parentElement.classList.contains('e-menu') && this.items[0] && this.items[0].items) {
            var idx;
            for (var i = 0; i < this.items[0].items.length; i++) {
                for (var j = 0; j < breadcrumbItems.length; j++) {
                    if (this.items[0].items[i].text === breadcrumbItems[j].text) {
                        idx = j;
                    }
                }
            }
            if (idx) {
                breadcrumbItems = breadcrumbItems.slice(0, idx);
            }
            breadcrumbItems[0].iconCss = 'e-bicons e-' + args.item.type;
            breadcrumbItems.push({ text: args.item.text });
            var breadcrumbObj = ej.base.getComponent(document.getElementById('address-bar'), 'breadcrumb');
            breadcrumbObj.items = breadcrumbItems;
        }
    }

    function beforeOpen() {
        this.element.classList.add('e-open');
    }

    function onClose() {
        this.element.classList.remove('e-open');
    }

    function getItems(text, needParent) {
        var mItems = [].slice.call(items);
        var isBreaked;
        if (!text) {
            mItems = getSubMenuItems(mItems);
        }
        else {
            for (var i = 1; i < breadcrumbItems.length; i++) {
                for (var j = 0; j < mItems.length; j++) {
                    if (mItems[j].text === breadcrumbItems[i].text) {
                        if (mItems[j].text === text) {
                            if (needParent) {
                                mItems = mItems[j];
                            } else {
                                mItems = getSubMenuItems(mItems[j].items);
                            }
                            isBreaked = true;
                        } else {
                            mItems = mItems[j].items;
                            j = 0;
                        }
                        break;
                    }
                }
                if (isBreaked) {
                    break;
                }
            }
        }
        return [{ items: mItems }];
    }

    function getSubMenuItems(mItems) {
        var subItems;
        if (mItems) {
            subItems = [];
            for (var i = 0; i < mItems.length; i++) {
                subItems.push({ text: mItems[i].text, type: mItems[i].type });
            }
        }
        return subItems;
    }
</script>*@
<ejs-scripts></ejs-scripts>

