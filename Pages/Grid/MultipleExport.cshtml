@page
@model EJ2CoreSampleBrowser.Pages.Grid.MultipleExportModel
@using System.Linq
@using System.Text.Json
@{
    ViewData["Title"] = "Multiple Exporting";
    string[] exportGrids = { "MasterGrid", "DetailGrid" };
}


@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control-section">
<div>
<p class="e-mastertext">Master Grid</p>
    <ejs-grid id="MasterGrid" dataSource="@Model.CustomerDataSource" allowExcelExport="true" allowPdfExport="true" exportGrids="exportGrids"
    toolbarClick="toolbarClick" selectedRowIndex="1" toolbar="@(new List<string>() {"ExcelExport", "PdfExport"})" rowSelected="selected">
        <e-grid-columns>
            <e-grid-column field="CustomerID" headerText="Customer ID" width="150"></e-grid-column>
            <e-grid-column field="CompanyName" headerText="Company Name" width="150"></e-grid-column>
            <e-grid-column field="Address" headerText="Address" width="150"></e-grid-column>
            <e-grid-column field="Country" headerText="Country" width="150"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>

</div>
<p><div class='e-statustext'> Showing orders of Customer ID:  <b id=key></b></div></p>
<div>
    <ejs-grid id="DetailGrid" allowSelection="false" allowExcelExport="true" allowPdfExport="true" dataSource="@Model.DataSource">
        <e-grid-columns>
            <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="150"></e-grid-column>
            <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="150"></e-grid-column>
            <e-grid-column field="ShipName" headerText="Ship Name" width="150"></e-grid-column>
            <e-grid-column field="ShipCountry" headerText="Ship Country" width="150"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
    </div>
        </div>
        </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tbody>
                <tr>
                    <td style="width: 60%">
                        <div style="padding-left: 0px">Export grids in same sheet</div>
                    </td>
                    <td style="width: 30%;padding-bottom: 10px">
                        <div>
                            <ejs-checkbox id="checkbox" checked="true"></ejs-checkbox>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>


        <script>

 function selected(args) {
            var selectedRecord = args.data;
                        var data = @Html.Raw(JsonSerializer.Serialize(@Model.DataSource));
                        var CustomerID = args.data.CustomerID;
                        var detaildata = new ej.data.DataManager(data).executeLocal(new ej.data.Query().where("CustomerID", "equal", CustomerID, false).take(10));
            var grid = document.getElementById("DetailGrid").ej2_instances[0];
                        document.getElementById('key').innerHTML = selectedRecord.CustomerID;
            grid.dataSource = new ej.data.DataManager(detaildata.slice(0, 5)).dataSource.json;
        }

            var newSheetExcelProperties = {
                multipleExport: { type: 'NewSheet' }
            };
            var sameSheetPdfProperties = {
                multipleExport: { type: "AppendToPage", blankSpace: 10 }
            };
            function toolbarClick(args) {
                var mastergrid = document.getElementById("MasterGrid").ej2_instances[0];
                if (document.getElementById("checkbox").ej2_instances[0].checked) {
                    if (args.item.id === 'MasterGrid_excelexport') {
                        mastergrid.excelExport({}, true);
                    }
                    if (args.item.id === 'MasterGrid_pdfexport') {
                        mastergrid.pdfExport(sameSheetPdfProperties, true);
                    }
                }
                else {
                    if (args.item.id === 'MasterGrid_excelexport') {
                        mastergrid.excelExport(newSheetExcelProperties, true);
                    }
                    if (args.item.id === 'MasterGrid_pdfexport') {
                        mastergrid.pdfExport({}, true);
                    }
                }
            }
        </script>


    }

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the client-side exporting of mutliple grids, which allows you to export the data of
            multiple grids in the same or different pages to Excel and PDF formats.
        </p>
    </div>
}

@section Description{
<div id='description'>
    <p>Data Grids support client-side exporting which allows you to export data to Excel and PDF formats.</p>
    <p>Multiple grids can be exported by providing their <code>IDs</code> in the <code>exportGrids</code> property.</p>
    <p>In this demo, Excel and PDF exports are enabled in both grids by setting the <code>allowExcelExport</code> and
        <code>allowPdfExport</code> properties to true. In the master grid, the grid IDs are listed in the
        <code>exportGrids</code> property which can be exported to Excel and PDF formats by clicking the toolbar buttons.
    </p>
    <p>The ExcelExport and PdfExport items are defined in the toolbar of the Grid. Actions are defined in
        the <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#toolbarclick" aria-label="Navigate to the toolbarClick event reference for ASP.NET Core Grid control">toolbarClick</a></code> event
        to export Grid data using <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#excelexport" aria-label="Navigate to the excelExport method reference for ASP.NET Core Grid control">excelExport</a></code>
        and <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#pdfexport" aria-label="Navigate to the pdfExport method reference for ASP.NET Core Grid control">pdfExport</a></code> methods.
    </p>
    <p>By default, in this demo grids are exported on the same page. They can be exported in separate pages by
        unchecking the checkbox. This can be achieved by setting the multipleExport <code>type</code> of
        <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/excelExportProperties" aria-label="Navigate to the reference for ExcelExportProperties API in JavaScript (ES5) Grid API control">ExcelExportProperties</a></code>
        and <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/pdfExportProperties" aria-label="Navigate to the reference for PdfExportProperties API in JavaScript (ES5) Grid API control">PdfExportProperties.</a></code>
    </p>

    <p>
        More information on the exporting configuration can be found in this <a target="_blank"
        href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/excel-export/excel-exporting" aria-label="Navigate to the documentation for Excel Export in ASP.NET Core Grid control">Excel-export</a>
        and <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/pdf-export/pdf-export" aria-label="Navigate to the documentation for PDF Export in ASP.NET Core Grid control">PDF-export</a > Documentation sections.
    </p>
</div>
}
    @section Title{
                    <title>ASP.NET Core Data Grid Multiple Exporting Example - Syncfusion Demos </title>
                }
    @section Header{
                    <h1 class='sb-sample-text'>Example of Multiple Exporting in ASP.NET Core Data Grid Control</h1>
                }
<style>
    .e-statustext,
    .e-mastertext {
        font-size: 15px;
        padding: 1em;
        font-family: Roboto;
        opacity: 0.87;
    }
</style>