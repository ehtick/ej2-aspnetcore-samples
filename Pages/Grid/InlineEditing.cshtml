@page
@model EJ2CoreSampleBrowser.Pages.Grid.InlineEditingModel
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <ejs-grid id="Grid" dataSource="@Model.DataSource" allowSorting="true" allowFiltering="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" allowPaging="true" actionBegin="actionBegin" cssClass="e-css">
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" newRowPosition="Top" showAddNewRow="true" ></e-grid-editSettings>
            <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" validationRules="@(new { required=true, number=true})" width="140"></e-grid-column>
                <e-grid-column field="CustomerID" headerText="Customer Name" validationRules="@(new { required=true, minLength=5})" width="150"></e-grid-column>
                <e-grid-column field="Freight" headerText="Freight" validationRules="@(new { required=true, min=0})" textAlign="Right" editType="numericedit" format="C2" width="140"></e-grid-column>
                <e-grid-column field="OrderDate" headerText="Order Date" editType="datetimepickeredit" customFormat="@(new {type = "datetime", format = "M/d/y hh:mm a" })" width="160"></e-grid-column>
                <e-grid-column field="ShipCountry" headerText="Ship Country" editType="dropdownedit" width="150"></e-grid-column>
                <e-grid-column field="Verified" headerText="Verified" editType="booleanedit" displayAsCheckBox="true" type="boolean" width="100"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr>
                <td style="width: 40%">
                    <div style="padding-top: 7px">Add New Row Position</div>
                </td>
                <td style="width: 60%;padding-right: 10px">
                    <div id='typeddl'>
                        <ejs-dropdownlist id="newRowPosition" dataSource="@Model.ddDataSource" value="@("Top")" change="rowPositionChange" popupHeight="220px"></ejs-dropdownlist>
                    </div>
                </td>
            </tr>
        </table>
    </div>

   <script>

       function rowPositionChange(args) {
           var grid = document.getElementById("Grid").ej2_instances[0];
           grid.editSettings.newRowPosition = this.value;
           grid.refresh();
       }

       function actionBegin(args) {
            var grid = document.getElementById("Grid").ej2_instances[0];
            if (args.requestType === 'save') {
                if (grid.pageSettings.currentPage !== 1 && grid.editSettings.newRowPosition === 'Top') {
                    args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - grid.pageSettings.pageSize;
                } else if (grid.editSettings.newRowPosition === 'Bottom') {
                    args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - 1;
                }
            }
       }

    </script>

    <style>
        #typeddl {
            min-width: 100px;
        }
    </style>
}
@section ActionDescription{
	<div id="action-description">
		 <p>In this demo, you can edit the currently selected record by changing the state of the corresponding record to edit. You can carry out the following CRUD operations:</p>
         <ul>
            <li><code>Add</code> -  To add a new record, click the add toolbar button. </li>
            <li><code>Edit</code> - To edit record, double click a cell. </li>
            <li><code>Delete</code> - To delete a record, click the toolbar delete button after selecting a row. </li>
            <li><code>Update</code> and <code>Cancel</code> - Save or discard changes by clicking the toolbar update and cancel button respectively.</li>
        </ul>
        <p>By default, a new row will be added at the top of the grid. You can change it by setting <code>editSettings.newRowPosition</code> as <code>Bottom</code></p>
        </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Inline Editing in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p> Grid supports CRUD operations. This CRUD operations can be configured using
            <code>editSettings</code>. It also has the following modes to manipulate the datasource.
        </p>
        <ul>
            <li><code>Normal</code></li>
            <li><code>Dialog</code></li>
            <li><code>Batch</code></li>
        </ul>
        <p>
            In the normal edit mode, when you start editing the currently selected record is changed to edit state. You can edit any row by double clicking it or clicking the toolbarâ€™s
            <code>Edit</code> button. You can change the row values and save edited data to the data source.
        </p>
        <p>
            In order to add a new record easily, the grid content always displays a blank "add new row".
            You can enable this feature by setting the <code>showAddNewRow</code> property of <code>editSettings</code> to true.
        </p>
        <p>
            More information on the inline editing can be found in this
            <a target="_blank"
              href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/editing/in-line-editing" aria-label="Navigate to the documentation for Inline Editing in ASP.NET Core Grid control">
              documentation section</a>.
          </p>
	</div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Inline Editing Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inline Editing in ASP.NET Core Data Grid Control</h1>
                }
