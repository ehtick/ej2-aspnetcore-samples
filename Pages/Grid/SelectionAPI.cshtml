@page
@model EJ2CoreSampleBrowser.Pages.Grid.SelectionAPIModel
@{
    ViewData["Title"] = "SelectionAPI";
}

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                <ejs-grid id="Grid" dataSource="@Model.datasource" allowSelection="true" allowPaging="true" allowSorting="true" allowFiltering="true">
                    <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                    <e-grid-pagesettings pageCount="2"></e-grid-pagesettings>
                    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                    <e-grid-columns>
                        <e-grid-column field="Inventor" headerText="Inventor Name" width="140"></e-grid-column>
                        <e-grid-column field="NumberofPatentFamilies" headerText="No of Patent Families" width="185" textAlign="Right"></e-grid-column>
                        <e-grid-column field="Country" headerText="Country" width="120"></e-grid-column>
                        <e-grid-column field="Active" headerText="Active" width="130"></e-grid-column>
                    </e-grid-columns>
                </ejs-grid>
            </div>
            </div>
        </div>

            <div class="col-lg-4 property-section">



                <table id="property" title="Properties" style="width: 100%;">

                    <tr>
                        <td>
                            <b>Select Rows</b>
                        </td>
                    </tr>
                    <tr>
                        <td class="left-side">Start</td>
                        <td style="padding-bottom:10px">
                            <ejs-numerictextbox id="start" min="0" max="11" width="150" ></ejs-numerictextbox>

                        </td>
                    </tr>

                    <tr>
                        <td class="left-side">To</td>
                        <td style="padding-bottom:10px">
                            <ejs-numerictextbox id="to" min="0" max="11" width="150"></ejs-numerictextbox>

                        </td>
                    </tr>

                    <tr>
                        <td><b>Select Row</b></td>
                        <td style="padding-bottom:10px">
                            <ejs-button id="select" content="Select Row"></ejs-button>
                        </td>
                    </tr>
                    <tr>
                         <td><b>Clear Selection</b></td>
                        <td>
                            <ejs-button id="clear" content="Clear Selection"></ejs-button>
                        </td>
                    </tr>
                </table>
            </div>
    <script>


        document.getElementById("select").addEventListener('click', function () {

            var startNumericValue = document.getElementById("start").ej2_instances[0], toNumericValue = document.getElementById("to").ej2_instances[0];
            var gridObj = document.getElementById("Grid").ej2_instances[0];
            gridObj.selectionModule.selectRowsByRange(startNumericValue.value, toNumericValue.value);
        });

        document.getElementById("clear").addEventListener('click', function () {

            var gridObj = document.getElementById("Grid").ej2_instances[0];
            gridObj.clearSelection();
        });

</script>

}

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the selection functionality of the Grid, you can select multiple row by entering start and end index then click the select row button.
        To clear all selected rows, click clear selection button.</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Selection API in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		 <p>
			Selection provides an interactive support to highlight the row or cell or column that you select.
			Selection can be done through simple
			Mouse down or Keyboard interaction. To enable selection, set <code>allowSelection</code> as true.
		</p>
		<p>Grid supports two types of selection which can be set using
			<code>selectionSettings->type</code> property. They are,</p>
		<ul>
			<li><code>Single</code> - Enabled by default. Allows the user to select single row/cell at a time.</li>
			<li><code>Multiple</code> - Allows the user to select more than one row/cell/column at a time.</li>
		</ul>
		<p>Also, supports three modes of selection which can be set using
			<code>selectionSettings->mode</code> property. They are,
		</p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables row selection in Grid.</li>
            <li><code>Cell</code> - Enables cell selection in Grid.</li>
            <li>
                <code>Both</code> - Enables both row and cell selection in Grid.
                Clicking any cell will select both the row and cell simultaneously.
            </li>
        </ul>
		<p>To perform the column selection, enable the <code><a target="_blank" class="code"
			href="https://ej2.syncfusion.com/javascript/documentation/api/grid/selectionSettings/#allowcolumnselection" aria-label="Navigate to the allowcolumnselection property reference for ASP.NET Core Grid selection settings">
			selectionSettings->allowColumnSelection
        </a></code> property.</p>
		<p>To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells/columns.
		To select range of rows/cells/columns, hold <strong>SHIFT</strong> key and click the rows/cells/columns.</p>
		<p>While using the Grid in a touch device environment, there is an option for multi-selection
			through a single tap on the row and it will show a popup with the multi-selection symbol.
			Tap the icon to enable multi-selection in a single tap.
		</p>
		<p>In this demo, enter the values in the Start and To text box to select range of rows.
			And click the Clear Selection button to deselect the rows.
		</p>
	</div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Selection API Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection API in ASP.NET Core Data Grid Control</h1>
                }