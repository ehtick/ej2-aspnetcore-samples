@page
@model EJ2CoreSampleBrowser.Pages.Grid.GridOverviewModel
@using Syncfusion.EJ2

@section ControlsSection {
    <link href="~/styles/Grid/style.css" rel="stylesheet" />
    <div class="control-section">
        <div id="default" style="padding-bottom: 18px;">
            <ejs-dropdownlist id="DataRange" dataSource="@Model.DataRange" placeholder="Select a Data Range" index="0" change="valueChange" width="220px">
                <e-dropdownlist-fields text="Text" value="Value"></e-dropdownlist-fields>
            </ejs-dropdownlist>
            <span id='msg'></span>
        </div>
        <ejs-grid id="GridOverview" allowFiltering="true" allowSorting="true" height="400" rowHeight="38" enableHover="false" load="load" dataBound="startTimer" actionComplete="complete" enableVirtualization="true" allowSelection="true">
            <e-grid-filtersettings type="Menu"></e-grid-filtersettings>
            <e-grid-loadingIndicator indicatorType="Shimmer"></e-grid-loadingIndicator>
            <e-grid-selectionsettings persistSelection="true" type="Multiple" checkboxOnly="true"></e-grid-selectionsettings>
            <e-grid-columns>
                <e-grid-column field="" type="checkbox" width="60" allowFiltering="false" allowSorting="false"></e-grid-column>
                <e-grid-column field="EmployeeID" headerText="Employee ID" isPrimaryKey="true" visible="false" textAlign="Right" width="120"></e-grid-column>
                <e-grid-column field="Employees" headerText="Employee Name" clipMode="EllipsisWithTooltip" template="#empTemplate" width="200"></e-grid-column>
                <e-grid-column field="Designation" headerText="Designation" clipMode="EllipsisWithTooltip" width="170"></e-grid-column>
                <e-grid-column field="Mail" headerText="Mail" width="230"></e-grid-column>
                <e-grid-column field="Location" headerText="Location" template="#coltemplate" width="140"></e-grid-column>
                <e-grid-column field="Status" headerText="Status" template="#statusTemplate" width="150"></e-grid-column>
                <e-grid-column field="Trustworthiness" headerText="Trustworthiness" template="#trustTemplate" width="200"></e-grid-column>
                <e-grid-column field="Rating" headerText="Rating" template="#ratingTemplate" width="160"></e-grid-column>
                <e-grid-column field="Software" headerText="Software" allowSorting="false" allowFiltering="false" template="#progessTemplate" width="180"></e-grid-column>
                <e-grid-column field="CurrentSalary" headerText="Current Salary" format="C2" textAlign="Right" width="160"></e-grid-column>
                <e-grid-column field="Address" headerText="Address" width="240"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>

    </div>


    <script type="text/x-jsrender" id="progessTemplate">
        ${progessDetail(data)}
    </script>

    <template>
        <input class="rating">
    </template>
    <script type="text/x-jsrender" id="ratingTemplate">
        ${ratingDetail(data)}
    </script>

    <script type="text/x-jsrender" id="empTemplate">
        ${empDetails(data)}
    </script>

    <script type="text/x-jsrender" id="trustTemplate">
        <img style="width: 31px; height: 24px" src="@Url.Content("~/styles/images/grid/${Trustworthiness}.png")" alt="Flag Icon"/>
        <span id="Trusttext">${Trustworthiness}</span>
    </script>

    <script type="text/x-jsrender" id="statusTemplate">
        ${statusDetail(data)}
    </script>

    <script id="coltemplate" type="text/x-template">
        <div class="image">
            <img src="@Url.Content("~/styles/images/grid/Map.png")" class="e-image" alt="${Location}" /> &nbsp
            <span id="locationtext">${Location}</span>
        </div>
    </script>


    <script type="text/javascript">
        var hostUrl = 'http://localhost:62928/';
        var urlapi = new ej.data.DataManager({
            url: hostUrl + "api/UrlDataSource",
            adaptor: new ej.data.UrlAdaptor()
        });
        var dReady = false;
        var theme;
        var dtTime = false;
        var isDataBound = false;
        var isDataChanged = true;
        var intervalFun;
        var clrIntervalFun;
        var clrIntervalFun1;
        var clrIntervalFun2;
        var dropSlectedIndex = null;
        var stTime;
        stTime = performance.now();
        function empDetails(e) {
            var div = document.createElement('div');
            var empImg = document.createElement('div');
            empImg.className = 'empimg';
            var span = document.createElement('span');
            span.className = 'e-userimg';
            if (e.EmployeeImg === 'usermale') {
                span.classList.add('sf-icon-Male');
            } else {
                span.classList.add('sf-icon-FeMale');
            }
            empImg.appendChild(span);
            var Emptext = document.createElement('span');
            Emptext.id = 'Emptext';
            Emptext.textContent = e.Employees;
            div.appendChild(empImg);
            div.appendChild(Emptext);
            return div.outerHTML;
        }

        function ratingDetail(e) {
            var temp = document.getElementsByTagName("template")[0];
            var cloneTemplate = temp.content.cloneNode(true);
            var ratingElement = cloneTemplate.querySelector(".rating");
            var rating = new ej.inputs.Rating({
                value: e.Rating,
                readOnly: true,
                cssClass: 'custom-rating'
            });
            rating.appendTo(ratingElement);
            return ratingElement.ej2_instances[0].wrapper.outerHTML;
        }

        function statusDetail(e) {
            var div = document.createElement('div');
            var span = document.createElement('span');
            if (e.Status === 'Active') {
                span.className = 'statustxt e-activecolor';
                span.textContent = 'Active'
                div.className = 'statustemp e-activecolor'
            } else {
                span.className = 'statustxt e-inactivecolor';
                span.textContent = 'Inactive'
                div.className = 'statustemp e-inactivecolor'
            }
            div.appendChild(span);
            return div.outerHTML;
        }
        function load(args) {
            this.dataSource = urlapi;
            this.query = new ej.data.Query().addParams('dataCount', '1000');
            this.on('data-ready', function () {
                dReady = true;
            });
        }
        function complete(args) {
            if (args.requestType === "filterchoicerequest" && (args.filterModel.options.field === "Trustworthiness" || args.filterModel.options.field === "Rating"
                || args.filterModel.options.field === "Status")) {
                var span = args.filterModel.dialogObj.element.querySelectorAll('.e-selectall')[0];
                if (!ej.base.isNullOrUndefined(span)) {
                    ej.base.closest(span, '.e-ftrchk').classList.add("e-hide");
                }
            }
        }
        function progessDetail(e) {
            var myProgress = document.createElement('div');
            myProgress.id = 'myProgress';
            myProgress.className = 'pbar';
            var myBar = document.createElement('div');
            myBar.id = 'myBar';
            myBar.className = 'bar';
            if (e.Status === 'Inactive') {
                myBar.classList.add('progressdisable');
            }
            if (e.Software <= 20) {
                e.Software = e.Software + 30;
            }
            myBar.style.width = e[e.column.field] + '%';
            var pbarlabel = document.createElement('div');
            pbarlabel.id = 'pbarlabel';
            pbarlabel.className = 'barlabel';
            pbarlabel.textContent = e.Software + '%';
            myBar.appendChild(pbarlabel);
            myProgress.appendChild(myBar);
            return myProgress.outerHTML;
        }

        function startTimer(args) {
            clearTimeout(clrIntervalFun);
            clearInterval(intervalFun);
            dtTime = true;
        }
        function valueChange() {
            var grid = document.getElementById("GridOverview").ej2_instances[0];
            this.closePopup();
            dropSlectedIndex = null;
            var index = this.value;
            clearTimeout(clrIntervalFun2);
            clrIntervalFun2 = setTimeout(function () {
                isDataChanged = true;
                stTime = null;
                var contentElement = grid.contentModule.getPanel().firstChild;
                contentElement.scrollLeft = 0;
                contentElement.scrollTop = 0;
                grid.pageSettings.currentPage = 1;
                stTime = performance.now();
                if (grid.query.params.length > 1) {
                    for (var i = 0; i < grid.query.params.length; i++) {
                        if (grid.query.params[i].key === 'dataCount') {
                            grid.query.params[i].value = index.toString();
                            break;
                        }
                    }
                }
                else {
                    grid.query.params[0].value = index.toString();
                }
                grid.setProperties({ dataSource: urlapi });
            }, 100);
        }

        var observer = new MutationObserver(function (mutations) {
            mutations.forEach(function () {
                if (dReady && stTime && isDataChanged) {
                    var msgEle = document.getElementById('msg');
                    var val = (performance.now() - stTime).toFixed(0);
                    stTime = null;
                    dtTime = false;
                    dReady = false;
                    isDataChanged = false;
                    msgEle.innerHTML = 'Load Time: ' + "<b>" + val + "</b>" + '<b>ms</b>';
                    msgEle.classList.remove('e-hide');
                }
            });
        });
        observer.observe(document.getElementById('GridOverview'), {
            attributes: true,
            childList: true,
            subtree: true,
        });

    </script>

    <style>
        .fabric .empimg {
            background-color: #0078d6;
        }

        .material .empimg {
            background-color: #e3165b;
        }

        .highcontrast .empimg {
            background-color: #ffd939;
        }

        .fluent .empimg {
            background-color: #106EBE;
        }

        _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-Male::before,
        _:-ms-fullscreen, :root .highcontrast .e-userimg.sf-icon-FeMale::before {
            color: black;
        }

        .highcontrast .e-userimg.sf-icon-Male::before,
        .highcontrast .e-userimg.sf-icon-FeMale::before {
            color: black;
        }

        .bootstrap .empimg {
            background-color: #0078d6;
        }

        .bootstrap4 .empimg {
            background-color: #0078d6;
        }

        .bootstrap5 .empimg {
            background-color: #0078d6;
        }
        .tailwind3 .empimg,
        .tailwind3-dark .empimg{
            background-color:rgba(79, 70, 229);
        }

        #Emptext {
            top: -14px;
            left: 41px;
            position: relative;
        }

        .e-grid.e-rtl #Emptext {
            top: -14px;
            left: -41px;
            position: relative;
        }

        .empimg {
            height: 27px;
            width: 29px;
            border-radius: 14px;
            background-color: #e3165b;
        }

        .e-userimg.sf-icon-Male::before,
        .e-userimg.sf-icon-FeMale::before {
            font-size: 13px;
        }

        .e-userimg.sf-icon-Male, .e-userimg.sf-icon-FeMale {
            margin: 0px 8px;
            line-height: 26px;
            color: white;
            font-size: 13px;
        }

            .e-userimg.sf-icon-Male::before {
                content: '\e700';
            }

            .e-userimg.sf-icon-FeMale::before {
                content: '\e701';
            }

        .highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active,
        .fluent2-highcontrast .e-grid td.e-rowcell.e-selectionbackground.e-active {
            background-color: transparent;
            color: white;
        }

        td.e-rowcell.e-selectionbackground.e-active {
            background-color: transparent;
        }

        .highcontrast #msg {
            color: #FFFFFF
        }

        .e-bigger .e-grid .statustxt {
            position: relative;
            top: -2px;
        }

        td.e-rowcell .statustxt.e-activecolor {
            color: #00cc00;
            position: relative;
            top: 9px;
        }

        td.e-rowcell .statustxt.e-inactivecolor {
            color: #e60000;
            position: relative;
            top: 9px;
        }

        .bootstrap5 td.e-rowcell .statustxt.e-inactivecolor,
        .bootstrap5 td.e-rowcell .statustxt.e-activecolor {
            top: 8px;
        }

        .bootstrap5 .e-checkboxfiltertext .statustemp .statustxt.e-activecolor,
        .bootstrap5 .e-checkboxfiltertext .statustemp .statustxt.e-inactivecolor {
            position: relative;
            top: 1.5px;
        }

        .e-bigger.bootstrap5 .e-checkboxfiltertext .statustemp .statustxt.e-activecolor,
        .e-bigger.bootstrap5 .e-checkboxfiltertext .statustemp .statustxt.e-inactivecolor {
            top: -0.5px;
        }

        .bootstrap5 .e-checkboxfiltertext #Trusttext {
            margin-left: -4px;
        }

        .statustemp.e-inactivecolor {
            background-color: #ffd7cc;
        }

        .statustemp.e-activecolor {
            background-color: #ccffcc;
        }

        .statustxt.e-activecolor {
            color: #00cc00;
        }

        .statustxt.e-inactivecolor {
            color: #e60000;
        }

        #Trusttext {
            position: relative;
            top: 1px;
        }

        .e-image {
            height: 13px;
            width: 14px;
        }

        .statustemp.e-inactivecolor {
            width: 64px;
        }

        .statustemp.e-activecolor {
            width: 57px;
        }

        .statustemp {
            position: relative;
            height: 19px;
            border-radius: 5px;
            text-align: center
        }

        #msg {
            font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
            font-size: 14px;
            font-weight: 400;
            opacity: 0.95;
            color: #333;
            float: right;
            margin-top: 3px;
        }

        .fabric-dark #msg, .bootstrap-dark #msg, .tailwind-dark #msg, .bootstrap5-dark #msg, .material-dark #msg, .material3-dark #msg, .fluent-dark #msg, .fluent2-dark #msg, .fluent2-highcontrast #msg, .bootstrap5\.3-dark #msg, .tailwind3-dark #msg {
            color: #ffffff !important;
        }

        @@media only screen and (max-width: 370px) {
            #msg {
                float: left;
                margin-top: 3px;
            }

            #GridOverview {
                margin-top: 36px;
            }
        }

        @@-moz-document url-prefix() {     
            #GridOverview.e-grid.e-grid-min-height .e-rowcell {       
                line-height: 0 !important;
        } }

        #samplecontainer {
            padding-top: 5px;
        }

        #myProgress {
            position: relative;
            height: 18px;
            width: 10em;
            text-align: left;
            background-color: white;
        }

        .highcontrast .e-grid #myProgress {
            background-color: black;
        }

        #myBar {
            position: absolute;
            width: 10%;
            height: 100%;
            background-color: #00b300;
        }

            #myBar.progressdisable {
                background-color: #df2222;
            }

        #pbarlabel {
            position: relative;
            left: 10px;
            line-height: 18px;
            font-size: 10px;
            color: white;
        }

        .custom-rating.e-rating-container .e-rating-item-container,
        .e-bigger .custom-rating.e-rating-container .e-rating-item-container .e-rating-icon,
        .e-bigger.custom-rating.e-rating-container .e-rating-item-container .e-rating-icon {
            font-size: 11px;
        }

            .custom-rating.e-rating-container .e-rating-item-container .e-rating-icon {
                -webkit-text-fill-color: lightgrey;
                -webkit-text-stroke: 1px lightgrey;
            }

            .custom-rating.e-rating-container .e-rating-item-container.e-rating-selected .e-rating-icon {
                background: linear-gradient(to right, #ffa600 var(--rating-value), #ffa600 var(--rating-value));
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                -webkit-text-stroke: 1px #ffa600;
            }
        </style>

}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the overview of basic grid features with its performance metrics of large data. To change datasource count, select rows and columns count from dropdown.</p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Overview in ASP.NET Core Data Grid control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            The Grid is used to display and manipulate tabular data with configuration options to control the way the data is presented
            and manipulated. It will pull the data from a data source, such as IEnumerable, OData web services,
            or <code>DataManager</code> binding data fields to columns. Also, displaying a column header to identify the field with
            support for grouped records.
        </p>
        <p>
            In this demo, Grid features such as <code>Virtual Scrolling, Filtering, Sorting, Column Template, filter template </code> etc... are used along with large data source.
        </p>
        <p>
            You can follow the guidelines in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/virtual-scroll#browser-height-limitation-in-virtual-scrolling-and-solution" aria-label="documentation">
                documentation
            </a> to get around the browser height restriction when loading and viewing millions of records.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Data Grid Overview Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Overview in ASP.NET Core Data Grid Control</h1>
}
