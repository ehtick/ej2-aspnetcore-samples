@page
@model EJ2CoreSampleBrowser.Pages.Grid.DefaultFunctionalitiesModel
@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">

     <ejs-grid id="Grid"  dataSource="@Model.DataSource" allowPaging="true" allowSorting="true" allowFiltering="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
      <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" validationRules="@(new { required=true, number=true })" width="180"></e-grid-column>
                <e-grid-column field="CustomerID" headerText="Customer Name" validationRules="@(new { required=true })" width="150"></e-grid-column>
                <e-grid-column field="OrderDate" headerText=" Order Date" format="yMd" editType="datepickeredit" width="130"></e-grid-column>
                <e-grid-column field="Freight" headerText="Freight"  format="C2" width="120"></e-grid-column>
                <e-grid-column field="ShippedDate" headerText="Shipped Date"  format="yMd" editType="datepickeredit" width="140"></e-grid-column>
                <e-grid-column field="ShipCountry"  headerText="Ship Country" width="150"></e-grid-column>

            </e-grid-columns>
      </ejs-grid>
       
    </div>    
 }

@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the default rendering of the Grid with minimum configuration.</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
			The Grid is used to display and manipulate tabular data with configuration options to control the way the data is presented
			and manipulated. It will pull the data from a data source, such as IEnumerable, OData web services,
			or <code>DataManager</code> binding data fields to columns. Also, displaying a column header to identify the field with
			support for grouped records.
		</p>
		<p>
			In this demo, the Grid is populated with its minimum default settings.
		</p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core Data Grid Control</h1>
                }
