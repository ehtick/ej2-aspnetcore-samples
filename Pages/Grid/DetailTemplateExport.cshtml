@page
@model EJ2CoreSampleBrowser.Pages.Grid.DetailTemplateExportModel
@{
    ViewData["Title"] = "DetailTemplateExport";
}

<h2>DetailTemplateExport</h2>

@section ControlsSection{
    <div class="control-section">
        <ejs-grid id="DetailTemplateExport" dataSource="@Model.DataSource" allowSorting="true" allowFiltering="true" detailTemplate="#detailtemplate" toolbarClick="toolbarClick" toolbar="@(new List<string>() {"ExcelExport","PdfExport" })" 
        allowPdfExport="true" allowExcelExport="true" exportDetailTemplate="exportDetailTemplate">
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-columns>
                <e-grid-column field="FirstName" headerText="First Name" width="110"></e-grid-column>
                <e-grid-column field="LastName" headerText="Last Name" width="110"></e-grid-column>
                <e-grid-column field="Title" headerText="Title" width="240"></e-grid-column>
                <e-grid-column field="Country" headerText="Country" width="180"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
<style type="text/css" class="cssStyles">
    .detailtable td {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
	font-weight: normal;
    }

    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>
<script type="text/x-template" id="detailtemplate">
    <table class="detailtable" width="100%">
        <colgroup>
            <col width="35%" />
            <col width="35%" />
            <col width="30%" />
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="4" style="text-align: center;">
                    <img class="photo" src="@Url.Content("~/scripts/Images/Employees/${EmployeeID}.png")" alt="${EmployeeID}" />
                </td>
                <td>
                    <span style="font-weight: 500;">First Name: </span> ${FirstName}
                </td>
                <td>
                    <span style="font-weight: 500;">Postal Code: </span> ${PostalCode}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Last Name: </span> ${LastName}
                </td>
                <td>
                    <span style="font-weight: 500;">City: </span> ${City}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Title: </span> ${Title}
                </td>
                <td>
                    <span style="font-weight: 500;">Phone: </span> ${Phone}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Address: </span> ${Address}
                </td>
                <td>
                    <span style="font-weight: 500;">HireDate: </span> ${HireDate.toLocaleDateString()}
                </td>
            </tr>
        </tbody>
    </table>
</script>

<script>
    function toolbarClick(args) {
        if (args.item.id === 'DetailTemplateExport_pdfexport') {
            this.pdfExport({hierarchyExportMode: "All"});
        }
        if (args.item.id === 'DetailTemplateExport_excelexport') {
            this.excelExport({hierarchyExportMode: "All"});
        }
    }

    function exportDetailTemplate(args) {
        args.value = {
            columnCount: 3,
            rows: [
                {
                    cells: [
                        {
                            index: 0, rowSpan: 4, image: args.action === "excelexport" ? {
                                base64: args.parentRow.data.EmployeeImage,
                                height: 80, width: 80
                            } : { base64: args.parentRow.data.EmployeeImage, width: 80 }
                        },
                        { index: 1, value: "First Name: " + args.parentRow.data.FirstName },
                        { index: 2, value: "Postal Code: " + args.parentRow.data.PostalCode }
                    ]
                },
                {
                    cells: [
                        { index: 1, value: "Last Name: " + args.parentRow.data.LastName },
                        { index: 2, value: "City: " + args.parentRow.data.City }
                    ]
                },
                {
                    cells: [
                        { index: 1, value: "Title: " + args.parentRow.data.Title },
                        { index: 2, value: "Phone: " + args.parentRow.data.Phone }
                    ]
                },
                {
                    cells: [
                        { index: 1, value: "Address: " + args.parentRow.data.Address },
                        { index: 2, value: "HireDate: " + (args.parentRow.data.HireDate).toLocaleDateString() }
                    ]
                }
            ]
        };
    }
</script>

}
@section ActionDescription{
<div id="action-description">
    <p>This sample demonstrates how to export detail grids. In this sample, you can export the detail grid by
        clicking the corresponding export button on the grid's toolbar.</p>
</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Detail Template Export in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
<div id="description">
    <p>
        The detail row template provides additional information about a data row which can be shown or hidden by clicking the
        expand or collapse button. The <code><a target="_blank" class="code" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_DetailTemplate" aria-label="Navigate to the DetailTemplate property reference for ASP.NET Core Grid control">
        detailTemplate</a></code> property accepts either the string or HTML element`s ID value, which will be used as the
        template for the detail row.
    </p>
    <p>
        In this demo, Employees' information is displayed in the detail row.
    </p>
    <p>Data Grid supports client-side exporting to export data to the Excel and PDF formats.</p>
    <p>In this demo, the Employees' information can be exported using the <code>exportDetailTemplate</code> event where each cell can be customized.
        The ExcelExport and PdfExport items are defined in the toolbar of the Grid. Actions are defined in
        the <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#toolbarclick" aria-label="Navigate to the toolbarClick event reference for ASP.NET Core Grid control">toolbarClick</a></code> event
        to export Grid data using <code><a target="_blank" class="code" href="http://ej2.syncfusion.com/javascript/documentation/api/grid#excelexport" aria-label="Navigate to the excelExport method reference for ASP.NET Core Grid control">excelExport</a>
        </code> and <code><a target="_blank" class="code" href="http://ej2.syncfusion.com/javascript/documentation/api/grid#pdfexport" aria-label="Navigate to the pdfExport method reference for ASP.NET Core Grid control">pdfExport</a></code> methods with the
        <code>hierarchyExportMode</code> set to <code>All</code>.
    </p>
    <p>
        The detail grids' export options can be changed by using the <code>hierarchyExportMode</code> property.
    </p>
    <p>The detail template allows you to export the grid with the following options,</p>
    <ul>
        <li><code>Expanded</code> : Exports only the visible detail rows in an expanded state.</li>
        <li><code>All</code> : Exports all the detail rows in an expanded state.</li>
        <li><code>None</code> : Exports the detail rows in a collapsed state.</li>
    </ul>
    <p>
        More information on the exporting configuration can be found in this <a target="_blank"
        href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/excel-export/excel-exporting" aria-label="Navigate to the documentation for Excel Export in ASP.NET Core Grid control">Excel-export</a>
        and <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/pdf-export/pdf-export" aria-label="Navigate to the documentation for PDF Export in ASP.NET Core Grid control">PDF-export</a> Documentation sections.
    </p>
</div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Detail Template Exporting Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Detail Template Exporting in ASP.NET Core Data Grid Control</h1>
                }
