@page
@model EJ2CoreSampleBrowser.Pages.Grid.LazyLoadGroupWithPagingModel
@{
    ViewData["Title"] = "Lazy Load Grouping with Paging";
}

<h2>Lazy Load Grouping</h2>

@section ControlsSection{
    <div class="control-section">
        <div>
            <ejs-grid id="LazyGroupGrid" dataSource="@Model.lazyLoadData" allowPaging="true" allowSorting="true" allowGrouping="true" height="400">
                <e-grid-groupSettings enableLazyLoading="true" columns="@(new string[] { "ProductName", "CustomerName" })"></e-grid-groupSettings>
                <e-grid-columns>
                    <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="120" allowGrouping="false"></e-grid-column>
                    <e-grid-column field="ProductName" headerText="Product Name" width="160"></e-grid-column>
                    <e-grid-column field="ProductID" headerText="Product ID" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="CustomerID" headerText="Customer ID" width="120"></e-grid-column>
                    <e-grid-column field="CustomerName" headerText="Customer Name" width="160"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the lazy load grouping feature of the Grid component.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Lazy Load Grouping in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            The Lazy load grouping, allows the Grid to render only the initial level caption rows in the collapsed state while grouping.
            The child rows of each caption will render only when we expand the captions.
            To enable lazy load grouping, set <code>groupSettings->enableLazyLoading</code> property as <code>true</code>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Lazy Load Grouping with Paging Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Lazy Load Grouping with Paging in ASP.NET Core Data Grid Control</h1>
                }
