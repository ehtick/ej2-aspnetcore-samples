@page
@{
    ViewData["Title"] = "VirtualScrolling";
}

<h2>VirtualScrolling</h2>

@section ControlsSection{

    <style>
            .image { position: absolute; background-repeat: no-repeat;
             background-image: url('/scripts/Images/Employees/spinner.gif');
             background-position: center; width: 16px; height: 28px; }

    .e-bigger .image {
        height: 36px;
    }

    #popup {
        position: absolute;
        background-color: transparent;
        display: none;
        z-index: 100;
    }
        .div-button {
            margin: 5px 5px 5px 0;
        }
    </style>

    <div class="control-section">
        <div class="row">
            <table>
                <tr>
                    <td style="padding:15px" colspan='2'>
                        <span>
                            <ejs-button id="generate" cssClass="e-info" content="Load 100K Data"></ejs-button>
                            <span id="popup">
                                <span id="gif" class="image"></span>
                            </span>
                        </span>

                    </td>
                </tr>
            </table>

        </div>

        <div>
            <ejs-grid id="VirtualGrid" height="400" dataBound="hide" enableInfiniteScrolling="true" enableColumnVirtualization="true">
            <e-grid-pagesettings pageSize="50"></e-grid-pagesettings>
                <e-grid-columns>
                    <e-grid-column field="Field1" headerText="PlayerName" width="140"></e-grid-column>
                    <e-grid-column field="Field2" headerText="Year" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field3" headerText="Stint" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field4" headerText="TMID" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field5" headerText="LGID" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field6" headerText="GP" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field7" headerText="GS" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field8" headerText="Minutes" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field9" headerText="Points" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field10" headerText="oRebounds" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field11" headerText="dRebounds" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field12" headerText="Rebounds" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field13" headerText="Assists" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field14" headerText="Steals" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field15" headerText="Blocks" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field16" headerText="Turnovers" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field17" headerText="PF" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field18" headerText="fgAttempted" textAlign="Right" width="150"></e-grid-column>
                    <e-grid-column field="Field19" headerText="fgMade" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field20" headerText="ftAttempted" textAlign="Right" width="150"></e-grid-column>
                    <e-grid-column field="Field21" headerText="ftMade" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field22" headerText="ThreeAttempted" textAlign="Right" width="150"></e-grid-column>
                    <e-grid-column field="Field23" headerText="ThreeMade" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field24" headerText="PostGP" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field25" headerText="PostGS" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field26" headerText="PostMinutes" textAlign="Right" width="120"></e-grid-column>
                    <e-grid-column field="Field27" headerText="PostPoints" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field28" headerText="PostoRebounds" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field29" headerText="PostdRebounds" textAlign="Right" width="130"></e-grid-column>
                    <e-grid-column field="Field30" headerText="PostRebounds" textAlign="Right" width="130"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
        </div>

    <script>
        var virtualData = [], date1 = null, date2 = null, flag = true;
        var names = ['hardire', 'abramjo01', 'aubucch01', 'Hook', 'Rumpelstiltskin', 'Belle', 'Emma', 'Regina', 'Aurora', 'Elsa',
            'Anna', 'Snow White', 'Prince Charming', 'Cora', 'Zelena', 'August', 'Mulan', 'Graham', 'Discord', 'Will', 'Robin Hood',
            'Jiminy Cricket', 'Henry', 'Neal', 'Red', 'Aaran', 'Aaren', 'Aarez', 'Aarman', 'Aaron', 'Aaron-James', 'Aarron', 'Aaryan', 'Aaryn',
            'Aayan', 'Aazaan', 'Abaan', 'Abbas', 'Abdallah', 'Abdalroof', 'Abdihakim', 'Abdirahman', 'Abdisalam', 'Abdul', 'Abdul-Aziz',
            'Abdulbasir', 'Abdulkadir', 'Abdulkarem', 'Abdulkhader', 'Abdullah', 'Abdul-Majeed', 'Abdulmalik', 'Abdul-Rehman', 'Abdur',
            'Abdurraheem', 'Abdur-Rahman', 'Abdur-Rehmaan', 'Abel', 'Abhinav', 'Abhisumant', 'Abid', 'Abir', 'Abraham', 'Abu', 'Abubakar',
            'Ace', 'Adain', 'Adam', 'Adam-James', 'Addison', 'Addisson', 'Adegbola', 'Adegbolahan', 'Aden', 'Adenn', 'Adie', 'Adil', 'Aditya',
            'Adnan', 'Adrian', 'Adrien', 'Aedan', 'Aedin', 'Aedyn', 'Aeron', 'Afonso', 'Ahmad', 'Ahmed', 'Ahmed-Aziz', 'Ahoua', 'Ahtasham',
            'Aiadan', 'Aidan', 'Aiden', 'Aiden-Jack', 'Aiden-Vee'];
        var sport = ['Cricket', 'Football', 'Tennis', 'Golf', 'Chess', 'Dodgeball', 'Racket', 'Archery', 'Climbing', 'Hunting', 'Carrom', 'Tag', 'Novuss',
            'Subbuteo', 'Baseball', 'Madden NFL', 'Shuffleboard', 'Badminton', 'Hockey', 'Volleyball', 'Table Tennis', 'Golf', 'Cycling', 'Running', 'Walking', 'Wireball',
            'Town ball', 'Tee ball', 'Stool ball', 'Stick ball'];
        var country = ['India', 'Australia', 'Ballesteros', 'Belgium', 'Brazil', 'England', 'Ethiopia', 'Finland', 'France', 'Germany', 'Britain',
            'Argentina', 'Jamaica', 'Kenya', 'Morocco', 'Ireland', 'Norway', 'Philippines', 'Portugal', 'Romania', 'Russia', 'Scotland', 'Scottish', 'Serbia', 'Spain',
            'Sweden', 'Switzerland', 'Netherlands', 'UK', 'Ukraine', 'US', 'Wales', 'West Indies', 'China', 'Hong Kong', 'Italy', 'Philippines', 'Turkey', 'Botswana',
            'Sri Lanka', 'Algeria', 'Bangladesh', 'Egypt', 'Malaysia'];
        document.getElementById("generate").addEventListener('click', function () {
            var grid = document.getElementById("VirtualGrid").ej2_instances[0]
            if (!virtualData.length) {
                grid.showSpinner();
                document.getElementById('generate').ej2_instances[0].disabled = true;
                dataSource();
                grid.hideSpinner();
                grid.dataSource = virtualData;
            }
        })
        function hide(args) {
            if (flag) {
                flag = false;
            }
        }
        function dataSource() {
            for (var i = 0; i < 100000; i++) {
                virtualData.push({
                    'SNo': i + 1,
                    'Field1': names[Math.floor(Math.random() * names.length)],
                    'Field2': 1967 + (i % 10),
                    'Field3': sport[Math.floor(Math.random() * sport.length)],
                    'Field4': country[Math.floor(Math.random() * country.length)],
                    'Field5': Math.floor(Math.random() * 2000),
                    'Field6': Math.floor(Math.random() * 1000),
                    'Field7': Math.floor(Math.random() * 100),
                    'Field8': Math.floor(Math.random() * 10),
                    'Field9': Math.floor(Math.random() * 10),
                    'Field10': Math.floor(Math.random() * 100),
                    'Field11': Math.floor(Math.random() * 100),
                    'Field12': Math.floor(Math.random() * 1000),
                    'Field13': Math.floor(Math.random() * 10),
                    'Field14': Math.floor(Math.random() * 10),
                    'Field15': Math.floor(Math.random() * 1000),
                    'Field16': Math.floor(Math.random() * 200),
                    'Field17': Math.floor(Math.random() * 300),
                    'Field18': Math.floor(Math.random() * 400),
                    'Field19': Math.floor(Math.random() * 500),
                    'Field20': Math.floor(Math.random() * 700),
                    'Field21': Math.floor(Math.random() * 800),
                    'Field22': Math.floor(Math.random() * 1000),
                    'Field23': Math.floor(Math.random() * 2000),
                    'Field24': Math.floor(Math.random() * 150),
                    'Field25': Math.floor(Math.random() * 1000),
                    'Field26': Math.floor(Math.random() * 100),
                    'Field27': Math.floor(Math.random() * 400),
                    'Field28': Math.floor(Math.random() * 600),
                    'Field29': Math.floor(Math.random() * 500),
                    'Field30': Math.floor(Math.random() * 300),
                });
            }
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the Grid component with the infinite scrolling feature. You can use the scrollbar or navigation keys or the mouse wheel to perform the infinite scroll action.
    </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Infinite Scrolling in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
         <p>
            The Grid Infinite scrolling feature enables the loading of data using the lazy loading concept, where buffer data is loaded only when the scrollbar reaches the end of the scroller.
            To enable Infinite scrolling, set the <code><a target="_blank" className="code"
            href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_EnableInfiniteScrolling" aria-label="Navigate to the EnableInfiniteScrolling property reference for ASP.NET Core Grid control">
            enableInfiniteScrolling </a></code> property to true. Additionally, you can efficiently display a multiple columns without performance degradation using the clumn virtualization feature.
            Enable column virtualization by setting the <code><a target="_blank" className="code"
            href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Grids.Grid.html#Syncfusion_EJ2_Grids_Grid_EnableColumnVirtualization" aria-label="Navigate to the EnableColumnVirtualization property reference for ASP.NET Core Grid control">
            enableColumnVirtualization</a></code> property to true.
        </p>
        <p>
            Note: The <code>height</code> property must be defined when enabling the <code>enableInfiniteScrolling</code>.
        </p>
         <p>
            More information on the infinite scrolling can be found in this
            <a target="_blank"
            href="https://ej2.syncfusion.com/aspnetcore/documentation/grid/infinite-scroll" aria-label="Navigate to the documentation for Infinite scrolling in ASP.NET Core Grid control">
            documentation section</a>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Infinite Scrolling Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Infinite Scrolling in ASP.NET Core Data Grid Control</h1>
                }