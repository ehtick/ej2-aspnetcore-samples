@page
@model EJ2CoreSampleBrowser.Pages.Grid.MultiSortingModel

@using Syncfusion.EJ2
 @section ControlsSection{

<div class="col-lg-8 control-section">
    <div class="control-wrapper">

       
        <ejs-grid id="Grid" dataSource="@Model.DataSource"  allowMultiSorting="true" actionComplete="actionComplete" allowSorting="true" allowPaging="true" allowFiltering="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
            <e-grid-pagesettings pageCount="2"></e-grid-pagesettings>
            <e-grid-sortsettings columns="@Model.cols"></e-grid-sortsettings>
            <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="120" isPrimaryKey="true" validationRules="@(new { required=true, number=true})"></e-grid-column>
                <e-grid-column field="CustomerID" headerText="Customer Name" width="150" validationRules="@(new { required=true, minLength=5})"></e-grid-column>
                <e-grid-column field="OrderDate" headerText=" Order Date" textAlign="Right" format="yMd" width="130" editType="datepickeredit"></e-grid-column>
                <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="120" editType="numericedit" validationRules="@(new { required=true, min=0})"></e-grid-column>
                <e-grid-column field="ShipCountry" headerText="Ship Country" width="150" editType="dropdownedit"></e-grid-column>               
            </e-grid-columns>
        </ejs-grid>
    </div>
    </div >

        

        <div class="col-lg-4 property-section">          

            <table id="property" title="Properties" style="width: 100%;">
                <tbody>

                    <tr>
                        <td style="width: 70%">
                            <div>
                                Order ID
                            </div>
                        </td>
                        <td style="width: 30%;padding:10px 10px 10px 0px">
                            <div class="col-md-6">
                                <ejs-checkbox id="OrderID"  change="OrderIDChanged"></ejs-checkbox>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 70%">
                            <div>
                                Customer Name
                            </div>
                        </td>
                        <td style="width: 30%;padding:10px 10px 10px 0px">
                            <div class="col-md-6">
                                <ejs-checkbox id="CustomerID" change="CustomerIDChanged"></ejs-checkbox>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 70%">
                            <div>
                                Order Date
                            </div>
                        </td>
                        <td style="width: 30%; padding:10px 10px 10px 0px">
                            <div class="col-md-6">
                                <ejs-checkbox id="OrderDate" checked="true" change="OrderDateChanged"></ejs-checkbox>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 70%">
                            <div>
                                Freight
                            </div>
                        </td>
                        <td style="width: 30%; padding:10px 10px 10px 0px">
                            <div class="col-md-6">
                                <ejs-checkbox id="Freight" checked="true" change="FreightChanged"></ejs-checkbox>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 70%">
                            <div>
                                Ship Country
                            </div>
                        </td>
                        <td style="width: 30%; padding:10px 10px 20px 0px">
                            <div class="col-md-6">
                                <ejs-checkbox id="ShipCountry"  change="ShipCountryChanged"></ejs-checkbox>
                                
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

      <script>
          function actionComplete(args) {
              if (args.requestType === 'sorting') {
                  for (var columns = 0; columns < this.getColumns().length; columns++) {
                      for (var sortcolumns = 0; sortcolumns < this.sortSettings.columns.length; sortcolumns++) {
                          if (this.sortSettings.columns[sortcolumns].field === this.getColumns()[columns].field) {
                              (document.getElementById(this.sortSettings.columns[sortcolumns].field)).ej2_instances[0].checked = true;
                              break;
                          } else {
                              (document.getElementById(this.getColumns()[columns].field)).ej2_instances[0].checked = false;
                          }
                      }
                  }
              }
          }

          function OrderIDChanged(args) {
              var grid = document.getElementById("Grid").ej2_instances[0];
              if (this.checked) {
                  grid.sortColumn('OrderID', 'Ascending', true);
              } else {
                  grid.removeSortColumn('OrderID');
              }

          }
          function CustomerIDChanged(args) {
              var grid = document.getElementById("Grid").ej2_instances[0];
              if (this.checked) {
                  grid.sortColumn('CustomerID', 'Ascending', true);
              } else {
                  grid.removeSortColumn('CustomerID');
              }
          }
          function OrderDateChanged(args) {
              var grid = document.getElementById("Grid").ej2_instances[0];
              if (this.checked) {
                  grid.sortColumn('OrderDate', 'Ascending', true);
              } else {
                  grid.removeSortColumn('OrderDate');
              }
          }
          function FreightChanged(args) {
              var grid = document.getElementById("Grid").ej2_instances[0];
              if (this.checked) {
                  grid.sortColumn('Freight', 'Ascending', true);
              } else {
                  grid.removeSortColumn('Freight');
              }
          }
          function ShipCountryChanged(args) {
              var grid = document.getElementById("Grid").ej2_instances[0];
              if (this.checked) {
                  grid.sortColumn('ShipCountry', 'Ascending', true);
              } else {
                  grid.removeSortColumn('ShipCountry');
              }
          }
      </script>
    }

@section ActionDescription{
	<div id="action-description">
		 <p>
			This sample demonstrates the Grid multi sorting feature. To sort two or more columns, hold the CTRL key and click the column
			header.
		</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Multi Sorting in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		    <p>
				Sorting feature enables us to order the data in a particular direction. It can be enabled by setting the <code>allowSorting</code> as true.
			</p>
			<p class = 'e-grid' style="border:none"> To sort a Grid column simply click the column header. The icons <span class="e-icons e-icon-ascending"></span>(ascending)
				and <span class="e-icons e-icon-descending"></span>(descending) specifies the sort direction of a column.</p>
			<p>By default, multi-sorting is enabled in Grid, to sort multiple column hold <strong>CTRL</strong> key and click the column
				header. To clear sort for a column, hold <strong>SHIFT</strong> key and click the column header.</p>
			<p>
				While using Grid in a touch device, you have an option for multi sorting in single tap on the grid header. By tapping on
				the grid header, it will show the toggle button in small popup with sort icon. Now tap the button to enable the multi-sorting
				in single tap.
			</p>
			<p>In this demo, </p>
			<ul>
				<li>Simply click the column header to sort a column.</li>
				<li>Check the checkboxes in the properties panel to sort a column and uncheck to remove sort from a column.
				</li>
			</ul>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Multi Sorting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multi Sorting in ASP.NET Core Data Grid Control</h1>
                }