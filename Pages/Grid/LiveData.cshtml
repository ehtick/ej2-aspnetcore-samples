@page
@model EJ2CoreSampleBrowser.Pages.Grid.LiveDataModel
@using Syncfusion.EJ2

@section ControlsSection {
    <link href="~/styles/Grid/style.css" rel="stylesheet" />
    <div class="control-section">
        <div id="default" style="padding-bottom: 18px;">
            <h4 style="display: inline-block; font-size: 14px;">Feed Delay(ms):</h4>
            <ejs-numerictextbox id="numeric" format="N0" value="1000" min="10" max="5000" step="1" Type="text" width="150px" style="margin-left: 7px;"></ejs-numerictextbox>
            <ejs-button id="updatebtn" content="Start Data Update" style="margin-left: 10px;"></ejs-button>
            <ejs-button id="clearbtn" content="Stop Data Update" style="margin-left: 10px;"></ejs-button>
        </div>
        <ejs-grid id="LiveData" dataSource="@LiveDataModel.LiveData.GetLiveDatas(100)" height="500" rowHeight="38" enableHover="false" load="load" queryCellInfo="queryCellInfo" enableVirtualization="true" enableVirtualMaskRow="false" allowSelection="false">
            <e-grid-columns>
                <e-grid-column field="id" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Right" width="140"></e-grid-column>
                <e-grid-column field="CountryCode" headerText="Ticker" width="70"></e-grid-column>
                <e-grid-column field="Change" headerText="Change % 1D" format="N0" width="100"></e-grid-column>
                <e-grid-column field="Net" headerText="Net" format="C2" width="100"></e-grid-column>
                <e-grid-column field="Rating" headerText="Technical Rating 1D" width="150"></e-grid-column>
                <e-grid-column field="NetIncome" headerText="Net Income" format="C2" width="150"></e-grid-column>
                <e-grid-column field="Sector" headerText="Sector" width="160"></e-grid-column>
                <e-grid-column field="EmployeeCount" headerText="Employee Count" width="130"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>

    </div>


    <script type="text/javascript">
        var initial = true;
        function load(args) {
            this.on('data-ready', function () {
                if (initial) {
                    var updateButton = document.getElementById("updatebtn").ej2_instances[0];
                    var feedDelayInput = document.getElementById("numeric").ej2_instances[0];
                    var clearButton = document.getElementById("clearbtn").ej2_instances[0];
                    updateButton.element.click();
                    initial = false;
                    feedDelayInput.element.addEventListener('keypress', (e) => {
                        if (e && e.key === 'Enter' && feedDelayInput.element.parentElement.classList.contains('e-input-focus')) {
                            feedDelayInput.value = parseInt(feedDelayInput.element.value);
                            feedDelayInput.focusOut();
                            updateButton.element.click();
                        }
                    });
                    this.on('destroy', function () {
                        clearButton.element.click();
                    });
                }
            });
        }
        var isDataBound = true;
        function queryCellInfo(args) {
            if (args.column.field === 'NetIncome') {
                if (args.data.Net < 0) {
                    args.cell.classList.remove('e-increase');
                    args.cell.classList.add('e-decrease');
                } else if (args.data.Net > 0) {
                    args.cell.classList.remove('e-decrease');
                    args.cell.classList.add('e-increase');
                }
            } else if (args.column.field === 'Change') {
                if (args.data.Change < 0) {
                    updateCellDetails(args.cell, 'below-0');
                } else {
                    updateCellDetails(args.cell, 'above-0');
                }
            } else if (args.column.field === 'Net') {
                if (args.data.Net < 0) {
                    updateCellDetails(args.cell, 'below-0');
                } else {
                    updateCellDetails(args.cell, 'above-0');
                }
            } else if (isDataBound) {
                if (args.column.field === 'Rating') {
                    args.cell.innerHTML = '';
                    var span = document.createElement('span');
                    var span2 = document.createElement('span');
                    if (args.data['Change'] === 0) {
                        customizeRatingCell(span, span2, ['e-icons', 'e-intermediate-state-2', 'neutral', 'ic', 'side-space'], 'neutral', 'Neutral');
                    } else if (args.data['Change'] < -2 && args.data['Net'] < 0) {
                        customizeRatingCell(span, span2, ['e-icons', 'e-negc', 'e-chevron-down-double', 'below-0', 'ic', 'side-space'], 'below-0', 'Strongly Sell');
                    } else if (args.data['Net'] < 0) {
                        customizeRatingCell(span, span2, ['e-icons', 'e-negc', 'e-chevron-down', 'below-0', 'ic', 'side-space'], 'below-0', 'Sell');
                    } else if (args.data['Change'] > 5 && args.data['Net'] > 10) {
                        customizeRatingCell(span, span2, ['e-icons', 'e-posc', 'e-chevron-up-double', 'above-0', 'ic', 'side-space'], 'above-0', 'Strongly Buy');
                    } else {
                        customizeRatingCell(span, span2, ['e-icons', 'e-posc', 'e-chevron-up', 'above-0', 'ic', 'side-space'], 'above-0', 'Buy');
                    }
                    args.cell.appendChild(span);
                    args.cell.appendChild(span2);
                }
            }
            isDataBound = true;
        }
        function customizeRatingCell(span1, span2, span1_class, span2_class, span2_text) {
            span1_class.forEach((item) => span1.classList.add(item));
            span2.classList.add(span2_class);
            span2.innerText = span2_text;
        }
        function updateCellDetails(cell, className) {
            var div = document.createElement('div');
            var span1 = document.createElement('span');
            span1.classList.add('rowcell-left');
            div.classList.add(className);
            span1.innerHTML = cell.innerHTML;
            cell.innerHTML = '';
            div.appendChild(span1);
            cell.appendChild(div);
        }
        var timerID;
        document.getElementById('updatebtn').onclick = function () {
            var updateButton = document.getElementById("updatebtn").ej2_instances[0];
            var feedDelayInput = document.getElementById("numeric").ej2_instances[0];
            var clearButton = document.getElementById("clearbtn").ej2_instances[0];
            if (!timerID) {
                updateButton.disabled = true;
                feedDelayInput.enabled = false;
                clearButton.disabled = false;
                timerID = setInterval(
                    updateCellValues,
                    parseInt(feedDelayInput.value)
                );
            }
        };
        document.getElementById('clearbtn').onclick = function () {
            var updateButton = document.getElementById("updatebtn").ej2_instances[0];
            var feedDelayInput = document.getElementById("numeric").ej2_instances[0];
            var clearButton = document.getElementById("clearbtn").ej2_instances[0];
            if (timerID) {
                updateButton.disabled = false;
                feedDelayInput.enabled = true;
                clearButton.disabled = true;
                clearInterval(timerID);
                timerID = undefined;
            }
        };
        function updateCellValues() {
            var oldValue;
            var newValue;
            var grid = document.getElementById("LiveData").ej2_instances[0];
            for (var i = 0; i < grid.currentViewData.length; i++) {
                if (grid.currentViewData[i] === undefined) {
                    return;
                }
                var num = Math.floor(Math.random() * 99) + 1;
                num *= Math.floor(Math.random() * 2) === 1 ? 1 : -1;
                oldValue = grid.currentViewData[i].Net;
                if (i % 2 === 0) {
                    num = num * 0.25;
                } else if (i % 3 === 0) {
                    num = num * 0.83;
                } else if (i % 5 === 0) {
                    num = num * 0.79;
                } else if (i % 4 === 0) {
                    num = num * 0.42;
                } else {
                    num = num * 0.51;
                }
                isDataBound = true;
                grid.setCellValue(
                    grid.currentViewData[i].id,
                    'Net',
                    parseFloat(num.toFixed(2))
                );
                isDataBound = true;
                newValue = parseFloat(
                    (grid.currentViewData[i].Net - oldValue).toString().substring(0, 2)
                );
                grid.setCellValue(
                    grid.currentViewData[i].id,
                    'Change',
                    parseFloat(newValue.toFixed(2))
                );
                isDataBound = true;
                var ratingValue = grid.currentViewData[i].Net < 0 ? 'Sell' : 'Buy';
                grid.setCellValue(grid.currentViewData[i].id, 'Rating', ratingValue);
                var val = num + newValue;
                grid.setCellValue(grid.currentViewData[i].id, 'NetIncome', val);
            }
        }

    </script>

    <style>
        .e-grid .e-rowcell.e-poscell {
            color: green;
        }

        .e-intermediate-state-2:before {
            content: '\e87f';
        }

        .e-chevron-up:before {
            content: '\e910';
        }

        .e-chevron-down:before {
            content: '\e652';
        }

        .e-chevron-down-double:before {
            content: '\e304';
        }

        .e-chevron-up-double:before {
            content: '\e306';
        }

        .ic {
            height: 14px;
            width: 14px;
            margin-left: 3px;
        }

        .fluent .e-grid .e-rowcell.e-increase,
        .fluent2 .e-grid .e-rowcell.e-increase,
        .bootstrap5 .e-grid .e-rowcell.e-increase,
        .bootstrap5\.3 .e-grid .e-rowcell.e-increase,
        .tailwind3 .e-grid .e-rowcell.e-increase,
        .tailwind .e-grid .e-rowcell.e-increase,
        .material .e-grid .e-rowcell.e-increase,
        .fabric .e-grid .e-rowcell.e-increase,
        .bootstrap4 .e-grid .e-rowcell.e-increase,
        .bootstrap .e-grid .e-rowcell.e-increase,
        .highcontrast .e-grid .e-rowcell.e-increase,
        .fluent .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2 .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5 .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3 .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3 .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .material .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4 .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-grid .e-rowcell.e-increase,
        .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #DFFFE2;
            color: #00A653;
        }

        .fluent-dark .e-grid .e-rowcell.e-increase,
        .fluent2-dark .e-grid .e-rowcell.e-increase,
        .fluent2-highcontrast .e-grid .e-rowcell.e-increase,
        .bootstrap5-dark .e-grid .e-rowcell.e-increase,
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-increase,
        .highcontrast .e-grid .e-rowcell.e-increase,
        .tailwind3-dark .e-grid .e-rowcell.e-increase,
        .tailwind-dark .e-grid .e-rowcell.e-increase,
        .material-dark .e-grid .e-rowcell.e-increase,
        .fabric-dark .e-grid .e-rowcell.e-increase,
        .bootstrap-dark .e-grid .e-rowcell.e-increase,
        .fluent-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-highcontrast .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #315C35;
            color: #38FF9C;
        }

        .material3-dark .e-grid .e-rowcell.e-increase,
        .material3-dark .e-grid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #143E17;
            color: #8EDA94;
        }

        .fluent .e-grid .e-rowcell.e-decrease,
        .fluent2 .e-grid .e-rowcell.e-decrease,
        .bootstrap5 .e-grid .e-rowcell.e-decrease,
        .bootstrap5\.3 .e-grid .e-rowcell.e-decrease,
        .tailwind3 .e-grid .e-rowcell.e-decrease,
        .tailwind .e-grid .e-rowcell.e-decrease,
        .material .e-grid .e-rowcell.e-decrease,
        .fabric .e-grid .e-rowcell.e-decrease,
        .bootstrap4 .e-grid .e-rowcell.e-decrease,
        .bootstrap .e-grid .e-rowcell.e-decrease,
        .highcontrast .e-grid .e-rowcell.e-decrease,
        .fluent .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2 .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5 .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3 .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3 .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .material .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4 .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-grid .e-rowcell.e-decrease,
        .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #FFEBE9;
            color: #FF3740;
        }

        .fluent-dark .e-grid .e-rowcell.e-decrease,
        .fluent2-dark .e-grid .e-rowcell.e-decrease,
        .fluent2-highcontrast .e-grid .e-rowcell.e-decrease,
        .bootstrap5-dark .e-grid .e-rowcell.e-decrease,
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-decrease,
        .highcontrast .e-grid .e-rowcell.e-decrease,
        .tailwind3-dark .e-grid .e-rowcell.e-decrease,
        .tailwind-dark .e-grid .e-rowcell.e-decrease,
        .material-dark .e-grid .e-rowcell.e-decrease,
        .fabric-dark .e-grid .e-rowcell.e-decrease,
        .bootstrap-dark .e-grid .e-rowcell.e-decrease,
        .fluent-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fluent2-highcontrast .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5\.3-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind3-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #55241E;
            color: #FF9CA0;
        }

        .material3-dark .e-grid .e-rowcell.e-decrease,
        .material3-dark .e-grid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #3A1618;
            color: #FF7B81;
        }

        #LiveData .e-headercelldiv {
            height: 43px;
            line-height: 39px;
        }

        #LiveData .e-rowcell .e-icons {
            line-height: 0;
        }

        .fluent .above-0,
        .fluent2 .above-0,
        .bootstrap5 .above-0,
        .tailwind .above-0,
        .material .above-0,
        .fabric .above-0,
        .bootstrap4 .above-0,
        .bootstrap .above-0,
        .highcontrast .above-0,
        .fluent .e-rowcell .e-icons.above-0,
        .fluent2 .e-rowcell .e-icons.above-0,
        .bootstrap5 .e-rowcell .e-icons.above-0,
        .tailwind .e-rowcell .e-icons.above-0,
        .material .e-rowcell .e-icons.above-0,
        .fabric .e-rowcell .e-icons.above-0,
        .bootstrap4 .e-rowcell .e-icons.above-0,
        .bootstrap .e-rowcell .e-icons.above-0,
        .highcontrast .e-rowcell .e-icons.above-0,
        .above-0,
        .e-rowcell .e-icons.above-0 {
            color: #00A653;
        }

        .fluent-dark .above-0,
        .fluent2-dark .above-0,
        .fluent2-highcontrast .above-0,
        .bootstrap5-dark .above-0,
        .tailwind-dark .above-0,
        .material-dark .above-0,
        .fabric-dark .above-0,
        .bootstrap-dark .above-0,
        .fluent-dark .e-rowcell .e-icons.above-0,
        .fluent2-dark .e-rowcell .e-icons.above-0,
        .fluent2-highcontrast .e-rowcell .e-icons.above-0,
        .bootstrap5-dark .e-rowcell .e-icons.above-0,
        .tailwind-dark .e-rowcell .e-icons.above-0,
        .material-dark .e-rowcell .e-icons.above-0,
        .fabric-dark .e-rowcell .e-icons.above-0,
        .bootstrap-dark .e-rowcell .e-icons.above-0 {
            color: #38FF9C;
        }

        .fluent .below-0,
        .fluent2 .below-0,
        .bootstrap5 .below-0,
        .tailwind .below-0,
        .material .below-0,
        .fabric .below-0,
        .bootstrap4 .below-0,
        .bootstrap .below-0,
        .highcontrast .below-0,
        .fluent .e-rowcell .e-icons.below-0,
        .fluent2 .e-rowcell .e-icons.below-0,
        .bootstrap5 .e-rowcell .e-icons.below-0,
        .tailwind .e-rowcell .e-icons.below-0,
        .material .e-rowcell .e-icons.below-0,
        .fabric .e-rowcell .e-icons.below-0,
        .bootstrap4 .e-rowcell .e-icons.below-0,
        .bootstrap .e-rowcell .e-icons.below-0,
        .highcontrast .e-rowcell .e-icons.below-0,
        .below-0,
        .e-rowcell .e-icons.below-0 {
            color: #FF3740;
        }

        .fluent-dark .below-0,
        .fluent2-dark .below-0,
        .fluent2-highcontrast .below-0,
        .bootstrap5-dark .below-0,
        .tailwind-dark .below-0,
        .material-dark .below-0,
        .fabric-dark .below-0,
        .bootstrap-dark .below-0,
        .fluent-dark .e-rowcell .e-icons.below-0,
        .fluent2-dark .e-rowcell .e-icons.below-0,
        .fluent2-highcontrast .e-rowcell .e-icons.below-0,
        .bootstrap5-dark .e-rowcell .e-icons.below-0,
        .tailwind-dark .e-rowcell .e-icons.below-0,
        .material-dark .e-rowcell .e-icons.below-0,
        .fabric-dark .e-rowcell .e-icons.below-0,
        .bootstrap-dark .e-rowcell .e-icons.below-0 {
            color: #FF9CA0;
        }

        .fluent .neutral,
        .fluent2 .neutral,
        .bootstrap5 .neutral,
        .tailwind .neutral,
        .material .neutral,
        .fabric .neutral,
        .bootstrap4 .neutral,
        .bootstrap .neutral,
        .highcontrast .neutral,
        .fluent .e-rowcell .e-icons.neutral,
        .fluent2 .e-rowcell .e-icons.neutral,
        .bootstrap5 .e-rowcell .e-icons.neutral,
        .tailwind .e-rowcell .e-icons.neutral,
        .material .e-rowcell .e-icons.neutral,
        .fabric .e-rowcell .e-icons.neutral,
        .bootstrap4 .e-rowcell .e-icons.neutral,
        .bootstrap .e-rowcell .e-icons.neutral,
        .highcontrast .e-rowcell .e-icons.neutral,
        .neutral,
        .e-rowcell .e-icons.neutral {
            color: #888888;
        }

        .fluent-dark .neutral,
        .fluent2-dark .neutral,
        .fluent2-highcontrast .neutral,
        .bootstrap5-dark .neutral,
        .tailwind-dark .neutral,
        .material-dark .neutral,
        .fabric-dark .neutral,
        .bootstrap-dark .neutral,
        .fluent-dark .e-rowcell .e-icons.neutral,
        .fluent2-dark .e-rowcell .e-icons.neutral,
        .fluent2-highcontrast .e-rowcell .e-icons.neutral,
        .bootstrap5-dark .e-rowcell .e-icons.neutral,
        .tailwind-dark .e-rowcell .e-icons.neutral,
        .material-dark .e-rowcell .e-icons.neutral,
        .fabric-dark .e-rowcell .e-icons.neutral,
        .bootstrap-dark .e-rowcell .e-icons.neutral {
            color: #CCCCCC;
        }

        .side-space {
            padding: 0 5px;
        }

    </style>

}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how frequently Grid cells are updated in real-time data at a set interval.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates how frequently the Grid cell is updated with real-time data in ASP.NET Core Data Grid control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            The updating of Grid cells can be done without any performance lagging by using the <code>setCellValue</code>
            method.
            The style of Grid cells can be customized using the <code>queryCellInfo</code> event.
        </p>
        <p>In this demo,</p>
        <ul>
            <li> Clicking the start update button triggers automatic updates of Grid cells at the interval set in the feed delay
            text box which is a milliseconds format.</li>
            <li> Clicking the stop update button will halt the automatic updating of Grid cells.</li>
        </ul>
        <p>
            More information on the queryCellInfo can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/javascript/documentation/api/grid/#querycellinfo" aria-label="Navigate to the querycellinfo event reference for ASP.NET Core Grid control">
                documentation
                section
            </a>.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Data Grid Overview Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Overview in ASP.NET Core Data Grid Control</h1>
}
