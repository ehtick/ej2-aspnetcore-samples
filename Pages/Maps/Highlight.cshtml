@page
@model EJ2CoreSampleBrowser.Pages.Maps.Highlight

@using Syncfusion.EJ2.Maps;

@{
    var markers = new Highlight().getHighlightMarkers();
    var oklahoma = new Highlight().getOklahoma();
    var markerlocation = new[]
    {
        new { latitude = 35.6379762, longitude = -97.4823761 },
        new { latitude = 35.5676663, longitude = -97.5128031 },
        new { latitude = 35.5412361, longitude = -97.601552 },
        new { latitude = 35.5451471, longitude = -97.5661039 },
        new { latitude = 35.5120376, longitude = -97.5918531 },
        new { latitude = 35.5112516, longitude = -97.5843 },
        new { latitude = 35.4737072, longitude = -97.5158072 },
        new { latitude = 35.4575239, longitude = -97.6179457 },
        new { latitude = 35.4362676, longitude = -97.5998354 },
        new { latitude = 35.3954872, longitude = -97.5962305 },
        new { latitude = 35.3492258, longitude = -97.5294113 },
        new { latitude = 35.5260794, longitude = -98.7032318 },
        new { latitude = 34.7827916, longitude = -98.3001709 },
        new { latitude = 34.0793936, longitude = -98.5583496 },
        new { latitude = 36.1434199, longitude = -97.0690155 },
        new { latitude = 36.0170318, longitude = -96.11063 },
        new { latitude = 36.1608845, longitude = -96.0205078 },
        new { latitude = 36.1323292, longitude = -95.9624863 },
        new { latitude = 36.1317746, longitude = -95.9046364 },
        new { latitude = 36.1604341, longitude = -95.8885002 }
    };
    var dataLabel = new[]
    {
        new { longitude = -101.9450281, latitude = 35.2018863, name = "Amarillo" },
        new { longitude = -98.0971969, latitude = 35.5514624, name = "El Reno" },
        new { longitude = -97.8432238, latitude = 35.5150073, name = "Yukon" },
        new { longitude = -97.2557752, latitude = 35.4933852, name = "Harrah" },
        new { longitude = -97.1019391, latitude = 35.3620257, name = "Shawnee" },
        new { longitude = -97.072877, latitude = 35.6853011, name = "Wellston" },
        new { longitude = -96.2093353, latitude = 36.133417, name = "Lotsee" },
        new { longitude = -96.3077788, latitude = 36.1879088, name = "Sand Springs" },
        new { longitude = -98.7075369, latitude = 35.931371, name = "Oakwood" },
        new { longitude = -98.0003367, latitude = 35.0403272, name = "Chickasha" },
        new { longitude = -97.1836494, latitude = 36.4595554, name = "Red Rock" },
        new { longitude = -96.7148021, latitude = 35.4859752, name = "Prague" },
        new { longitude = -97.9339651, latitude = 36.1022835, name = "Hennessey" },
        new { longitude = -96.2595621, latitude = 35.2453183, name = "Wetumka" },
        new { longitude = -97.4499583, latitude = 35.0304344, name = "Purcell" },
        new { longitude = -96.1059044, latitude = 35.605942, name = "Okmulgee" },
        new { longitude = -97.9684792, latitude = 35.8439429, name = "Kingfisher" },
        new { longitude = -95.7691956, latitude = 34.9332303, name = "McAlester" },
        new { longitude = -96.1289978, latitude = 34.3853794, name = "Atoka" },
        new { longitude = -97.1191406, latitude = 34.5042932, name = "Davis" },
        new { longitude = -98.3564758, latitude = 36.7542898, name = "Cherokee" },
        new { longitude = -95.3695679, latitude = 35.7476268, name = "Muskogee" },
        new { longitude = -95.582428, latitude = 35.2871057, name = "Eufaula" },
        new { longitude = -96.9412994, latitude = 36.0446575, name = "Mehan" },
        new { longitude = -99.0925598, latitude = 35.0299964, name = "Hobart" },
        new { longitude = -98.4924316, latitude = 33.9137338, name = "Wichita Falls" },
        new { longitude = -98.9675903, latitude = 35.5154609, name = "Clinton" },
        new { longitude = -98.923645, latitude = 36.1478557, name = "Seiling" },
        new { longitude = -99.2985535, latitude = 36.1500735, name = "Vici" },
        new { longitude = -95.3173828, latitude = 36.3084855, name = "Pryor" },
        new { longitude = -96.7524719, latitude = 34.9596836, name = "Konawa" }
    };
    var datasource2 = new[]
    {
        new { latitude = 36.0808845, longitude = -96.0205078, text = "5/18 ATMs" }
    };
    var datasource1 = new[]
    {
        new { latitude = 35.5112516, longitude = -97.5843, text = "10/18 ATMs" }
    };
    var centerPosition = new MapsCenterPosition
    {
        Latitude = 35.65,
        Longitude = -97.3
    };
    var zoomfactor = 1.75;
    var border = new MapsBorder { Color = "#EEDA97", Width = 1, Opacity = 1 };
    var markerBorder = new MapsBorder { Color = "transparent", };
    string marker = markers as string;
    var tooltip = new MapsTooltipSettings
    {
        Visible = true,
        ValuePath = "text",
        TextStyle = new MapsFont
        {
            FontFamily = "Segoe UI"
        }
    };
}

@section ControlsSection{
    
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <div style="width:400px;margin:auto;padding-bottom:10px">
                    <img src="~/styles/images/maps/atm.jpg" alt="ATM indication" style="width:25px;height:25px;float:left">
                    <div style="padding-left:30px;font-size:18px;font-weight:400;">ATM locations in Oklahoma, USA</div>
                </div> 
                <ejs-maps id="maps" load="window.onMapLoad" centerPosition="centerPosition">
                    <e-maps-zoomsettings enable="false" zoomFactor="zoomfactor"></e-maps-zoomsettings>
                    <e-maps-layers>
                        <e-maps-layer shapeData="@oklahoma" >
                            <e-layersettings-shapesettings fill="#F5F5F5" border="border"></e-layersettings-shapesettings>
                            <e-layersettings-markers>
                                <e-layersettings-marker visible="true" animationDuration="0" shape="@MarkerType.Image" imageUrl="../styles/images/maps/ballon.png" fill="white" width="20" height="20" fill= "#000080" dataSource="markerlocation" border="markerBorder" >
                                </e-layersettings-marker>
                                <e-layersettings-marker visible="true" animationDuration="0" shape="Circle" width="130" height="130" fill="rgba(70,130,180,0.3)" border="markerBorder" dataSource="datasource1" tooltipSettings="tooltip">
                                </e-layersettings-marker>
                                <e-layersettings-marker visible="true" animationDuration="0" shape="Circle"  width="130" height="130" fill="rgba(70,130,180,0.3)" border="markerBorder" dataSource="datasource2" tooltipSettings="tooltip">
                                </e-layersettings-marker>
                                <e-layersettings-marker visible="true" animationDuration="0" template="<div style='color: black;'>{{:name}}</div>" dataSource="dataLabel">
                                </e-layersettings-marker>
                            </e-layersettings-markers>
                    </e-maps-layer>
                    </e-maps-layers>
                </ejs-maps>
                <div style="float: right; margin-right: 10px;">
                    Source:
                    <a href="https://www.google.co.in/maps/search/atm+in+oklahoma/@@35.3864432,-98.2888719,8z/data=!3m1!4b1" rel="nofollow" target="_blank" aria-label="google">www.google.co.in/maps</a>
                </div>
            </div>
        </div>
    </div>

}

<script>
    function onMapLoad(args) { 
        @* custom code start *@
        var theme = themeName ? themeName : "Material";
        args.maps.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
        @* custom code end *@        
        }
</script>
@section Meta{
                    <meta name="description" content="This example demonstrates the Highlighted region in ASP.NET Core Maps control. Explore here for more details."/>
                }
@section ActionDescription{
<div id="action-description">
    <p>
        This sample depicts the ATM populated areas in Oklahoma by highlighting the regions.
   </p>
</div>
}
@section Description{
<div id="description">
    <p>
      In this example, you can see how to highlight some specific region by rendering circles. Any custom HTML element can be used as a marker.
    </p>
<br/>
    <p style="font-weight: 500">Injecting Module</p>
    <p>
      Maps component features are segregated into individual feature-wise modules. To use marker template, you need to inject <code>Marker</code> module using <code>Maps.Inject(Marker)</code> method.
    </p>
</div>
}
@section Title{
                    <title>ASP.NET Core Maps Highlighted region Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Highlighted region in ASP.NET Core Maps Control</h1>
                }