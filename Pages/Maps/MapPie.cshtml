@page
@model EJ2CoreSampleBrowser.Pages.Maps.MapPie

@using Syncfusion.EJ2.Maps;

@{
    var titleStyle = new MapsFont
    {
        Size = "16px",
        FontFamily = "Segoe UI"
    };
    var colormapping = new List<Syncfusion.EJ2.Maps.MapsColorMapping>
    {
        new MapsColorMapping
        {
            From = 0.1, To = 4, Color = "#634D6F", Label = "0-14 years",
        },
        new MapsColorMapping
        {
            From = 5, To = 14, Color = "#B34D6D", Label = "15-24 years"
        },
        new MapsColorMapping
        {
            From = 15, To = 59, Color = "#557C5C", Label = "25-54 years"
        },
        new MapsColorMapping
        {
            From = 60, To = 100, Color = "#5E55E2", Label = "55-64 years"
        }
    };
    var data = new[]
    {
        new { latitude = 61.938950426660604, longitude = 97.03125 },
    };
    var data1 = new[]
    {
        new { latitude = 57.70414723434193, longitude = -114.08203125 },
    };
    var data2 = new[]
    {
        new { latitude = 39.90973623453719, longitude = -103.0078125 },
    };
    var data3 = new[]
    {
        new { latitude = 35.746512259918504, longitude = 102.216796875 },
    };
    var data4 = new[]
    {
        new { latitude = -8.667918002363107, longitude = -52.55859375 },
    };
    var data5 = new[]
    {
        new { latitude = -23.725011735951796, longitude = 132.978515625 }
    };
    var continent = new MapPie().GetWroldContinentMap();
}

@section ControlsSection{
    
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <ejs-maps id="container" resize="mapsResized" load="window.mapload" loaded="window.onMapLoaded">
                    <e-maps-legendsettings position="Bottom" visible="true"></e-maps-legendsettings>
                    <e-maps-zoomsettings enable="false"></e-maps-zoomsettings>
                    <e-maps-titlesettings alignment="@Syncfusion.EJ2.Maps.Alignment.Center" text="Top 6 largest countries age group details" textStyle="titleStyle"></e-maps-titlesettings>
                    <e-maps-layers>
                        <e-maps-layer shapeData="@continent">
                            <e-layersettings-shapesettings fill="#E5E5E5" colorMapping="colormapping"></e-layersettings-shapesettings>
							<e-layersettings-markers>
								<e-layersettings-marker visible="true" template="<div id='template' style='display:none'></div>" dataSource="data" animationDuration="0"></e-layersettings-marker>
								<e-layersettings-marker visible="true" template="<div id='template1' style='display:none'></div>" dataSource="data1" animationDuration="0"></e-layersettings-marker>
								<e-layersettings-marker visible="true" template="<div id='template2' style='display:none'></div>" dataSource="data2" animationDuration="0"></e-layersettings-marker>
								<e-layersettings-marker visible="true" template="<div id='template3' style='display:none'></div>" dataSource="data3" animationDuration="0"></e-layersettings-marker>
								<e-layersettings-marker visible="true" template="<div id='template4' style='display:none'></div>" dataSource="data4" animationDuration="0"></e-layersettings-marker>
								<e-layersettings-marker visible="true" template="<div id='template5' style='display:none'></div>" dataSource="data5" animationDuration="0"></e-layersettings-marker>
							</e-layersettings-markers>
                        </e-maps-layer>
                    </e-maps-layers>
                </ejs-maps>
                <div style="float: right; margin-right: 10px;">
                    Source:
                    <a href="http://www.nationmaster.com/country-info/stats/People/Age-structure/55--64-years" rel="nofollow" target="_blank" aria-label="nationmaster">www.nationmaster.com</a>
                </div>
            </div>
        </div>
    </div>
}
<style>
    #template, #template1, #template2, #template3, #template4, #template5 {
        position: absolute !important;
        margin-left: -35px;
        margin-top: -35px;
    }
</style>
<script>
    var chart, chart1, chart2, chart3, chart4, chart5;
    @* custom code start *@
    function mapload(args) {
        var theme = themeName ? themeName : "Material";
        args.maps.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
    };
    @* custom code end *@
    function mapsResized(args) {
        chart.destroy();
        chart1.destroy();
        chart2.destroy();
        chart3.destroy();
        chart4.destroy();
        chart5.destroy();
    }

    function onMapLoaded(args) {
         chart = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'Russia',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 16 }, { 'x': '15-24 years', y: 11.5 },
                        { 'x': '25-54 years', y: 45.9 }, { 'x': '55-64 years', y: 13.5 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart.appendTo('#template');
        chart1 = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'Canada',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 15.5 }, { 'x': '15-24 years', y: 12.9 },
                        { 'x': '25-54 years', y: 41.4 }, { 'x': '55-64 years', y: 13.3 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart1.appendTo('#template1');
        chart2 = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'USA',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 20 }, { 'x': '15-24 years', y: 13.7 },
                        { 'x': '25-54 years', y: 40.2 }, { 'x': '55-64 years', y: 12.3 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart2.appendTo('#template2');
        chart3 = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'China',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 17.2 }, { 'x': '15-24 years', y: 15.4 },
                        { 'x': '25-54 years', y: 46.9 }, { 'x': '55-64 years', y: 11.3 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart3.appendTo('#template3');
        chart4 = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'Brazil',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 24.2 }, { 'x': '15-24 years', y: 16.7 },
                        { 'x': '25-54 years', y: 43.6 }, { 'x': '55-64 years', y: 8.2 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart4.appendTo('#template4');
        chart5 = new ej.charts.AccumulationChart({
            background: 'transparent',
            width: '70',
            height: '70',
            legendSettings: {
                visible: false
            },
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: 'Australia',
                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],
                    dataSource: [
                        { 'x': '0-14 years', y: 18.1 }, { 'x': '15-24 years', y: 13.4 },
                        { 'x': '25-54 years', y: 42 }, { 'x': '55-64 years', y: 11.8 },
                    ],
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart5.appendTo('#template5');

    }
</script>
@section Meta{
                    <meta name="description" content="This example demonstrates the Map with Pie chart in ASP.NET Core Maps control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the placing of pie charts on the maps. Pie chart is rendered with the age group detais of top 6 largest countries.
       </p>
    </div>
}
@section Description{
    
    <div id="description">
        <p>
          In this example, you can see how to render the pie chart as marker in map. Any custom HTML elements can be used as a marker. 
    
        </p>
    <br/>
        <p style="font-weight: 500">Injecting Module</p>
        <p>
         Maps component features are segregated into individual feature-wise modules. To use marker template, you need to inject <code>Marker</code> module using <code>Maps.Inject(Marker)</code> method.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Maps Map with Pie chart Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Map with Pie chart in ASP.NET Core Maps Control</h1>
                }