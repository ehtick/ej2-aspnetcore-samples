@page

@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">
        <div class="control_wrapper">
            <ejs-kanban id="Kanban" keyField="Status" allowDragAndDrop="false" dialogOpen="dialogOpen" >
                <e-data-manager url="http://localhost:62928/api/Kanban" crossdomain="true"></e-data-manager>
                <e-kanban-columns>
                    <e-kanban-column headerText="To Do" keyField="Open"></e-kanban-column>
                    <e-kanban-column headerText="In Progress" keyField="InProgress"></e-kanban-column>
                    <e-kanban-column headerText="Testing" keyField="Testing"></e-kanban-column>
                    <e-kanban-column headerText="Done" keyField="Close"></e-kanban-column>
                </e-kanban-columns>
                <e-kanban-cardsettings headerField="Id" contentField="Summary"></e-kanban-cardsettings>
            </ejs-kanban>
        </div>
    </div>
}

<script>
    function dialogOpen(args) {
        args.cancel = true;
    }

</script>
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the way of data binding to Kanban control using remote service.
            The data source of Kanban is fetched from remote service using DataManager and WebApiAdaptor.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Kanban supports data binding using the <code>DataSource</code> property that can be assigned with the
            instance of
            DataManager to bind remote data.
        </p>
        <p>
            The DataManager, which acts as an interface between the service endpoint and the Kanban will require the below
            minimal information to interact with service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager</code> -> <code>Url</code>: Defines the service endpoint to fetch the data.</li>
            <li>
                <code>DataManager</code> -> <code>Adaptor</code>: Defines the adaptor option. By default, ODataAdaptor is
                used for remote binding.
            </li>
        </ul>
        <p>
            The adaptor is responsible for processing response and request from/to the service endpoint. @@ syncfusion/ej2-data
            package provides some predefined adaptors which are designed to interact with particular service endpoints. They
            are:
        </p>
        <ul>
            <li>
                UrlAdaptor - Use this to interact with any remote services. This is the base adaptor for all remote based
                adaptors.
            </li>
            <li>ODataAdaptor - Use this to interact with OData endpoints.</li>
            <li>ODataV4Adaptor - Use this to interact with OData V4 endpoints.</li>
            <li>WebApiAdaptor - Use this to interact with Web API created under OData standards.</li>
            <li>WebMethodAdaptor - Use this to interact with web methods.</li>
        </ul>
        <p>
            In this demo, remote data is bound by assigning service data as an instance of DataManager to the
            <code>DataSource</code> property.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Remote Data in ASP.NET Core Kanban control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core Kanban Remote Data Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Remote Data in ASP.NET Core Kanban Control</h1>
                }
