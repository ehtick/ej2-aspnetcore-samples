@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var data = new KanbanDataModels().KanbanCardTasks();
}
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="control_wrapper">
            <ejs-kanban id="Kanban" keyField="Status" dataSource="@data" created="onCreate">
                <e-kanban-columns>
                    <e-kanban-column headerText="To Do" keyField="Open"></e-kanban-column>
                    <e-kanban-column headerText="In Progress" keyField="InProgress"></e-kanban-column>
                    <e-kanban-column headerText="In Review" keyField="Review"></e-kanban-column>
                    <e-kanban-column headerText="Done" keyField="Close"></e-kanban-column>
                </e-kanban-columns>
                <e-kanban-cardsettings contentField="Summary" headerField="Id"></e-kanban-cardsettings>
            </ejs-kanban>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Show/Hide Columns">
            <tbody>
                <tr>
                    <td>
                        <ejs-checkbox id="Open" label="To Do" checked="true" change="onChange"></ejs-checkbox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <ejs-checkbox id="InProgress" label="In Progress" checked="true" change="onChange"></ejs-checkbox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <ejs-checkbox id="Review" label="In Review" checked="true" change="onChange"></ejs-checkbox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <ejs-checkbox id="Close" label="Done" checked="true" change="onChange"></ejs-checkbox>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}

<style type="text/css">
    #property tr {
        height: 50px;
    }
</style>

@section PreScripts {
    <script>
        var kanbanObj;
        function onCreate() {
            kanbanObj = this;
        }
        function onChange(args) {
            if (args.checked) {
                kanbanObj.showColumn(this.element.id);
            } else {
                kanbanObj.hideColumn(this.element.id);
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how to control the visibility of Kanban columns dynamically. Check or uncheck the
            checkboxes
            from the property panel to show or hide the corresponding column.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Kanban provides an option to show or hide its columns dynamically using the following public methods.
        </p>
        <ul>
            <li><code>ShowColumn:</code> Makes the corresponding column visible based on the specified ID.</li>
            <li><code>HideColumn:</code> Hides the corresponding column based on the specified column ID.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Show Hide Columns in ASP.NET Core Kanban control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core Kanban Show Hide Columns Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Show Hide Columns in ASP.NET Core Kanban Control</h1>
                }