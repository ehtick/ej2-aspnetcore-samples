@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var data = new KanbanDataModels().KanbanTasks();
    var columnDropDowns = new KanbanDataModels().ColumnDropDowns();
    var statusData = new KanbanDataModels().StatusData();
    var button = new
    {
        content = "OK",
        isPrimary = true
    };
}

@section ControlsSection{
<div class="col-lg-9 control-section">
    <div class="control_wrapper">
        <ejs-kanban id="Kanban" keyField="Status" dataSource="@data" created="onCreate">
            <e-kanban-columns>
                <e-kanban-column headerText="To Do" keyField="Open" allowToggle="true" showItemCount="true" minCount="6" maxCount="8"></e-kanban-column>
                <e-kanban-column headerText="In Progress" keyField="InProgress" allowToggle="true" showItemCount="true" minCount="2"></e-kanban-column>
                <e-kanban-column headerText="Done" keyField="Close" allowToggle="true" showItemCount="true" maxCount="4"></e-kanban-column>
            </e-kanban-columns>
            <e-kanban-cardsettings contentField="Summary" headerField="Id"></e-kanban-cardsettings>
            <e-kanban-swimlanesettings keyField="Assignee" allowDragAndDrop="true"></e-kanban-swimlanesettings>
        </ejs-kanban>
    </div>
    <div>
        <ejs-dialog id="dialog" width="350px" header="Validation" isModal="true" visible="false" showCloseIcon="true" created="onDialogCreate">
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="@button" click="dlgButtonClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
    </div>
</div>
    <div class="col-lg-3 property-section property-customization">
        <div class="property-panel-section">
            <p class="property-panel-header">Constraint</p>
            <div class="property-panel-content">
                <table class="e-constraint-table">
                    <tr>
                        <td class="e-constraint-label">
                            <div>Type</div>
                        </td>
                        <td>
                            <div>
                                <ejs-dropdownlist id="type" width="100%" index="0" dataSource="@columnDropDowns" change="changeContrainType">
                                    <e-dropdownlist-fields value="Value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>

                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <p class="property-panel-header">Validate Constraints</p>
            <div class="property-panel-content">
                <form id="column">
                    <table class="e-constraint-table">
                        <tr>
                            <td class="e-constraint-label">
                                <div>Columns</div>
                            </td>
                            <td>
                                <ejs-dropdownlist id="key" dataSource="@statusData" placeholder="Header Text" change="columnObj" created="onDropDownCreate">
                                    <e-dropdownlist-fields text="Value" value="ListId"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                        </tr>
                        <tr>
                            <td class="e-constraint-label">
                                <div>MinCount</div>
                            </td>
                            <td>
                                <ejs-numerictextbox id="minIndex" format="###.##" min="0" placeholder="Minimum Count" created="onMinCreate"></ejs-numerictextbox>
                            </td>
                        </tr>
                        <tr>
                            <td class="e-constraint-label">
                                <div>MaxCount</div>
                            </td>
                            <td>
                                <ejs-numerictextbox id="maxIndex" format="###.##" min="0" placeholder="Maximum Count" created="onMaxCreate"></ejs-numerictextbox>
                            </td>
                        </tr>
                    </table>
                    <div class="e-validate">
                        <ejs-button id="validate" content="VALIDATE"></ejs-button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<style>
    .property-panel-content .e-constraint-table {
        width: 100%
    }

    .property-panel-content .e-constraint-label {
        width: 40%
    }

    .property-panel-content .e-validate {
        padding-top: 13px;
        text-align: center;
    }

    .property-panel-content td {
        padding-top: 10px;
    }

    .property-panel-header {
        padding-bottom: 0px;
    }
</style>

@section PreScripts {
    <script>
        var kanbanObj;
        var minimum;
        var maximum;
        var keyObj;
        var dialogObj;

        function onDialogCreate() {
            dialogObj = this;
        }

        function changeContrainType(args) {
            kanbanObj.constraintType = args.value;
        }

        function columnObj(args) {

            var changeIndex = args.value;
            if (changeIndex !== null) {
                minimum.value = kanbanObj.columns[changeIndex].minCount;
                maximum.value = kanbanObj.columns[changeIndex].maxCount;
            }
        }
        var addFormObj = new ej.inputs.FormValidator('#column');
        function onDropDownCreate() {
            keyObj = this;
        }
        function onCreate() {
            kanbanObj = this;
        }
        function onMinCreate() {
            minimum = this;
        }
        function onMaxCreate() {
            maximum = this;
        }
        document.getElementById('validate').onclick = function () {
            var colindex = keyObj.index;
            var colText = (document.getElementById('key')).value;
            var colmin = parseInt((document.getElementById('minIndex')).value, 10);
            var colmax = parseInt((document.getElementById('maxIndex')).value, 10);
            if (colText === '') {
                dialogObj.content = 'Select column Header Text';
                dialogObj.show();
            } else if (colText !== '' && minimum.value === null && maximum.value === null) {
                dialogObj.content = 'Enter column min-count or max-count';
                dialogObj.show();
            } else {
                kanbanObj.columns[colindex].headerText = colText;
                if (minimum.value !== null) {
                    kanbanObj.columns[colindex].minCount = colmin;
                }
                if (minimum.value !== null) {
                    kanbanObj.columns[colindex].maxCount = colmax;
                }
                addFormObj.reset();
            }
        };
        document.getElementById('column').addEventListener('submit', (e) => e.preventDefault());

        function dlgButtonClick() {
            dialogObj.hide();
        }

    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the number of cards validation for each column of the Kanban control. Configured the options in the property panel to change the constraint type and related attributes.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>This sample validates the number of cards in the particular column or swimlane using the <code>ConstraintType</code> property. This property contains two types:</p>
        <ul>
            <li><code>Column</code>: Validates the number of cards based on the particular column. By default, column validation is applied to Kanban board.</li>
            <li><code>Swimlane</code>: Validation applies based on number of cards in a particular column cell and swimlane.</li>
        </ul>
        <p>This sample contains the following properties:</p>
        <ul>
            <li><code>Columns</code>: You can choose a column and set maximum and minimum limit to the selected column.</li>
            <li><code>MinCount</code>: Minimum limit of cards required for each column. If the cards count do not reach the minimum limit, it will indicate the validation failed state.</li>
            <li><code>MaxCount</code>: Maximum limit of cards per column. If the cards count exceeds the maximum limit, it will indicate the validation failed state.</li>
        </ul>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the WIP Validation in ASP.NET Core Kanban control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core Kanban WIP Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of WIP Validation in ASP.NET Core Kanban Control</h1>
                }