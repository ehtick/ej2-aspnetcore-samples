@page

@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Navigations;
@{
    var content0 = "HyperText Markup Language, commonly referred to as HTML, is the standard markup language used to create web" +
                   "pages. Along with CSS, and JavaScript, HTML is a cornerstone technology, used by most websites to create visually" +
                   "engaging web pages, user interfaces for web applications, and user interfaces for many mobile applications. Web" +
                   "browsers can read HTML files and render them into visible or audible web pages. HTML describes the structure of a" +
                   "website semantically along with cues for presentation, making it a markup language, rather than a programming language.";
    var content1 = "C# is intended to be a simple, modern, general-purpose, object-oriented programming language. Its development" +
                   "team is led by Anders Hejlsberg. The most recent version is C# 5.0, which was released on August 15, 2012.";
    var content2 = "Java is a set of computer software and specifications developed by Sun Microsystems, later acquired by Oracle" +
                   "Corporation, that provides a system for developing application software and deploying it in a cross - platform computing" +
                   "environment. Java is used in a wide variety of computing platforms from embedded devices and mobile phones to" +
                   "enterprise servers and supercomputers. While less common, Java applets run in secure, sandboxed environments to" +
                   "provide many features of native applications and can be embedded in HTML pages.";
    var content3 = "The command-line compiler, VBC.EXE, is installed as part of the freeware .NET Framework SDK. Mono also" +
                   "includes a command - line VB.NET compiler. The most recent version is VB 2012, which was released on August 15, 2012.";
    var content4 = "Xamarin is a San Francisco, California based software company created in May 2011 by the engineers that created Mono, Mono" +
                   "for Android and MonoTouch that are cross-platform implementations of the Common Language Infrastructure (CLI) and Common Language" +
                   "Specifications (often called Microsoft .NET). With a C#-shared codebase, developers can use Xamarin tools to write native Android," +
                   "iOS, and Windows apps with native user interfaces and share code across multiple platforms. Xamarin has over 1 million developers" +
                   "in more than 120 countries around the World as of May 2015.";
    var content5 = "ASP.NET is an open-source server-side web application framework designed for web development to produce" +
                   "dynamic web pages. It was developed by Microsoft to allow programmers to build dynamic web sites, web applications" +
                   "and web services. It was first released in January 2002 with version 1.0 of the .NET Framework, and is the successor" +
                   "to Microsoft Active Server Pages(ASP) technology. ASP.NET is built on the Common Language Runtime(CLR), allowing" +
                   "programmers to write ASP.NET code using any supported .NET language. The ASP.NET SOAP extension framework allows" +
                   "ASP.NET components to process SOAP messages.";
    var content6 = "The ASP.NET MVC is a web application framework developed by Microsoft, which implements the" +
                   "model–view–controller(MVC) pattern. It is open - source software, apart from the ASP.NET Web Forms component which is" +
                   "proprietary. In the later versions of ASP.NET, ASP.NET MVC, ASP.NET Web API, and ASP.NET Web Pages(a platform using" +
                   "only Razor pages) will merge into a unified MVC 6. The project is called ASP.NET Next.";
    var content7 = "JavaScript (JS) is an interpreted computer programming language. It was originally implemented as part of" +
                   "web browsers so that client - side scripts could interact with the user, control the browser, communicate" +
                   "asynchronously, and alter the document content that was displayed. More recently, however, it has become common in"+
                   "both game development and the creation of desktop applications.";

    var positionData = new string[] { "Scrollable", "Popup" };
    var orientationData = new string[] { "Top", "Bottom", "Left", "Right" };

    var headerText0 = new TabHeader { Text = "HTML" };
    var headerText1 = new TabHeader { Text = "C-Sharp(C#)" };
    var headerText2 = new TabHeader { Text = "Java" };
    var headerText3 = new TabHeader { Text = "VB.NET" };
    var headerText4 = new TabHeader { Text = "Xamarin" };
    var headerText5 = new TabHeader { Text = "ASP.NET" };
    var headerText6 = new TabHeader { Text = "ASP.NET MVC" };
    var headerText7 = new TabHeader { Text = "JavaScript" };
}

<script type="text/javascript">
    var tabObj;
    function tabCreated() {
        tabObj = document.getElementById('adaptiveTab').ej2_instances[0];
    }
    // Change event funtion for DropDownList component
    function changeHeaderPosition(e) {
        tabObj.headerPlacement = e.itemData.value;
        tabObj.dataBind();
    }
    function changeOverFlowMode(e) {
        if (e.itemData.value != null && e.itemData.value === 'Scrollable') {
            tabObj.overflowMode = 'Scrollable';
        } else {
            tabObj.overflowMode = 'Popup';
        }
        tabObj.dataBind();
    }
</script>

@section ControlsSection{
<div class="e-tab-section">
    <div class="col-lg-8 content-wrapper control-section">
        <div class="e-sample-resize-container">
            <ejs-tab id="adaptiveTab" height="250px" width="auto" created="tabCreated">
                <e-tab-tabitems>
                    <e-tab-tabitem header="headerText0" content="@content0"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText1" content="@content1"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText2" content="@content2"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText3" content="@content3"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText4" content="@content4"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText5" content="@content5"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText6" content="@content6"></e-tab-tabitem>
                    <e-tab-tabitem header="headerText7" content="@content7"></e-tab-tabitem>
                </e-tab-tabitems>
            </ejs-tab>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tbody>
                <tr>
                    <td style="width: 50%;">
                        <div>Mode</div>
                    </td>
                    <td style="width: 50%; padding-right: 10px;">
                        <div>
                            <ejs-dropdownlist id="positionList" width="100%" dataSource="positionData" change="changeOverFlowMode" index="0"></ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 50%;">
                        <div>Header Placement</div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            <ejs-dropdownlist id="orientation" width="90%" dataSource="orientationData" change="changeHeaderPosition" index="0"></ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    </div>
}

@section ActionDescription{
    <p>
        This sample demonstrates both <code>scrollable</code> and <code>popup</code> modes of the <code>Tab</code>. Select option from down-down to change the responsive option in property panel.
    </p>
}

@section Description{
    <p>
        The <code>Tab</code> is adaptable to the available space when the tab items exceed the view space.
    </p>
    <p>
        The <code>Tab</code> allows to place the header section inside the Tab component either at <code>top / bottom / left / right</code> position by using <code>headerPlacement</code> property.
    </p>
    <p>
        You can assign overflowMode property value as <code>Scrollable / Popup</code>. By default scrollable mode of tab is enabled when tab item exceeds the view range. In this sample, users can change the <code>overflowMode</code> by selecting the dropdown options.
    </p>
    <p>
        More information about Tab can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tab/getting-started" aria-label="Navigate to the documentation for getting started with ASP.NET Core Tab control" > Documentation </a> section.
    </p>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Responsive Modes in ASP.NET Core Tab control. Explore here for more details."/>
                }

<style>
    #adaptiveTab .e-content .e-item {
        font-size: 12px;
        padding: 10px;
        text-align: justify;
    }

    .container {
        min-width: 350px;
        max-width: 500px;
    }

    .property-panel-content {
        padding: 10px;
    }

@*custom code start*@
    @@media only screen and (min-width: 1824px) {
        .e-sample-resize-container {
            width: 65%;
        }

        .e-bigger .e-sample-resize-container {
            width: 75%;
        }
    }
@*custom code end*@

    #adaptiveTab .e-tab-text {
        display: inherit;
    }

    @@media screen and (max-width: 481px) {
        .control-section.e-tab-section,
        .container-fluid {
            padding-left: 0;
            padding-right: 0;
        }
    }

    @@media screen and (max-width: 425px) {
        #adaptiveTab {
            overflow: hidden;
        }

        #adaptiveTab .e-item.e-active {
            overflow: scroll;
        }
    }
</style>
@section Title{
                    <title>ASP.NET Core Tab Responsive Modes Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Responsive Modes in ASP.NET Core Tab Control</h1>
                }