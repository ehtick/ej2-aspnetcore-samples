@page
@model EJ2CoreSampleBrowser.Pages.Diagram.FishboneModel
@using Syncfusion.EJ2.Diagrams;


@section ControlsSection{

    <div class="control-section">

            <div id="diagram-space" style="width:100%;height:100%;">
                <ejs-diagram id="diagram" width="100%" height="700px" nodes="@Model.nodes" connectors="@Model.connectors" created="fitToPage">
                    <e-diagram-snapsettings constraints="None"></e-diagram-snapsettings>
                </ejs-diagram>
            </div>
        </div>
    <script>
        function fitToPage() {
            setTimeout(function () {
                var diagram = document.getElementById("diagram").ej2_instances[0];
                diagram.tool = ej.diagrams.DiagramTools.ZoomPan;
                diagram.fitToPage({ mode: 'Height' });
            }, 800);
        }
        </script>
    }
    @section ActionDescription{
        <div id="action-description">
            <p>
                This sample visually represents a simple fishbone diagram (Ishikawa). Diagram nodes and annotations are used to define fishbone diagrams. Read-only mode is enabled here.
            </p>
        </div>
    }
    @section Meta{
                    <meta name="description" content="This example demonstrates the Fishbone Diagram in ASP.NET Core Diagram control. Explore here for more details."/>
                }
    @section Description{
        <div id="description">
            <p>
                This sample shows how to create a fishbone diagram (Ishikawa) using diagram control. Here, zoom and pan options are enabled. The tool property of the diagram control allows you to enable or disable zoom and pan options.
            </p>
            <br>
        </div>
    }
@section Title{
                    <title>ASP.NET Core Diagram Fishbone Diagram Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Fishbone Diagram in ASP.NET Core Diagram Control</h1>
                }