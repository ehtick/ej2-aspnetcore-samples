@page
@model EJ2CoreSampleBrowser.Pages.Diagram.CommandsModel
@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="col-lg-9 control-section" style="width:100% ;">
        <div class="toolbar_default">
            <ejs-toolbar id="toolbar" clicked="onItemClick">
                <e-toolbar-items>
                    <e-toolbar-item prefixIcon="e-cut e-icons" disabled="true" tooltipText="Cut"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-copy e-icons" disabled="true" tooltipText="Copy"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-paste" disabled="true" tooltipText="Paste"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-undo" disabled="true" tooltipText="Undo"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-redo" disabled="true" tooltipText="Redo"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-left-1" disabled="true" tooltipText="Align Left"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-center-1" disabled="true" tooltipText="Align Center"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-right-1" disabled="true" tooltipText="Align Right"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-top-1" disabled="true" tooltipText="Align Top"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-middle-1" disabled="true" tooltipText="Align Middle"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-align-bottom-1" disabled="true" tooltipText="Align Bottom"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-transform-right" disabled="true" tooltipText="Rotate Right"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-transform-left" disabled="true" tooltipText="Rotate Left"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-flip-vertical" disabled="true" tooltipText="Flip Vertical"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-flip-horizontal" disabled="true" tooltipText="Flip Horizontal"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-distribute-horizontal" disabled="true" tooltipText="Distribute Objects Horizontally"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-distribute-vertical" disabled="true" tooltipText="Distribute Objects Vertically"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-same-width" disabled="true" tooltipText="Same Width"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-same-height" disabled="true" tooltipText="Same Height"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="sf-icon-same-size" disabled="true" tooltipText="Same Size"></e-toolbar-item>
                </e-toolbar-items>
            </ejs-toolbar>

        </div>
        <div class="content-wrapper">
           <ejs-diagram id="diagram" width="100%" height="700px" nodes="@Model.nodes" selectionChange="selectionChange" historyChange="historyChange">
            </ejs-diagram>
        </div>
    </div>
  
    <style scoped>
        /* These are icon CSS in toolbar items */
      
        @@font-face {
            font-family: 'Bootstrap5 Diagram Builder';
            src:
                url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        [class^="sf-icon-"],
        [class*=" sf-icon-"] {
            font-family: 'Bootstrap5 Diagram Builder' !important;
            speak: none;
            font-size: 55px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .sf-icon-align-left-1:before {
            content: "\e8bc";
        }

        .sf-icon-align-middle-1:before {
            content: "\e8bd";
        }

        .sf-icon-align-right-1:before {
            content: "\e8be";
        }

        .sf-icon-align-top-1:before {
            content: "\e8bf";
        }

        .sf-icon-align-center-1:before {
            content: "\e8c0";
        }

        .sf-icon-align-bottom-1:before {
            content: "\e8c1";
        }

        .sf-icon-distribute-vertical:before {
            content: "\e8c2";
        }

        .sf-icon-distribute-horizontal:before {
            content: "\e8c3";
        }

        .sf-icon-elipse:before {
            content: "\e8c4";
        }

        .sf-icon-line-1:before {
            content: "\e8c5";
        }

        .sf-icon-orthogonal:before {
            content: "\e8c6";
        }

        .sf-icon-bezier:before {
            content: "\e8c7";
        }

        .sf-icon-same-width:before {
            content: "\e8c8";
        }

        .sf-icon-same-height:before {
            content: "\e8c9";
        }

        .sf-icon-same-size:before {
            content: "\e8ca";
        }

    </style>
    <script>

 function selectionChange(args){
          if (args.state === 'Changed') {
            if (args.type === 'Addition') {
                if (args.newValue.length > 0) {
                    onClickDisable(false, args.newValue);
                }
            } else {
                onClickDisable(true, args.newValue);
            }
        }
      }
  function onClickDisable(args, selectedItems){
    let diagram = document.getElementById("diagram").ej2_instances[0];
     let toolbar = document.getElementById("toolbar").ej2_instances[0];
    if (args === false) {
    toolbar.items[0].disabled = false;
    toolbar.items[1].disabled = false;
    toolbar.items[13].disabled = false;
    toolbar.items[14].disabled = false;
    if (selectedItems.length === 1) {
      toolbar.items[16].disabled = selectedItems[0].id === "RightTriangle" ? false : true;
      toolbar.items[17].disabled = selectedItems[0].id === "RightTriangle" ? false : true;
        disableCommonItems(true, toolbar);
    } 
    else if (selectedItems.length > 1) {
        disableCommonItems(false, toolbar);
    }
} 
    else {
        toolbar.items[0].disabled = true;
        toolbar.items[1].disabled = true;
        toolbar.items[13].disabled = true;
        toolbar.items[14].disabled = true;
        toolbar.items[16].disabled = true;
        toolbar.items[17].disabled = true;
        disableCommonItems(true, toolbar);
    }
}
function disableCommonItems(args, toolbar){
  toolbar.items[6].disabled = args;
  toolbar.items[7].disabled = args;
  toolbar.items[8].disabled = args;
  toolbar.items[9].disabled = args;
  toolbar.items[10].disabled = args;
  toolbar.items[11].disabled = args;
  toolbar.items[19].disabled = args;
  toolbar.items[20].disabled = args;
  toolbar.items[22].disabled = args;
  toolbar.items[23].disabled = args;
  toolbar.items[24].disabled = args;
}
    function historyChange() {
         let diagram = document.getElementById("diagram").ej2_instances[0];  
         let toolbarObj = document.getElementById("toolbar").ej2_instances[0];
        // Check if undo stack is empty or not
        if (diagram.historyManager.undoStack.length > 0) {
            toolbarObj.items[3].disabled = false;
        } else {
            toolbarObj.items[3].disabled = true;
        }
        // Check if redo stack is empty or not
        if (diagram.historyManager.redoStack.length > 0) {
            toolbarObj.items[4].disabled = false;
        } else {
            toolbarObj.items[4].disabled = true;
        }
    }
   
    function onItemClick(args) {
        var item = args.item.tooltipText;
        let diagram = document.getElementById("diagram").ej2_instances[0];  
        let toolbarObj = document.getElementById("toolbar").ej2_instances[0];
        switch (args.item.tooltipText) {
            case 'Cut':
                diagram.cut();
                toolbarObj.items[2].disabled = false;
                break;
            case 'Copy':
                diagram.copy();
                toolbarObj.items[2].disabled = false;
                break;
            case 'Paste':
                diagram.paste();
                break;
            case 'Undo':
                diagram.undo();
                break;
            case 'Redo':
                diagram.redo();
                break;
            case 'Align Left':
            case 'Align Right':
            case 'Align Top':
            case 'Align Bottom':
            case 'Align Middle':
            case 'Align Center':
                var alignType = item.replace('Align', '');
                var alignType1 = alignType.charAt(0).toUpperCase() + alignType.slice(1);
                diagram.align(alignType1.trim());
                break;
            case 'Rotate Right':
                diagram.rotate(diagram.selectedItems, 90);
                break;
            case 'Rotate Left':
                diagram.rotate(diagram.selectedItems, -90);
                break;
            case 'Flip Vertical':
                flipObjects(item);
                break;
            case 'Flip Horizontal':
                flipObjects(item);
                break;
            case 'Distribute Objects Horizontally':
                diagram.distribute('RightToLeft');
                break;
            case 'Distribute Objects Vertically':
                diagram.distribute('BottomToTop');
                break;
            case 'Same Width':
                diagram.sameSize('Width', diagram.selectedItems.nodes);
                break;
            case 'Same Height':
                diagram.sameSize('Height', diagram.selectedItems.nodes);
                break;
            case 'Same Size':
                diagram.sameSize('Size', diagram.selectedItems.nodes);
                break;
        }
    }

    function flipObjects(flipType) {
        let diagram = document.getElementById("diagram").ej2_instances[0]; 
        var selectedObjects = diagram.selectedItems.nodes.concat(diagram.selectedItems.connectors);
        for (i = 0; i < selectedObjects.length; i++) {
            selectedObjects[i].flip ^= flipType === 'Flip Horizontal' ? ej.diagrams.FlipDirection.Horizontal : ej.diagrams.FlipDirection.Vertical;
        }
        diagram.dataBind();
    }

    </script>
}
@section ActionDescription{
    <p>
        This example illustrates the various commands supported in the diagram control.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Commands in ASP.NET Core Diagram control. Explore here for more details."/>
                }
@section Description{
     <p>
        The align commands enable you to align selected objects such as nodes and connectors with respect to the selection boundary. The alignment options are left, right, center, middle, top, and bottom. Use the <code>align</code> method with the four mentioned parameters to align objects.</p>
    <p>The sizing command changes the size of selected nodes with respect to the first selected object. The sizing options are same size (same height and width), same width, and same height. Use the <code>sameSize</code> method and pass <code>SizingOptions</code> such as height, width, and size as a parameter in it.</p>

    <p>The distribute command is used to equally space the nodes vertically or horizontally within the selected boundary. Use the <code>distribute</code> method with the <code>DistributeOptions</code> as the parameter.</p>

    <p>The <code>sendBackward</code> and <code>sendToBack</code> method allows you to send a selected object to the back of the z-order (the order in which objects are stacked on top of one another).</p>

   <p> The clipboard commands are used to cut, copy, or paste selected elements. The <code>cut</code> command removes the selected diagram elements and copies them to the clipboard; <code>copy</code> duplicates the selected diagram elements and copies them to the clipboard; and <code>paste</code> adds diagram elements from the clipboard to the diagram. The flip command is used to give a horizontal or vertical mirror image of the selected node. Use <code>flip</code> and <code>flipMode</code> properties to flip a node along with the port and label.</p>
}
@section Title{
                    <title>ASP.NET Core Commands Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Commands in ASP.NET Core Diagram Control</h1>
                }
