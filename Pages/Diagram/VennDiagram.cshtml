@page
@model EJ2CoreSampleBrowser.Pages.Diagram.VennDiagramModel
@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
            <ejs-diagram id="container" width="100%" height="700px"  nodes="@Model.Nodes" created="diagramCreated">                
            <e-diagram-snapsettings constraints="None"></e-diagram-snapsettings>
            </ejs-diagram>
        </div>
    </div>
    <style>
        #container {
            display: block;
        }
    </style>
    <script>
        function diagramCreated(args) {
            var diagram = document.getElementById("container").ej2_instances[0];
            diagram.fitToPage();
            diagram.tool = ej.diagrams.DiagramTools.ZoomPan;
            diagram.dataBind();
        }
    </script>
}
@section ActionDescription{
    <p>
        This sample visualizes classifications of data science using Venn diagrams. Diagram nodes and annotations are used to define Venn diagrams. Read only mode is enabled in this example.
    </p>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Venn Diagram in ASP.NET Core Diagram control. Explore here for more details."/>
                }
@section Description{
    <p>
        This example shows how to create a Venn diagram using diagram control. In this example, zoom and pan options are enabled. The <code>tool</code> property of the diagram control allows you to enable/disable zoom and pan options.
    </p>
}
@section Title{
                    <title>ASP.NET Core Diagram Venn Diagram Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Venn Diagram in ASP.NET Core Diagram Control</h1>
                }