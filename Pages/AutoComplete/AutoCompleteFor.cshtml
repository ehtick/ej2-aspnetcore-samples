@page
@*@model directive allows you to access the model values*@
@model EJ2CoreSampleBrowser.Pages.AutoComplete.AutoCompleteFor

@section ControlsSection{
<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <div style='padding-top:70px;'>
            <form method="post">
                    <ejs-autocomplete id="autocompletefor" dataSource="@Model.model.data" placeholder="e.g. Basketball" ejs-for="model.val"></ejs-autocomplete>
                <div id="errorMessage">
                        <span asp-validation-for="model.val"></span>
                </div>
                <div id="submitbutton">
                    <ejs-button id="submitButton" content="Submit"></ejs-button>
                </div>
            </form>
        </div>
    </div>
</div>
}
<style>

    .control-wrapper {
        margin: 0 auto;
        width: 250px;
    }

    #submitbutton {
        margin: 10px auto;
        text-align: center;
    }

    #errorMessage {
        color: red;
        text-align: center
    }
</style>

@section ActionDescription{
<div id="action-description">
    <p>
        This sample demonstrates the strongly-typed extension support in <code>AutoComplete</code>. The value of Autocomplete is set from code behind and it is set to autocomplete in view page by invoking the strongly-typed AutoCompleteFor helper.
    </p>
</div>
}
@section Description{
<div id="description">
    <p>
        Click the submit button to post the selected value in the AutoComplete. When posting the null value, validation error message will be shown below the AutoComplete.
    </p>
</div>
}
@section Title{
                    <title>ASP.NET Core AutoComplete AutoCompleteFor Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the AutoCompleteFor in ASP.NET Core AutoComplete control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of AutoCompleteFor in ASP.NET Core AutoComplete Control</h1>
                }