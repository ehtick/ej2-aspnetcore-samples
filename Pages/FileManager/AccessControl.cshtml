@page

@using Syncfusion.EJ2

@{
    string[] items = new string[] { "NewFolder", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details"};
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
    string[] file = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
}

@section ControlsSection{
    <div class=" control-section">
        <div class="sample-container">
             <!-- File Manager full functionalities sample -->
            <ejs-filemanager id="filemanager" view="@Syncfusion.EJ2.FileManager.ViewType.Details">
                <e-filemanager-ajaxsettings url="https://ej2-aspcore-service.azurewebsites.net/api/FileManagerAccess/FileOperations"
                                            downloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManagerAccess/Download"
                                            uploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManagerAccess/Upload"
                                            getImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManagerAccess/GetImage">
                </e-filemanager-ajaxsettings>
                <e-filemanager-toolbarsettings items="items">
                </e-filemanager-toolbarsettings>
                <e-filemanager-contextmenusettings file="file" layout="layout">
                </e-filemanager-contextmenusettings>
            </ejs-filemanager>
        </div>
    </div>

}

@section ActionDescription{
    <div id="action-description">
        <p>
            The File Manager that gives you complete control over who can access your folders and files. With this essential feature, you can define access permissions and create a secure and organized digital environment.
            This File Manager sample demonstrates that the enabled access permission will permit only read action and will not allow the user to perform any write action on the <code>documents</code>, <code>music</code> folders, and the <code>bird image</code> file inside the <code>pictures/nature</code> folder.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The access control feature allows you to define access permissions for folders and files using a set of access rule properties based on userï¿½s role.
            Refer to the <a target='_blank' href='https://ej2.syncfusion.com/aspnetcore/documentation/file-manager/access-control#access-rules' aria-label="Navigate to the documentation for Access Rules in Access Control of ASP.NET Core File Manager control">Access Rules</a> and <a target='_blank' href='https://ej2.syncfusion.com/aspnetcore/documentation/file-manager/access-control#permissions' aria-label="Navigate to the documentation for Permissions in Access Control of ASP.NET Core File Manager control">Permissions</a> UG for more details on this.
        </p>
        <p>
            <b>Note: </b>File Manager's upload functionality is restricted in the online demos for security reasons. If you need to test upload functionality, please install
            <a target="_blank" href="https://www.syncfusion.com/downloads" aria-label="Download Syncfusion Essential Studio">Syncfusion Essential Studio<sup>&reg;</sup> </a>on your machine and run the demo.
        </p>

    </div>
}

@section Meta{
    <meta name="description" content=" This example of FileManager demonstrates how to restrict the file operations in the File Manager component." />
                }
@section Title{
                    <title>ASP.NET Core File Manager Access Control Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Access Control in ASP.NET Core File Manager Control</h1>
                }