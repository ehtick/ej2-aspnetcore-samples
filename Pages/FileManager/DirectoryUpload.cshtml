@page
@model EJ2CoreSampleBrowser.Pages.FileManager.DirectoryUpload

@using Syncfusion.EJ2

@{
    string dropButton = "#drop-Button";
    string[] file = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
}

@section ControlsSection{
    <div class=" control-section">
        <div class="sample-container">
            <!-- File Manager Directory upload feature sample -->
            <ejs-filemanager id="filemanager" success="onSuccess">
                <e-filemanager-ajaxsettings url="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
                                            downloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
                                            uploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
                                            getImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
                </e-filemanager-ajaxsettings>
                <e-filemanager-contextmenusettings file="file">
                </e-filemanager-contextmenusettings>
                <e-filemanager-toolbaritems>
                    <e-filemanager-toolbaritem Name="NewFolder"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Template="@dropButton" Name="Upload"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="SortBy"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Refresh"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Cut"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Copy"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Paste"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Delete"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Download"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Rename"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Selection"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="View"></e-filemanager-toolbaritem>
                    <e-filemanager-toolbaritem Name="Details"></e-filemanager-toolbaritem>
                </e-filemanager-toolbaritems>
            </ejs-filemanager>
        </div>
    </div>

<ejs-dropdownbutton id="drop-Button" items="@Model.items" iconCss="e-icons e-fe-upload" content="Upload" select="onSelect" CssClass="e-tbar-btn e-tbtn-txt"></ejs-dropdownbutton>
}

@section PreScripts{
    <script>
        function onSuccess(args) {
            if (document.getElementById("drop-Button").classList.contains("e-dropdown-btn")) {
				document.getElementById('drop-Button').onclick = function (args) {
					args.stopPropagation();
				};
            }
        }
        function onSelect(args) {
            var fileObject = document.getElementById("filemanager").ej2_instances[0];
            if (args.item.text === 'Folder') {
                fileObject.uploadSettings.directoryUpload = true;
            } else {
                fileObject.uploadSettings.directoryUpload = false;
            }
            setTimeout(function () {
                let uploadBtn = document.querySelector('.e-file-select-wrap button');
                uploadBtn.click();
            }, 100);
        }
    </script>
}
<style>
    #drop-Button {
        font-size: 14px;
    }
</style>
@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the folder (directory) upload feature. Select <code>Folder</code> from the <code>Upload</code> toolbar item to select and upload a folder in the File Manager component.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>In this demo, a folder upload is enabled by setting <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.FileManager.FileManagerUploadSettings.html#Syncfusion_EJ2_FileManager_FileManagerUploadSettings_DirectoryUpload" aria-label="Navigate to the DirectoryUpload property reference for ASP.NET Core File Manager control"> directoryUpload </a> to <code>true</code>. It allows users to select or drag and drop a folder to upload its contents including hierarchy folders and files in the File Manager component.</p>
        <p>
            The folder (directory) upload is supported for the following file system providers,
            <ul>
                <li> Physical provider</li>
                <li> NodeJS provider</li>
                <li> Azure provider</li>
                <li> Amazon S3 provider</li>
            </ul>
        </p>
        <p>To efficiently upload large files and folders to the server in manageable chunks, use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.FileManager.FileManagerUploadSettings.html#Syncfusion_EJ2_FileManager_FileManagerUploadSettings_ChunkSize">chunkSize</a> property to specify the desired chunk size.</p>
        <p>
            <b>Note: </b>File Manager's upload functionality is restricted in the online demos for security reasons. If you need to test upload functionality, please install
            <a target="_blank" href="https://www.syncfusion.com/downloads" aria-label="Download Syncfusion Essential Studio">Syncfusion Essential Studio<sup>&reg;</sup> </a>on your machine and run the demo.
        </p>

    </div>
}

@section Meta{
    <meta name="description" content="This example demonstrates how to upload the folder (directory) by using custom toolbar item with in a ASP.NET Core File Manager control." />
}
@section Title{
    <title>ASP.NET Core File Manager Directory Upload Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Directory Upload in ASP.NET Core File Manager Control</h1>
}