@page

@using Syncfusion.EJ2

@{
    string[] items = new string[] { "NewFolder", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
    string[] file = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
}

@section ControlsSection{
    <div class=" control-section">
        <div class="sample-container">
            <!-- File Manager sample with SQLServer service -->
            <ejs-filemanager id="filemanager">
                <e-filemanager-ajaxsettings url="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Fileoperations"
                                            downloadUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Download"
                                            uploadUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/Upload"
                                            getImageUrl="https://ng2jq.syncfusion.com/ej2-sql-service/api/FileManager/GetImage">
                </e-filemanager-ajaxsettings>
                <e-filemanager-toolbarsettings items="items">
                </e-filemanager-toolbarsettings>
                <e-filemanager-contextmenusettings file="file" layout="layout">
                </e-filemanager-contextmenusettings>
            </ejs-filemanager>
        </div>
    </div>

}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates how to utilize the <a target="_blank" href="https://github.com/SyncfusionExamples/sql-server-database-aspcore-file-provider" aria-label="Syncfusion github sample for SQL server file system provider">SQL server file system provider</a> to manage the files in the File Manager component. To run the service, configure the SQL server database connection using the <code>SetSQLConnection</code> method to set the <i><b>connection name</b></i>, <i><b>table name</b></i>, and <i><b>rootId</b></i> of the SQL table.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>The File Manager component is used to explore a file system through a web application, similar to the Windows Explorer for Windows. It supports all the basic file operations such as create, rename, delete, and more.</p>
        <p>
            <b>Note: </b>File Manager's upload functionality is restricted in online demos for security reasons. To work with upload functionality, please download <a target="_blank" href="https://github.com/SyncfusionExamples/sql-server-database-aspcore-file-provider" aria-label="Syncfusion github sample for sql-server-database-aspcore-file-provider">sql-server-database-aspcore-file-provider</a> from the GitHub repository.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the SQL Database Provider in ASP.NET Core File Manager control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core File Manager SQL Database Provider Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of SQL Database Provider in ASP.NET Core File Manager Control</h1>
                }