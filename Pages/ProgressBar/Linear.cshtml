@page
@using Syncfusion.EJ2
@section ControlsSection {
    <div class="control-section">
        <div class="row linear-parent">
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label-linear">Determinate</div>
                <div id="lineardeterminate">
                    <ejs-progressbar id="lineardeterminate"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=100
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label-linear">Indeterminate</div>
                <div id="linearindeterminate">
                    <ejs-progressbar id="linearindeterminate"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=20 isIndeterminate="true"
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label-linear">Segment</div>
                <div id="linearsegment">
                    <ejs-progressbar id="linearsegment"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=100 segmentCount="8" gapWidth="10"
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label-linear">Buffer</div>
                <div id="linearbuffer">
                    <ejs-progressbar id="linearbuffer"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=40 secondaryProgress="60" secondaryProgressColor=" "
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label-linear">Active</div>
                <div id="linearactive">
                    <ejs-progressbar id="linearactive"
                                     type='Linear' 
                                     height='60'
                                     minimum="0" 
                                     maximum="100"
                                     value=100
                                     load="progressLoad"
                                     isActive="true"
                                     >
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
        </div>
        <div class="row linear-parent">
            <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary">Reload</button>
        </div>
    </div>
    <script src="~/scripts/Progressbar/theme-color.js"></script>
    <script>
        var div = document.getElementsByClassName('progressbar-label-linear');
        var progressLoad = function (args) {
            var selectedTheme = loadProgressBarTheme(args);
            if (args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark'
                || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'Tailwind3Dark' || args.progressBar.theme === 'MaterialDark' || args.progressBar.theme === 'FluentDark' || args.progressBar.theme === 'Material3Dark' || args.progressBar.theme === 'Fluent2HighContrast' || args.progressBar.theme === 'Fluent2Dark') {
                for (let i = 0; i < div.length; i++) {
                    div[i].setAttribute('style', 'color:white');
                }
            }
            if (selectedTheme === 'fabric') {
                args.progressBar.secondaryProgressColor = '#b0d0e9'
            } else if (selectedTheme === 'material-dark') {
                args.progressBar.secondaryProgressColor = '#b8b8b8'
            } else if (selectedTheme === 'material') {
                args.progressBar.secondaryProgressColor = '#f087ab'
            } else if (selectedTheme === 'bootstrap5-dark') {
                args.progressBar.secondaryProgressColor = '#2b5288'
            } else if (selectedTheme === 'bootstrap5') {
                args.progressBar.secondaryProgressColor = '#98c5f5'
            } else if (selectedTheme === 'bootstrap') {
                args.progressBar.secondaryProgressColor = '#acc6dc'
            } else if (selectedTheme === 'bootstrap4') {
                args.progressBar.secondaryProgressColor = '#98c5f5'
            } else if (selectedTheme === 'bootstrap-dark') {
                args.progressBar.secondaryProgressColor = '#b8b8b8'
            } else if (selectedTheme === 'highcontrast') {
                args.progressBar.secondaryProgressColor = '#aca379'
            } else if (selectedTheme === 'fluent-dark') {
                args.progressBar.secondaryProgressColor = '#2b5288'
            } else if (selectedTheme === 'fluent') {
                args.progressBar.secondaryProgressColor = '#98c5f5'
            } else if (selectedTheme === 'tailwind-dark') {
                args.progressBar.secondaryProgressColor = '#22D3EE'
            } else if (selectedTheme === 'tailwind') {
                args.progressBar.secondaryProgressColor = '#4F46E5'
            } else if (selectedTheme === 'fluent2') {
                args.progressBar.secondaryProgressColor = '#0F6CBD';
            } else if (selectedTheme === 'fluent2-highcontrast') {
                args.progressBar.secondaryProgressColor = '#1AEBFF';
            } else if (selectedTheme === 'fluent2-dark') {
                args.progressBar.secondaryProgressColor = '#115EA3';
            } else if (selectedTheme === 'tailwind3-dark') {
                args.progressBar.secondaryProgressColor = '#6366F1'
            } else if (selectedTheme === 'tailwind3') {
                args.progressBar.secondaryProgressColor = '#4F46E5'
            }
        };
        var replayBtn = document.getElementById('reLoad');
        replayBtn.onclick = function () {
            var determinateProgress = document.getElementById('lineardeterminate').ej2_instances[0];
            var indeterminateProgress = document.getElementById('linearindeterminate').ej2_instances[0];
            var segmentProgress = document.getElementById('linearsegment').ej2_instances[0];
            var bufferProgress = document.getElementById('linearbuffer').ej2_instances[0];
            var activeProgress = document.getElementById('linearactive').ej2_instances[0];
            determinateProgress.refresh();
            indeterminateProgress.refresh();
            segmentProgress.refresh();
            bufferProgress.refresh();
            activeProgress.refresh();
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates a linear progress bar with determinate and indeterminate states, segments and buffer values.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a linear progress bar. A progress bar is used to visualize the progression of an extended operation. The sample shows the determinate and indeterminate states, buffer values and segments of a linear progress bar.
    </p>

}
@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }

    .linear-parent {
        text-align: center;
        width: 80%;
        margin: auto;
    }

    .progressbar-label-linear {
        text-align: left;
        font-family: Roboto-Regular;
        font-size: 14px;
        color: #3D3E3C;
        margin-left: 10px;
        padding: 0px;
        top: 10px;
    }

    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
    }
</style>
@*custom code end*@
@section Title{
                    <title>ASP.NET Core Progress Bar Linear Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Linear in ASP.NET Core Progress Bar control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Linear in ASP.NET Core Progress Bar Control</h1>
                }