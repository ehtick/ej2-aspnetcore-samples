@page
@using Syncfusion.EJ2
@section ControlsSection {
    <div class="control-section">
        <div class="row linear-parent">
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-mode"></div>
                <div id="linearSegment">
                    <ejs-progressbar id="linearSegment"
                                     type='Linear'
                                     height='30'
                                     width='70%'
                                     minimum="0"
                                     maximum="100"
                                     value=40
                                     gapWidth=5
                                     trackThickness="15"
                                     progressThickness="15"
                                     cornerRadius='Square'
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-mode"></div>
                <div id="circularSegment">
                    <ejs-progressbar id="circularSegment"
                                     type='Circular'
                                     height='200px'
                                     width='200px'
                                     minimum="0"
                                     maximum="100"
                                     trackThickness=15
                                     progressThickness=15
                                     value=40
                                     segmentCount=50
                                     gapWidth=5
                                     startAngle="220"
                                     endAngle="140"
                                     cornerRadius='Square'
                                     load="progressLoad2">
                        <e-progressbar-progressbarannotations>
                            <e-progressbar-progressbarannotation content='<div id="point1" style="font-size:24px;font-weight:bold;color:#0078D6"><span></span></div>'>
                            </e-progressbar-progressbarannotation>
                        </e-progressbar-progressbarannotations>
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
        </div>
    </div>
    @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }

        .linear-parent {
            text-align: center;
            width: 75%;
            margin: auto;
        }

        .linear-button {
            text-align: center;
            padding: 2%;
        }

        .progressbar-mode {
            text-align: left;
            font-family: Roboto-Regular;
            font-size: 14px;
            color: #3D3E3C;
            margin-left: 10px;
            margin-top: 5%;
            padding: 0px;
            top: 20px;
        }

        #reLoad {
            border-radius: 4px;
            text-transform: capitalize;
        }
    </style>
    @*custom code end*@
    <script src="~/scripts/Progressbar/theme-color.js"></script>
    <script>
        var progressLoad = function (args) {
            var selectedTheme = loadProgressBarTheme(args);
            if (selectedTheme === 'highcontrast') {
                   args.progressBar.trackColor = '#969696';
            }
            if (args.progressBar.type === "Linear"){
                   args.progressBar.segmentCount = ej.base.Browser.isDevice ? 25 : 50;
            }
        };
        var progressLoad2 = function (args) {
            var selectedTheme = loadProgressBarTheme(args);
            switch (selectedTheme) {
                case 'material':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#e91e63"><span></span></div>';
                    break;
                case 'fabric':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#0078D6"><span></span></div>';
                    break;
                case 'bootstrap':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#317ab9"><span></span></div>';
                    break;
                case 'bootstrap4':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#007bff"><span></span></div>';
                    break;
                case 'tailwind':
                case 'tailwind3':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#4F46E5"><span></span></div>';
                    break;
                case 'bootstrap-dark':
                case 'fabric-dark':
                case 'material-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#9A9A9A"><span></span></div>';
                    break;
                case 'tailwind-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#22D3EE"><span></span></div>';
                    break;
                case 'tailwind3-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#6366F1"><span></span></div>';
                    break;
                case 'bootstrap5':
                case 'bootstrap5-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#0D6EFD"><span></span></div>';
                    break;
                case 'fluent':
                case 'fluent-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#0D6EFD"><span></span></div>';
                    break;
                case 'material3':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#6750A4"><span></span></div>';
                    break;
                case 'material3-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#D0BCFF"><span></span></div>';
                    break;
                case 'fluent2':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#0F6CBD"><span></span></div>';
                    break;
                case 'fluent2-dark':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#115EA3"><span></span></div>';
                    break;
                case 'fluent2-highcontrast':
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#1AEBFF"><span></span></div>';
                    break;
                default:
                    args.progressBar.annotations[0].content = '<div id="point1" style="font-size:24px;font-weight:bold;color:#FFD939"><span></span></div>';
                    break;

            }
        };
        var timer = setInterval(timing, 2500);
        function timing() {
            var circularProgress = document.getElementById('circularSegment').ej2_instances[0];
            var linearProgress = document.getElementById('linearSegment').ej2_instances[0];
            if (circularProgress.value >= circularProgress.maximum) {
                clearInterval(timer)
            } else {
                circularProgress.value += 20;
                linearProgress.value += 20;
            }
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates a segmented progress of a task
    </p>
}
@section Description{
    <p>
        This demo for Essential JS2 Progress Bar control shows the segmented progress of a task using <code>segmentCount</code> and <code>gapWidth</code> property.
    </p>

}
@section Title{
                    <title>ASP.NET Core Progress Bar Progress Segment Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Progress Segment in ASP.NET Core Progress Bar control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Progress Segment in ASP.NET Core Progress Bar Control</h1>
                }