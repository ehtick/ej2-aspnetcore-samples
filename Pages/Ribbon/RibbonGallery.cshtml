@page
@model EJ2CoreSampleBrowser.Pages.Ribbon.RibbonGalleryModel
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2.Ribbon

@section ControlsSection{
    <div class="col-lg-12 control-section gallery-ribbon-section">
        <div id="ribbonContainer">
            <div id="ribbon">
                <ejs-ribbon id="gallery" launcherIconClick="function(args){launcherIconClick(args)}" cssClass="ribbonGallery">
                    <e-ribbon-filemenusettings text="File" visible="true" menuItems=@Model.fileOptions select="function(args){selectMenuItem(args)}"></e-ribbon-filemenusettings>
                    <e-ribbon-tabs>
                        <e-ribbon-tab header="Home">
                            <e-ribbon-groups>
                                <e-ribbon-group header="Clipboard" id="clipboard" groupIconCss="e-icons e-paste" showLauncherIcon=true>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="SplitButton" disabled=true id="pastebtn" allowedSizes=Large>
                                                    <e-ribbon-splitButtonSettings iconCss="e-icons e-paste" content="Paste" items=@Model.pasteOptions select="function(args){updateContent('Paste -> ' + args.item.text)}" click="function(){updateContent('Paste')}"></e-ribbon-splitButtonSettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="Button">
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-cut" content="Cut" clicked="function(){updateContent('Cut');enablePaste();}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type="Button">
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-copy" content="Copy" clicked="function(){updateContent('Copy');enablePaste();}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type="Button">
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-format-painter" content="Format Painter" clicked="function(){updateContent('Format Painter')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Gallery" groupIconCss="e-icons e-paste" showLauncherIcon=true>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="Gallery">
                                                    <e-ribbon-gallerysettings itemCount=3 select="function(args){updateContent('Gallery -> ' + args.currentItem.content)}" popupWidth="544px">
                                                        <e-ribbon-gallery-groups>
                                                            <e-ribbon-gallery-group itemWidth ="100" itemHeight="40" header="Title and Headings">
                                                                <e-ribbon-gallery-items>
                                                                    <e-ribbon-gallery-item content="Heading 1" cssClass="heading_1"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Heading 2" cssClass="heading_2"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Heading 3" cssClass="heading_3"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Heading 4" cssClass="heading_4"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Title" cssClass="title"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Total" cssClass="total"></e-ribbon-gallery-item>
                                                                </e-ribbon-gallery-items>
                                                            </e-ribbon-gallery-group>
                                                            <e-ribbon-gallery-group itemWidth="100" itemHeight="40" header="Data and Model">
                                                                <e-ribbon-gallery-items>
                                                                    <e-ribbon-gallery-item content="Calculation" cssClass="calculation"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Check Cell" cssClass="check-cell"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Hyperlink" cssClass="hyperlink"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Input" cssClass="input"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Linked Cell" cssClass="linked-cell"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Note" cssClass="note"></e-ribbon-gallery-item>
                                                                </e-ribbon-gallery-items>
                                                            </e-ribbon-gallery-group>
                                                            <e-ribbon-gallery-group itemWidth="100" itemHeight="40" header="Good, Bad and Neutral">
                                                                <e-ribbon-gallery-items>
                                                                    <e-ribbon-gallery-item content="Normal" cssClass="normal"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Bad" cssClass="bad"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Good" cssClass="good"></e-ribbon-gallery-item>
                                                                    <e-ribbon-gallery-item content="Neutral" cssClass="neutral"></e-ribbon-gallery-item>
                                                                </e-ribbon-gallery-items>
                                                            </e-ribbon-gallery-group>
                                                        </e-ribbon-gallery-groups>
                                                    </e-ribbon-gallerysettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Voice" isCollapsible=false groupIconCss="sf-icon-dictate">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="SplitButton" allowedSizes=Large>
                                                    <e-ribbon-splitButtonSettings iconCss="sf-icon-dictate" content="Dictate" items=@Model.dictateOptions select="function(args){updateContent('Dictate -> ' + args.item.text)}" click="function(){updateContent('Dictate')}"></e-ribbon-splitButtonSettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Editor" isCollapsible=false groupIconCss="sf-icon-editor">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="Button" allowedSizes=Large>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-editor" content="Editor" clicked="function(){updateContent('Editor')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Reuse Files" isCollapsible=false groupIconCss="sf-icon-reuse">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="Button" allowedSizes=Large>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-reuse" content="Reuse Files"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                            </e-ribbon-groups>
                        </e-ribbon-tab>
                        <e-ribbon-tab header="Insert">
                            <e-ribbon-groups>
                                <e-ribbon-group header="Tables" isCollapsible="false">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type="DropDown" allowedSizes=Large>
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-table" content="Table" items="@Model.tableOptions" select="function(args){updateContent('Table -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Illustrations" id="illustration" showLauncherIcon=true orientation=Row enableGroupOverflow=true overflowHeader="Illustrations" groupIconCss="e-icons e-image">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item id="pictureddl" type="DropDown">
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-image" content="Pictures" target="#listView"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type="DropDown">
                                                    <e-ribbon-dropdownsettings iconCss="sf-icon-shapes" content="Shapes" items="@Model.shapeOptions" select="function(args){updateContent('Shapes -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings content="3D Models" iconCss="sf-icon-3d-model" clicked="function(){updateContent('3D Models')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-smart-art" content="SmartArt" clicked="function(){updateContent('SmartArt')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-chart" content="Chart" clicked="function(){updateContent('Chart')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-screenshot" content="Screenshot" clicked="function(){updateContent('Screenshot')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Header & Footer" id="header_footer" groupIconCss="e-icons e-table" showLauncherIcon=true orientation=Column>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type=DropDown>
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-header" content="Header" items="@Model.headerOptions" select="function(args){updateContent('Header -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=DropDown>
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-footer" content="Footer" items="@Model.footerOptions" select="function(args){updateContent('Footer -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=DropDown>
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-page-numbering" content="Page Number" items="@Model.pageOptions" select="function(args){updateContent('Page Numbering -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Comments" isCollapsible=false>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item allowedSizes=Large type=Button>
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-comment-add" content="New Comment" clicked="function(){updateContent('New Comment')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Links" groupIconCss="e-icons e-link" isCollapsible="false">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item allowedSizes=Large type=DropDown>
                                                    <e-ribbon-dropdownsettings iconCss="e-icons e-link" content="Link" items="@Model.linkOptions" select="function(args){updateContent('Link -> ' + args.item.text)}"></e-ribbon-dropdownsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                            </e-ribbon-groups>
                        </e-ribbon-tab>
                        <e-ribbon-tab header="View">
                            <e-ribbon-groups>
                                <e-ribbon-group header="Views" orientation=Row groupIconCss="e-icons e-print">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-read" content="Read Mode" clicked="function(){updateContent('Read Mode')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="e-print e-icons" content="Print Layout" clicked="function(){updateContent('Print Layout')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-web-layout" content="Web Layout" clicked="function(){updateContent('Web Layout')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Zoom" orientation=Row groupIconCss="e-icons e-zoom-to-fit">
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-zoom-in" content="Zoom In" clicked="function(){updateContent('Zoom In')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=Button>
                                                    <e-ribbon-buttonsettings iconCss="e-icons e-zoom-out" content="Zoom Out" clicked="function(){updateContent('Zoom Out')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Show" isCollapsible=false>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item type=CheckBox>
                                                    <e-ribbon-checkboxsettings checked=false label="Ruler" change="function(){updateContent('Ruler')}"></e-ribbon-checkboxsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=CheckBox>
                                                    <e-ribbon-checkboxsettings checked=false label="Gridlines" change="function(){updateContent('Gridlines')}"></e-ribbon-checkboxsettings>
                                                </e-ribbon-item>
                                                <e-ribbon-item type=CheckBox>
                                                    <e-ribbon-checkboxsettings checked=true label="Navigation Pane" change="function(){updateContent('Navigation Pane')}"></e-ribbon-checkboxsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                                <e-ribbon-group header="Dark Mode" isCollapsible=false>
                                    <e-ribbon-collections>
                                        <e-ribbon-collection>
                                            <e-ribbon-items>
                                                <e-ribbon-item allowedSizes=Large type=Button>
                                                    <e-ribbon-buttonsettings iconCss="sf-icon-mode" content="Dark Mode" clicked="function(){updateContent('Dark Mode')}"></e-ribbon-buttonsettings>
                                                </e-ribbon-item>
                                            </e-ribbon-items>
                                        </e-ribbon-collection>
                                    </e-ribbon-collections>
                                </e-ribbon-group>
                            </e-ribbon-groups>
                        </e-ribbon-tab>
                    </e-ribbon-tabs>
                </ejs-ribbon>
            </div>
            <div id="ribbonPlaceHolder">
                <div class="content1"></div>
                <div class="content2"></div>
                <div class="content3"></div>
                <div class="content4"></div>
            </div>
            <div id="pictureList">
                <ejs-listview id="listView" showHeader=true headerTitle="Insert Picture From" dataSource=@Model.pictureOptions select="function(args){updateContent('Pictures -> ' + args.text)}"></ejs-listview>
            </div>
        </div>
    </div>
}

<script>

    var isPasteDisabled = true;
    function enablePaste() {
        if (!isPasteDisabled) { return; }
        var ribbon = document.getElementById('gallery').ej2_instances[0];
        ribbon.enableItem('pastebtn')
        isPasteDisabled = false;
    }

    function launcherIconClick(args) {
        if (args.groupId == "clipboard") {
            updateContent("Clipboard LauncherIcon");
        }
        else if (args.groupId == "illustration") {
            updateContent("Illustration LauncherIcon");
        }
        else if (args.groupId == "header_footer") {
            updateContent("Header & Footer LauncherIcon");
        }
    }

    function selectMenuItem(args) {
        if (args.item.id == "word" || args.item.id == "word97" || args.item.id == "pdf") {
            updateContent("File -> Save as -> " + args.item.text);
        } else {
            updateContent("File -> " + args.item.text);
        }
    }

    function updateContent(args) {
        ej.notifications.ToastUtility.show({
            target: "#ribbonPlaceHolder",
            cssClass: "e-toast-info",
            height: 25,
            width: 'auto',
            timeOut: 2000,
            newestOnTop: true,
            animation: { show: { effect: 'FadeIn' }, hide: { effect: 'FadeOut' } },
            position: { X: "Right" },
            showCloseButton: true,
            content: "Last clicked item is " + args
        });
    }
</script>

<style>
    #pictureList {
        display: none;
        border: 1px;
        box-shadow: 0 0 2px;
    }

    #pictureddl-popup #pictureList {
        display: block;
    }

    .e-bigger #pictureList .e-list-header {
     background-color: white;
    }

    body[class*="dark"].e-bigger #pictureList .e-list-header,
    body[class*="high"].e-bigger #pictureList .e-list-header {
        background-color: #212529;
    }
    
    .e-bigger #pictureList ul {
        padding: 0px;
        margin-top: 0px;
    }

    #ribbonContainer{
        padding: 20px;
        background-color: #dbdadacc;
        display: flex;
        flex-direction: column;
        height: 550px;
    }

    #ribbon {
        box-sizing: border-box;
    }

    #ribbonPlaceHolder {
        flex-grow: 1; 
        box-sizing: border-box;
        background-color: transparent;
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 15px;
    }

    #ribbonPlaceHolder .content1 {
        background-color: #3a9ae5;
        width: 150px;
        height: 60%;
    }

    #ribbonPlaceHolder .content2 {
        background-color: #9d9c9a;
        width: calc(100% - 160px);
        height: 60%;
    }

    #ribbonPlaceHolder .content3 {
        background-color: #7f7e7d;
        width: 150px;
        height: calc(40% - 10px);
    }

    #ribbonPlaceHolder .content4 {
        background-color: #c8c6c4;
        width: calc(100% - 160px);
        height: calc(40% - 10px);
    }

    #ribbonPlaceHolder .e-toast-close-icon {
        position: absolute;
        top: 50%;
        right: 2px ;
        transform: translateY(-50%);
        margin: 0;
    }

    #ribbonPlaceHolder .e-toast-content {
        padding-right: 25px;
    }

    body[class*="dark"] #ribbonContainer,
    body[class*="high"] #ribbonContainer {
        background: #a7a7a742;
    }

    .font-group .e-ribbon-group-content {
        justify-content: center;
    }

    #header_footer .e-ribbon-group-overflow-ddb {
        min-width: 10ch;
    }

    @@font-face {
    font-family: 'ribbon';
    src:
    url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
    font-weight: normal;
    font-style: normal;
    }

    [class^="sf-icon-"], [class*=" sf-icon-"] {
    font-family: 'ribbon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    }

    .sf-icon-3d-model:before { content: "\e700"; }
    .sf-icon-shapes:before { content: "\e701"; }
    .sf-icon-dictate:before { content: "\e702"; }
    .sf-icon-chart:before { content: "\e703"; }
    .sf-icon-screenshot:before { content: "\e704"; }
    .sf-icon-smart-art:before { content: "\e706"; }
    .sf-icon-share:before { content: "\e707"; }
    .sf-icon-read:before { content: "\e708"; }
    .sf-icon-web-layout:before { content: "\e709"; }
    .sf-icon-mode:before { content: "\e70b"; }
    .sf-icon-draft:before { content: "\e70c"; }
    .sf-icon-reuse:before { content: "\e70f"; }
    .sf-icon-editor:before { content: "\e70a"; }
    .sf-icon-word:before { content: "\e70d"; }

    .e-ribbon-gallery-item {
        margin: 2px;
    }

    .e-ribbon-gallery-item.normal {
        background: #f0f0f0;
    }

    .e-ribbon-gallery-item.normal .e-ribbon-gallery-text {
        color: #333;
    }

    .e-ribbon-gallery-item.bad {
        background: #ffb6b6;
    }

    .e-ribbon-gallery-item.bad .e-ribbon-gallery-text {
        color: #800000;
    }

    .e-ribbon-gallery-item.good {
        background: #c7ebc9;
    }

    .e-ribbon-gallery-item.good .e-ribbon-gallery-text {
        color: #004d00;
    }

    .e-ribbon-gallery-item.neutral {
        background: #eedd9d;
    }

    .e-ribbon-gallery-item.neutral .e-ribbon-gallery-text {
        color: #6c5429;
    }

    .e-ribbon-gallery-item.calculation {
        background: #d9d9d9;
    }

    .e-ribbon-gallery-item.calculation .e-ribbon-gallery-text {
        color: #a67d00;
    }

    .e-ribbon-gallery-item.check-cell {
        background: #f0f0f0;
    }

    .e-ribbon-gallery-item.check-cell .e-ribbon-gallery-text {
        color: #333;
    }

    .e-ribbon-gallery-item.hyperlink {
        background: #f5f5f5;
    }

    .e-ribbon-gallery-item.hyperlink .e-ribbon-gallery-text {
        color: #333;
        text-decoration: underline;
    }

    .e-ribbon-gallery-item.input {
        background: #e0ac70;
    }

    .e-ribbon-gallery-item.input .e-ribbon-gallery-text {
        color: #333;
    }

    .e-ribbon-gallery-item.linked-cell {
        background: #f0f0d8;
    }

    .e-ribbon-gallery-item.linked-cell .e-ribbon-gallery-text {
        color: #333;
    }

    .e-ribbon-gallery-item.note {
        background: #f5f5b5;
    }

    .e-ribbon-gallery-item.note .e-ribbon-gallery-text {
        color: #333;
    }

    .e-ribbon-gallery-item.heading_1 .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 16px;
        text-decoration: underline;
    }

    .e-ribbon-gallery-item.heading_2 .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 14px;
        text-decoration: underline;
    }

    .e-ribbon-gallery-item.heading_3 .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 13px;
        text-decoration: underline;
    }

    .e-ribbon-gallery-item.heading_4 .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 12px;
        text-decoration: underline;
    }

    .e-ribbon-gallery-item.title .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 14px;
    }

    .e-ribbon-gallery-item.total .e-ribbon-gallery-text {
        color: #2371de;
        font-size: 14px;
    }

    .e-ribbon-gallery-item.total {
        position: relative;
    }
    .e-ribbon-gallery-item.total::before,
    .e-ribbon-gallery-item.total::after {
        content: '';
        position: absolute;
        left: 0;
        width: 100%;
        height: 1px;
        background-color: #1d2834;
    }
    .e-ribbon-gallery-item.total::before {
        top: 0;
    }
    .e-ribbon-gallery-item.total::after {
        bottom: 0;
    }

    body[class*="dark"] .e-ribbon-gallery-item:not(.heading_1,.heading_2,.heading_3,.heading_4,.title,.total) .e-ribbon-gallery-text,
    body[class*="high"] .e-ribbon-gallery-item:not(.heading_1,.heading_2,.heading_3,.heading_4,.title,.total) .e-ribbon-gallery-text {
        color: #000;
    }

</style>

@section Meta{
<meta name="description" content="This example demonstrates the Gallery Support in ASP.NET Core Ribbon control. Explore here for more details." />
}
@section ActionDescription{
<div id="action-description">
    <p>This sample showcases the functionality of the Ribbon Gallery item.</p>
</div>
}
@section Description{
<div id="description">
    <p>
        The Ribbon Gallery item enables to perform specific actions by displaying a collection of related items, including icons, content, or images.
        In this sample, the gallery item is added to showcase a collection of items with content using <code>gallerySettings</code> tag directive with the defined type as <code>RibbonItemType.Gallery</code>. Each collection can be grouped using <code>groups</code> property with defined group name using <code>header</code> property.
        Each item's content is added using <code>content</code> property, and its customization using <code>itemWidth</code>, <code>itemHeight</code>, and <code>cssClass</code> properties.
    </p>
</div>
}
@section Title{
    <title>ASP.NET Core Ribbon Gallery Support Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Gallery Support in ASP.NET Core Ribbon Control</h1>
}
