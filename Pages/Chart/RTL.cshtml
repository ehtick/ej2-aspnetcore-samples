@page
@model EJ2CoreSampleBrowser.Pages.Chart.RTLModel
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer" enableRtl="true" load="load" axisLabelRender="onLabelRender" title="Company Performance">
                <e-chart-tooltipsettings enable="true" enableHighlight="true">
                </e-chart-tooltipsettings>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-legendsettings enableHighlight="true"></e-chart-legendsettings>
                <e-chart-primaryxaxis interval=1 minimum=2015 maximum=2020>
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis interval=200 minimum=0 maximum=1200 labelFormat="{value}B">
                    <e-majorticklines width="0"></e-majorticklines>
                    <e-linestyle width="0"></e-linestyle>
                </e-chart-primaryyaxis>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-series-collection>
                    <e-series dataSource="@Model.ChartPoints" xName="Year" yName="Sales" columnSpacing="0.1" width="2" name="Sales" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    </e-series>
                    <e-series dataSource="@Model.ChartPoints" xName="Year" yName="Expense" columnSpacing="0.1" width="2" name="Expense" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    </e-series>
                    <e-series dataSource="@Model.ChartPoints" xName="Year" yName="Profit" columnSpacing="0.1" width="2" name="Profit" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
        function load(args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
        function onLabelRender(args) {
            if (args.axis.orientation === 'Horizontal') {
               args.cancel = args.value === 2015 || args.value === 2020;
            }
        }
    </script>
}
@*custom code start*@
@section Scripts {
}
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the RTL in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
       This sample visualizes a companyâ€™s performance with a default column chart rendered right-to-left (RTL). The values of the data points are displayed in a tooltip and the legend in the sample displays information about the series.
    </p>
}
@section Description{
    <p>
        <code>Right-to-left</code>(RTL) is used to render a component from right to left (RTL) and it can be enabled by setting the <code>EnableRtl</code> property as <b>true</b>. In this demo, you can see the <code>Axis</code>, <code>Data Points</code>, <code>Tooltip</code> and <code>Legend</code> are aligned from right to left.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart RTL Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of RTL in ASP.NET Core Chart Control</h1>
                }