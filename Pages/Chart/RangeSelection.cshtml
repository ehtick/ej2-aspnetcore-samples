@page
@model EJ2CoreSampleBrowser.Pages.Chart.RangeSelectionModel
@using Syncfusion.EJ2
@section ControlsSection{
    @{
       var DragXY = "DragXY";
    }
    <div class="control-section col-md-8" align="center">
        <ejs-chart id="container" title="Profit Comparison of A and B" load="load" selectionMode="@Syncfusion.EJ2.Charts.SelectionMode.DragXY" allowMultiSelection="false">
            <e-chart-primaryxaxis minimum="1970" maximum="2016">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis minimum="0" maximum="100" interval="25" title="Sales" labelFormat="{value}%">
                <e-majorgridlines width="1"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="@Model.ChartPoints" name="Product A" xName="Period" opacity="1" yName="ProductA_Sales" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Scatter">
                    <e-series-marker height="7" width="7" shape="@Syncfusion.EJ2.Charts.ChartShape.Triangle"></e-series-marker>
                </e-series>
                <e-series dataSource="@Model.ChartPoints" name="Product B" xName="Period" opacity="1" yName="ProductB_Sales" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Scatter">
                    <e-series-marker height="7" width="7" shape="@Syncfusion.EJ2.Charts.ChartShape.Pentagon"></e-series-marker>
                </e-series>
            </e-series-collection>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-legendsettings visible="true" toggleVisibility="false"></e-chart-legendsettings>
        </ejs-chart>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Selection Mode:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="data" dataSource="@Model.Data" change="onChange" value="DragXY" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr id="" style="height: 50px">
                <td>
                    <div> Enable Multi Selection:</div>
                </td>
                <td>
                    <input type="checkbox" id="select" style="margin-top: 15px">
                </td>
            </tr>
            </tbody>
        </table>
    </div>
    <style>
        a {
            color: #1a0dab;
            text-decoration: underline;
        }
        #select:hover {
             cursor: pointer !important;
        }
    </style>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
        function load(args) {
            loadChartTheme(args);
        }
        function onChange(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.selectionMode = this.value;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        }
        document.getElementById('select').onchange = () => {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('select'));
            chart.allowMultiSelection = element.checked;
            chart.series[0].animation.enable = false;
            chart.series[1].animation.enable = false;
            chart.refresh();
        };
    </script>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Range Selection in ASP.NET Core Chart control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the range selection behavior and its mode in the charts.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to select points in a specific region. You can change the <b>Selection Mode</b> in the properties panel. You can also enable multiple selection.
        </p>
        <p>
            Click and drag to enable a rectangular selection and it will display the collection of points that are selected under the region.
        </p>
        <p>
            Rectangular selection can be set using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.SelectionMode.html" aria-label="Navigate to the class reference for Charts SelectionMode">SelectionMode</a> property and it supports the following modes.
        </p>
        <ul>
            <li><code>DragXY</code> - Rectangular selection with respect to both axes.</li>
            <li><code>DragX</code> - Rectangular selection with respect to horizontal axis.</li>
            <li><code>DragY</code> - Rectangular selection with respect to vertical axis.</li>
        </ul>
        <p>
            More information about the rectangular selection can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/selection#rectangular-selection" aria-label="Navigate to the documentation for rectangular selection in ASP.NET Core Chart control">documentation section</a>.
        </p>
    </div>

}
@section Title{
                    <title>ASP.NET Core Chart Range Selection Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Range Selection in ASP.NET Core Chart Control</h1>
                }