@page
@model EJ2CoreSampleBrowser.Pages.Chart.StackedBarModel
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section" align="center">

        <ejs-chart id="splineContainer" load="load" title="Annual Renewable Energy Generation in China (2020-2023) by Source" subTitle="Source: wikipedia.org" legendClick="legendClick" tooltipRender="tooltipRender">
            <e-chart-stacklabels visible=true format="{value}TWh"></e-chart-stacklabels>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
                <e-chartarea-margin bottom=12></e-chartarea-margin>
            </e-chart-chartarea>
            <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category">
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis edgeLabelPlacement="@Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift" labelFormat="{value}TWh" maximum=3500>
                <e-linestyle width="0"></e-linestyle>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="@Model.ChartPoints" xName="X" yName="Y1" name="Wind" width=2 columnWidth="0.6" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar" legendShape="Rectangle">
                    <e-series-marker>
                        <e-series-datalabel visible=true></e-series-datalabel>
                    </e-series-marker>
                    <e-series-border width="1" color="#ffffff"></e-series-border>
                </e-series>
                <e-series dataSource="@Model.ChartPoints" xName="X" yName="Y2" name="Solar" width=2 columnWidth="0.6" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar" legendShape="Rectangle">
                    <e-series-marker>
                        <e-series-datalabel visible=true></e-series-datalabel>
                    </e-series-marker>
                    <e-series-border width="1" color="#ffffff"></e-series-border>
                </e-series>
                <e-series dataSource="@Model.ChartPoints" xName="X" yName="Y3" name="Hydro" width=2 columnWidth="0.6" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingBar" legendShape="Rectangle">
                    <e-series-marker>
                        <e-series-datalabel visible=true></e-series-datalabel>
                    </e-series-marker>
                    <e-series-cornerradius topRight=4 bottomRight=4></e-series-cornerradius>
                    <e-series-border width="1" color="#ffffff"></e-series-border>
                </e-series>
            </e-series-collection>
            <e-chart-tooltipsettings enable="true" enableHighlight=true header="<b>Renewable Energy Generation</b>" format="${series.name} : <b>${point.y}</b>"></e-chart-tooltipsettings>
            <e-chart-legendsettings visible="true" enableHighlight="true" shapeHeight=9 shapeWidth=9></e-chart-legendsettings>
        </ejs-chart>
    </div>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
        function load(args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }

        var tooltipRender = function (args) {
            if (args.text) {
                var value = args.point.y.toLocaleString('en-US');
                args.text = args.series.name + ": <b>" + value + "TWh</b>";
            }
        }
        var legendClick = function (args) {
            if (args.series.index === 0) {
                if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.bottomRight = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.bottomRight = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.bottomRight = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.bottomRight = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[0].cornerRadius.bottomRight = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                }
            }
            if (args.series.index === 1) {
                if (args.chart.series[2].visible) {
                    args.chart.series[2].cornerRadius.bottomRight = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.bottomRight = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.bottomRight = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.bottomRight = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                } else {
                    args.chart.series[1].cornerRadius.bottomRight = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[0].cornerRadius.bottomRight = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                }
            }
            if (args.series.index === 2) {
                if (!args.series.visible) {
                    args.chart.series[2].cornerRadius.bottomRight = 4;
                    args.chart.series[2].cornerRadius.topRight = 4;
                    args.chart.series[1].cornerRadius.bottomRight = 0;
                    args.chart.series[1].cornerRadius.topRight = 0;
                    args.chart.series[0].cornerRadius.bottomRight = 0;
                    args.chart.series[0].cornerRadius.topRight = 0;
                } else if (args.chart.series[1].visible) {
                    args.chart.series[1].cornerRadius.bottomRight = 4;
                    args.chart.series[1].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.bottomRight = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                } else if (args.series.visible && args.chart.series[0].visible) {
                    args.chart.series[0].cornerRadius.bottomRight = 4;
                    args.chart.series[0].cornerRadius.topRight = 4;
                    args.chart.series[2].cornerRadius.bottomRight = 0;
                    args.chart.series[2].cornerRadius.topRight = 0;
                }
            }
        }

    </script>
}
@*custom code start*@
@section Scripts {

}
@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Bar in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This <a target="_blank" href="https://www.syncfusion.com/aspnet-core-ui-controls/charts/chart-types/stacked-bar-chart" aria-label="Navigate to explore the syncfusion ASP.NET Core Stacked Bar Chart">ASP.NET Core Stacked Bar Chart</a> example demonstrates a React stacked bar chart that illustrates renewable energy generation in China from 2020 to 2023, segmented by wind, solar, and hydro sources. The legend in the sample shows more information about the series.
        </p>
    </div>
}
@section Description{
    <div>
        <p>
            In this example, you can see how to render and configure the stacked bar chart. The stacked bar chart stacks points in the series horizontally. You can also use the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartSeries.html#Syncfusion_EJ2_Charts_ChartSeries_StackingGroup" aria-label="Navigate to the StackingGroup property reference for ASP.NET Core ChartSeries">StackingGroup</a> property to group stacked collections based on category.
        </p>
        <p>
            <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
        </p>
        <p>
            More information about the stacked bar series can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/chart-types/stacked-bar" aria-label="Navigate to the documentation for Stacked Bar in ASP.NET CORE Charts Component">documentation section</a>.
        </p>
    </div>
}
@*custom code start*@
<style>

    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
@section Title{
                    <title>ASP.NET Core Chart Stacked Bar Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stacked Bar in ASP.NET Core Chart Control</h1>
                }