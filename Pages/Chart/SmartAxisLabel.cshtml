@page
@model EJ2CoreSampleBrowser.Pages.Chart.SmartAxisLabelModel
@using Syncfusion.EJ2

@{
var Hide = "Hide";
var None = "None";
var Outside = "Outside";
var font = new { fontWeight = "600", color = "#ffffff" };
var interSect = new string[] { "Hide", "Trim", "Wrap", "MultipleRows", "Rotate45", "Rotate90", "None" };
var edgeLabel = new string[] { "None", "Shift", "Hide" };
var labelPosition = new string[] { "Outside", "Inside" };
}

@section ControlsSection{
    
    <div class="col-lg-7 control-section" align="center">
        <ejs-chart id="container" title="Internet Users in Millions" pointRender="labelRender" load="load">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category" labelIntersectAction="@Syncfusion.EJ2.Charts.LabelIntersectAction.Hide" maximumLabelWidth="34" enableTrim="false" edgeLabelPlacement="@Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift" labelPosition="@Syncfusion.EJ2.Charts.AxisPosition.Outside" interval="1">
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis>
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
                <e-labelstyle size="0px"></e-labelstyle>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="@Model.ChartPoints" name="Users" xName="Country" width="2" opacity="1" yName="User" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="true" position="@Syncfusion.EJ2.Charts.LabelPosition.Top" name="DataLabelMappingName">
                            <e-font color="#ffffff" fontWeight="600"></e-font>
                        </e-series-datalabel>
                    </e-series-marker>
                </e-series>
            </e-series-collection>
            <e-chart-legendsettings visible="false"></e-chart-legendsettings>
            <e-chart-tooltipsettings enable="true" header="" format="<b>${point.x}</b> <br> Internet Users : <b>${point.y}M</b>"></e-chart-tooltipsettings>
        </ejs-chart>
    </div>
    <div class="col-lg-5 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
            <tr style="height: 50px">
                <td style="width: 40%">
                    <div>Intersect Action:</div>
                </td>
                <td style="width: 60%;">

                    <ejs-dropdownlist id="intersect" dataSource="@interSect" change="intersect" value="Hide" popupHeight="220px"></ejs-dropdownlist>

                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Edge Label Placement:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="edgeLabel" dataSource="@edgeLabel" change="edgeLabel" value="None" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Label Position:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="labelPosition" dataSource="@labelPosition" value="Outside" change="labelPosition" index="0" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Enable Trim:
                    </div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <input type="checkbox" id="Trim" unchecked="">
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Maximum Label Width:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-numerictextbox id="labelWidth" min="1" max="120" value="34" width="200" step="1" change="labelWidth"></ejs-numerictextbox>
                </td>
            </tr>
            </tbody>
        </table>
    </div>
    <style>
        #Trim:hover {
             cursor: pointer !important;
        }
    </style>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
        function labelRender(args) {
            pointRender(args);
        };
        function load(args) {
            loadChartTheme(args);
            args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice?'true':'false';
            args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice?'-90':'0';
        }
        function intersect(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.primaryXAxis.labelIntersectAction = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();
        }
        function edgeLabel(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.primaryXAxis.edgeLabelPlacement = this.value;
            chart.series[0].animation.enable = false;
            chart.dataBind();
        }
        function labelPosition(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.primaryXAxis.labelPosition = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();
        }
        document.getElementById('Trim').onchange = function () {
            var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('Trim'));
            chart.primaryXAxis.enableTrim = element.checked;
            chart.series[0].animation.enable = false;
            chart.refresh();
        };
        function labelWidth(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            var width = document.getElementById("labelWidth").ej2_instances[0];
            chart.series[0].animation.enable = false;
            chart.primaryXAxis.maximumLabelWidth = width.value;
            chart.series[0].animation.enable = false;
            chart.refresh();
        }
    </script>
}
@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Smart Axis Labels in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{

    <div id="action-description">
        <p>
            This example shows the smart label placement for the chart axis labels.
        </p>
    </div>
}
@section Description {
    <div id="description">
        <p>
            In this example, you can see how the axis labels are smartly arranged when they overlap with each other using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_LabelIntersectAction" aria-label="Navigate to the LabelIntersectAction property reference for ASP.NET Core ChartAxis">LabelIntersectAction</a> property in the axis.
        </p>
        <p>
            The following are the <code>LabelIntersectAction</code> property values and their behaviors:
        </p>
        <ul>
            <li><b>Hide</b> - Hide the label when it intersects.</li>
            <li><b>Trim</b> - Trim the label when it intersects.</li>
            <li><b>Wrap</b> - Wrap the label when it intersects.</li>
            <li><b>MultipleRows</b> - Arrange the label in multiple row when it intersect.</li>
            <li><b>Rotate45</b> - Rotate the label to 45 degree when it intersects.</li>
            <li><b>Rotate90</b> - Rotate the label to 90 degree when it intersects.</li>
            <li><b>None</b> - Shows all the labels.</li>
        </ul>
        <p>
            Chart handles edge labels placement using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_EdgeLabelPlacement" aria-label="Navigate to the EdgeLabelPlacement property reference for ASP.NET Core ChartAxis">EdgeLabelPlacement</a> property. Its values and their behaviors are:
        </p>
        <ul>
            <li><code>None</code> - No action is performed.</li>
            <li><code>Hide</code> - Edge label is hidden.</li>
            <li><code>Shift</code> - Shifts the edge labels.</li>
        </ul>
        <p>
            More information on the smart axis labels can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/axis-labels#smart-axis-labels" aria-label="Navigate to the documentation for smart-axis-labels in ASP.NET Core Chart control">documentation section</a>.
        </p>
    </div>

}
@section Title{
                    <title>ASP.NET Core Chart Smart Axis Labels Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Smart Axis Labels in ASP.NET Core Chart Control</h1>
                }