@page
@using Syncfusion.EJ2

@{
    var toolBarItems = new String[] { "Pan", "Reset" };
}
@section ControlsSection{
    <div class="control-section">
        <div class="row">
            <div class="col" id="container1">
                <ejs-chart id="lineContainer1" load="load" title="US to EURO" chartMouseMove="chartMouseMove1" chartMouseLeave="chartMouseLeave1" zoomComplete="zoomComplete" chartMouseUp="chartMouseUp1">
                    <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.DateTime" minimum="new DateTime(2023, 2, 18)" maximum="new DateTime(2023, 8, 18)" labelFormat="MMM d">
                        <e-majorgridlines width="0"></e-majorgridlines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryxaxis>
                    <e-chart-primaryyaxis labelFormat="n2" minimum="0.86" maximum="0.96" interval="0.025">
                        <e-majorticklines width="0"></e-majorticklines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryyaxis>
                    <e-chart-chartarea>
                        <e-chartarea-border width="0"></e-chartarea-border>
                    </e-chart-chartarea>
                    <e-series-collection>
                        <e-series width="2" xName="USD" yName="EUR" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Line">
                            <e-series-emptypointsettings mode="@Syncfusion.EJ2.Charts.EmptyPointMode.Drop"></e-series-emptypointsettings>
                        </e-series>
                    </e-series-collection>
                    <e-chart-zoomsettings enableMouseWheelZooming="true" enableScrollbar="false" enablePinchZooming="true" enableDeferredZooming="false" enablePan="true" mode="@Syncfusion.EJ2.Charts.ZoomMode.X" toolbarItems="@toolBarItems"></e-chart-zoomsettings>
                    <e-chart-tooltipsettings enable="true" showNearestTooltip="true" header="" format="<b>€${point.y}</b> <br> ${point.x} 2023" enableMarker="false" enableHighlight="true"></e-chart-tooltipsettings>
                    <e-chart-titlestyle textAlignment="@Syncfusion.EJ2.Charts.Alignment.Near"></e-chart-titlestyle>
                    <e-chart-crosshairsettings enable=true lineType="@Syncfusion.EJ2.Charts.LineType.Vertical" dashArray="2,2"></e-chart-crosshairsettings>
                </ejs-chart>
            </div>
            <div class="col" id="container2">
                <ejs-chart id="lineContainer2" load="load" title="US to Yen" chartMouseMove="chartMouseMove2" chartMouseLeave="chartMouseLeave2" zoomComplete="zoomComplete" chartMouseUp="chartMouseUp2">
                    <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.DateTime" minimum="new DateTime(2023, 2, 18)" maximum="new DateTime(2023, 8, 18)" labelFormat="MMM d">
                        <e-majorgridlines width="0"></e-majorgridlines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryxaxis>
                    <e-chart-primaryyaxis labelFormat="{value}" minimum="120" maximum="152" interval="8" labelPadding="8">
                        <e-majorticklines width="0"></e-majorticklines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryyaxis>
                    <e-chart-chartarea>
                        <e-chartarea-border width="0"></e-chartarea-border>
                    </e-chart-chartarea>
                    <e-series-collection>
                        <e-series width="2" xName="USD" yName="JPY" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Line">
                        </e-series>
                    </e-series-collection>
                    <e-chart-zoomsettings enableMouseWheelZooming="true" enableScrollbar="false" enablePinchZooming="true" enableDeferredZooming="false" enablePan="true" mode="@Syncfusion.EJ2.Charts.ZoomMode.X" toolbarItems="@toolBarItems"></e-chart-zoomsettings>
                    <e-chart-tooltipsettings enable="true" showNearestTooltip="true" header="" format="<b>¥${point.y}</b> <br> ${point.x} 2023" enableMarker="false" enableHighlight="true"></e-chart-tooltipsettings>
                    <e-chart-titlestyle textAlignment="@Syncfusion.EJ2.Charts.Alignment.Near"></e-chart-titlestyle>
                    <e-chart-crosshairsettings enable=true lineType="@Syncfusion.EJ2.Charts.LineType.Vertical" dashArray="2,2"></e-chart-crosshairsettings>
                </ejs-chart>
            </div>
        </div>
        <div class="row">
            <div class="col" id="container3">
                <ejs-chart id="lineContainer3" load="load" title="US to SGD" chartMouseMove="chartMouseMove3" chartMouseLeave="chartMouseLeave3" zoomComplete="zoomComplete" chartMouseUp="chartMouseUp3">
                    <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.DateTime" minimum="new DateTime(2023, 2, 18)" maximum="new DateTime(2023, 8, 18)" labelFormat="MMM d">
                        <e-majorgridlines width="0"></e-majorgridlines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryxaxis>
                    <e-chart-primaryyaxis labelFormat="n2" minimum="1.30" maximum="1.37" interval="0.0175">
                        <e-majorticklines width="0"></e-majorticklines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryyaxis>
                    <e-chart-chartarea>
                        <e-chartarea-border width="0"></e-chartarea-border>
                    </e-chart-chartarea>
                    <e-series-collection>
                        <e-series width="2" opacity="0.6" xName="USD" yName="SGD" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Area">
                            <e-series-border width="2"></e-series-border>
                        </e-series>
                    </e-series-collection>
                    <e-chart-zoomsettings enableMouseWheelZooming="true" enableScrollbar="false" enablePinchZooming="true" enableDeferredZooming="false" enablePan="true" mode="@Syncfusion.EJ2.Charts.ZoomMode.X" toolbarItems="@toolBarItems"></e-chart-zoomsettings>
                    <e-chart-tooltipsettings enable="true" showNearestTooltip="true" header="" format="<b>$${point.y}</b> <br> ${point.x} 2023" enableMarker="false"></e-chart-tooltipsettings>
                    <e-chart-titlestyle textAlignment="@Syncfusion.EJ2.Charts.Alignment.Near"></e-chart-titlestyle>
                    <e-chart-crosshairsettings enable=true lineType="@Syncfusion.EJ2.Charts.LineType.Vertical" dashArray="2,2"></e-chart-crosshairsettings>
                </ejs-chart>
            </div>
            <div class="col" id="container4">
                <ejs-chart id="lineContainer4" load="load" title="US to INR" chartMouseMove="chartMouseMove4" chartMouseLeave="chartMouseLeave4" zoomComplete="zoomComplete" chartMouseUp="chartMouseUp4">
                    <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.DateTime" minimum="new DateTime(2023, 2, 18)" maximum="new DateTime(2023, 8, 18)" labelFormat="MMM d">
                        <e-majorgridlines width="0"></e-majorgridlines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryxaxis>
                    <e-chart-primaryyaxis labelFormat="n1" minimum="79" maximum="85" interval="1.5">
                        <e-majorticklines width="0"></e-majorticklines>
                        <e-linestyle width="0"></e-linestyle>
                    </e-chart-primaryyaxis>
                    <e-chart-chartarea>
                        <e-chartarea-border width="0"></e-chartarea-border>
                    </e-chart-chartarea>
                    <e-series-collection>
                        <e-series width="2" opacity="0.6" xName="USD" yName="INR" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Area">
                            <e-series-border width="2"></e-series-border>
                        </e-series>
                    </e-series-collection>
                    <e-chart-zoomsettings enableMouseWheelZooming="true" enableScrollbar="false" enablePinchZooming="true" enableDeferredZooming="false" enablePan="true" mode="@Syncfusion.EJ2.Charts.ZoomMode.X" toolbarItems="@toolBarItems"></e-chart-zoomsettings>
                    <e-chart-tooltipsettings enable="true" showNearestTooltip="true" header="" format="<b>₹${point.y}</b> <br> ${point.x} 2023" enableMarker="false"></e-chart-tooltipsettings>
                    <e-chart-titlestyle textAlignment="@Syncfusion.EJ2.Charts.Alignment.Near"></e-chart-titlestyle>
                    <e-chart-crosshairsettings enable=true lineType="@Syncfusion.EJ2.Charts.LineType.Vertical" dashArray="2,2"></e-chart-crosshairsettings>
                </ejs-chart>
            </div>
        </div>
    </div>
        <script src="~/scripts/chart/synchronized-chart-data.js"></script>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
            var chart1;
            var chart2;
            var chart3;
            var chart4;
            var charts = [];
            var zoomFactor = 0;
            var zoomPosition = 0;
            var ChartPoints = synchronizedData;
            function load(args) {
                loadChartTheme(args);
                args.chart.series[0].dataSource = ChartPoints;
                args.chart.primaryXAxis.interval = ej.base.Browser.isDevice ? 2 : 1;
                args.chart.primaryXAxis.edgeLabelPlacement = ej.base.Browser.isDevice ? 'None' : 'Shift';
                args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice ? -45 : 0;
                args.chart.tooltip.fadeOutDuration = ej.base.Browser.isDevice ? 2500 : 1000;
                var themeColor = [];                
                // check the theme
                if (args.chart.theme === 'MaterialDark') {
                    themeColor = pointMaterialDarkColors;
                }
                else if (args.chart.theme === 'Material') {
                    themeColor = pointMaterialColors;
                }
                else if (args.chart.theme === "Fabric") {
                themeColor = pointFabricColors;
                }
                else if (args.chart.theme === "FabricDark") {
                themeColor = pointFabricDarkColors;
                }
                else if (args.chart.theme === 'Bootstrap5Dark') {
                themeColor = pointBootstrap5DarkColors;
                }
                else if (args.chart.theme === 'Bootstrap5') {
                themeColor = pointBootstrap5Colors;
                }
                else if (args.chart.theme === "Bootstrap4") {
                themeColor = keyBootstrap4Colors;
                }
                else if (args.chart.theme === 'TailwindDark') {
                themeColor = pointTailwindDarkColors;
                }
                else if (args.chart.theme === 'Tailwind') {
                themeColor = pointTailwindDarkColors;
                }
                else if (args.chart.theme === "HighContrast") {
                themeColor = pointHighContrastColors;
                }
                else if (args.chart.theme === 'FluentDark') {
                themeColor = pointFluentDarkColors;
                }
                else if (args.chart.theme === 'Bootstrap') {
                themeColor = pointBootstrapColors;
                }
                else if (args.chart.theme === 'BootstrapDark') {
                themeColor = pointBootstrapColors;
                }
                else if (args.chart.theme === 'Material3') {
                themeColor = pointMaterial3Colors;
                }
                else if (args.chart.theme === 'Material3Dark') {
                themeColor = pointMaterial3DarkColors;
                }
                else if (args.chart.theme === 'Fluent2') {
                themeColor = pointFluent2Colors;
                }
                else if (args.chart.theme === 'Fluent2HighContrast' || args.chart.theme === 'Fluent2Dark') {
                themeColor = pointFluent2DarkColors;
                } else if (args.chart.theme === 'Tailwind3Dark') {
                themeColor = pointTailwind3DarkColors;
                }
                else if (args.chart.theme === 'Tailwind3') {
                themeColor = pointTailwind3Colors;
                }
                else {
                themeColor = pointFluentColors;
                }
                // check the container
                if (args.chart.element.id === 'lineContainer1') {
                    args.chart.series[0].fill = themeColor[0];
                }
                else if (args.chart.element.id === 'lineContainer2') {
                    args.chart.series[0].fill = themeColor[1];
                }
                else if (args.chart.element.id === 'lineContainer3') {
                    args.chart.series[0].fill = themeColor[2];
                }
                else if (args.chart.element.id === 'lineContainer4') {
                    args.chart.series[0].fill = themeColor[3];
                }
            }

            function zoomComplete(args) {
                if (args.axis.name === 'primaryXAxis') {
                    zoomFactor = args.currentZoomFactor;
                    zoomPosition = args.currentZoomPosition;
                    zoomCompleteFunction(args);
                }
            }

            function zoomCompleteFunction(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                charts = [chart1, chart2, chart3, chart4];
                for (var i = 0; i < charts.length; i++) {
                    if (args.axis.series[0].chart.element.id !== charts[i].element.id) {
                        charts[i].primaryXAxis.zoomFactor = zoomFactor;
                        charts[i].primaryXAxis.zoomPosition = zoomPosition;
                        charts[i].zoomModule.isZoomed = args.axis.series[0].chart.zoomModule.isZoomed;
                        charts[i].zoomModule.isPanning = args.axis.series[0].chart.zoomModule.isPanning;
                    }
                }
            }

            function chartMouseMove1(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if ((!ej.base.Browser.isDevice && !chart1.isTouch && !chart1.isChartDrag) || chart1.startMove) {
                    chart3.startMove = chart4.startMove = chart2.startMove = chart1.startMove;
                    chart3.showTooltip(args.x, args.y);
                    chart4.showTooltip(args.x, args.y);
                    chart2.showTooltip(args.x, args.y);
                    chart3.showCrosshair(args.x, args.y);
                    chart4.showCrosshair(args.x, args.y);
                    chart2.showCrosshair(args.x, args.y);
                }
            }

            function chartMouseMove2(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if ((!ej.base.Browser.isDevice && !chart2.isTouch && !chart2.isChartDrag) || chart2.startMove) {
                    chart3.startMove = chart4.startMove = chart1.startMove = chart2.startMove;
                    chart3.showTooltip(args.x, args.y);
                    chart4.showTooltip(args.x, args.y);
                    chart1.showTooltip(args.x, args.y);
                    chart3.showCrosshair(args.x, args.y);
                    chart4.showCrosshair(args.x, args.y);
                    chart1.showCrosshair(args.x, args.y);
                }
            }

            function chartMouseMove3(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if ((!ej.base.Browser.isDevice && !chart3.isTouch && !chart3.isChartDrag) || chart3.startMove) {
                    chart4.startMove = chart1.startMove = chart2.startMove = chart3.startMove;
                    chart4.showTooltip(args.x, args.y);
                    chart1.showTooltip(args.x, args.y);
                    chart2.showTooltip(args.x, args.y);
                    chart4.showCrosshair(args.x, args.y);
                    chart1.showCrosshair(args.x, args.y);
                    chart2.showCrosshair(args.x, args.y);
                }
            }

            function chartMouseMove4(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if ((!ej.base.Browser.isDevice && !chart4.isTouch && !chart4.isChartDrag) || chart4.startMove) {
                    chart1.startMove = chart2.startMove = chart3.startMove = chart4.startMove;
                    chart1.showTooltip(args.x, args.y);
                    chart2.showTooltip(args.x, args.y);
                    chart3.showTooltip(args.x, args.y);
                    chart1.showCrosshair(args.x, args.y);
                    chart2.showCrosshair(args.x, args.y);
                    chart3.showCrosshair(args.x, args.y);
                }
            }

            function chartMouseLeave1(args) {
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                chart4.hideCrosshair();
                chart3.hideCrosshair();
                chart2.hideCrosshair();
                chart4.hideTooltip();
                chart3.hideTooltip();
                chart2.hideTooltip();
            }

            function chartMouseLeave2(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                chart4.hideCrosshair();
                chart1.hideCrosshair();
                chart3.hideCrosshair();
                chart4.hideTooltip();
                chart1.hideTooltip();
                chart3.hideTooltip();
            }

            function chartMouseLeave3(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                chart4.hideCrosshair();
                chart1.hideCrosshair();
                chart2.hideCrosshair();
                chart4.hideTooltip();
                chart1.hideTooltip();
                chart2.hideTooltip();
            }

            function chartMouseLeave4(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart3.hideCrosshair();
                chart1.hideCrosshair();
                chart2.hideCrosshair();
                chart3.hideTooltip();
                chart1.hideTooltip();
                chart2.hideTooltip();
            }

            function chartMouseUp1(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if (ej.base.Browser.isDevice && chart1.startMove) {
                    chart2.hideCrosshair();
                    chart3.hideCrosshair();
                    chart4.hideCrosshair();
                    chart2.hideTooltip();
                    chart3.hideTooltip();
                    chart4.hideTooltip();
                }
            }

            function chartMouseUp2(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if (ej.base.Browser.isDevice && chart2.startMove) {
                    chart1.hideCrosshair();
                    chart3.hideCrosshair();
                    chart4.hideCrosshair();
                    chart1.hideTooltip();
                    chart3.hideTooltip();
                    chart4.hideTooltip();
                }
            }

            function chartMouseUp3(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if (ej.base.Browser.isDevice && chart3.startMove) {
                    chart1.hideCrosshair();
                    chart2.hideCrosshair();
                    chart4.hideCrosshair();
                    chart1.hideTooltip();
                    chart2.hideTooltip();
                    chart4.hideTooltip();
                }
            }

            function chartMouseUp4(args) {
                chart1 = document.getElementById('lineContainer1').ej2_instances[0];
                chart2 = document.getElementById('lineContainer2').ej2_instances[0];
                chart3 = document.getElementById('lineContainer3').ej2_instances[0];
                chart4 = document.getElementById('lineContainer4').ej2_instances[0];
                if (ej.base.Browser.isDevice && chart4.startMove) {
                    chart1.hideCrosshair();
                    chart2.hideCrosshair();
                    chart3.hideCrosshair();
                    chart1.hideTooltip();
                    chart2.hideTooltip();
                    chart3.hideTooltip();
                }
            }
        </script>
}
@*custom code start*@
@section Scripts {
}
<style>

    #control-container {
        padding: 0px !important;
    }

    .row {
        display: flex;
    }

    .col {
        width: 50%;
        margin: 10px;
        height: 270px;
    }
</style>
@section Meta{
        <meta name="description" content="This example demonstrates the Synchronized Charts in ASP.NET Core Chart control. Explore here for more details." />
                }
@*custom code end*@
@section ActionDescription{
        <p>
            This example visualizes the history of currency exchange rates using synchronized charts.
        </p>
}
@section Description{
        <p>
            This demo showcases the synchronization of multiple charts, with crosshair, tooltip, and zooming functionalities synchronized across the charts. Hover over or zoom in on one chart to observe the corresponding impact on the other charts as well.
        </p>
        <p>
            <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over or tap on the chart.
        </p>
        <p>
            More information on the user interaction can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/cross-hair-and-track-ball" aria-label="Navigate to the documentation for cross hair and track ball in ASP.NET Core Chart control">documentation section</a>.
        </p>
}
@section Title{
        <title>ASP.NET Core Chart Synchronized Charts Example - Syncfusion Demos </title>
                }
@section Header{
        <h1 class='sb-sample-text'>Example of Synchronized Charts in ASP.NET Core Chart Control</h1>
                }