@page
@model EJ2CoreSampleBrowser.Pages.Chart.StackedStepAreaModel
@using Syncfusion.EJ2
@section ControlsSection{
   <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer" load="load" title="Electricity- Production">
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-primaryxaxis edgeLabelPlacement="@Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift" >
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis title="Production (Billion as kWh)" labelFormat="{value}B" >
                    <e-majorticklines width="0"></e-majorticklines>
                    <e-linestyle width="0"></e-linestyle>
                </e-chart-primaryyaxis>
                <e-chart-legendsettings enableHighlight="true"></e-chart-legendsettings>
                <e-series-collection>
                    <e-series dataSource="@Model.ChartData" name="Renewable" xName="xValue" opacity=0.5 fill="#56CCF2" yName="yValue" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingStepArea">
                        <e-series-border width="2"></e-series-border>
                    </e-series>
                    <e-series dataSource="@Model.ChartData" name="Non-Renewable" xName="xValue" opacity=0.5 fill="#2F80ED" yName="yValue1" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingStepArea">
                        <e-series-border width="2"></e-series-border>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    <script src="~/scripts/chart/theme-color.js"></script>
    <script>
        function load(args) {
            loadChartTheme(args);
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
    </script>
}
@*custom code start*@
@section Scripts {

}

<style>

    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Step Area in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the data about electricity production using stacked stepped area chart.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Stacked StepArea type charts. This series forms the step line progress, by connecting points through vertical and horizontal lines with area filled.
        You can use <code>DashArray</code>, <code>Width</code> and <code>Fill</code> properties to customize the area. <code>Marker</code> and <code>DataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        More information about the stacked step area series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/chart-types/stacked-step-area" aria-label="Navigate to the documentation for Stacked step area in ASP.NET CORE Charts component">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Stacked Step Area Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stacked Step Area in ASP.NET Core Chart Control</h1>
                }