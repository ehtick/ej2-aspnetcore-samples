@page
@using EJ2CoreSampleBrowser.Models;

@{
    ViewData["Title"] = "InfiniteScrolling";
}

<h2>InfiniteScrolling</h2>

@section ControlsSection{

    <div class="control-section">

        <div>
            <ejs-treegrid id="TreeGrid" height="600" dataSource="@VirtualDataFormat.GetVirtualData()" childMapping="Children" treeColumnIndex="1" enableInfiniteScrolling="true">
                <e-treegrid-pagesettings pageSize="50"></e-treegrid-pagesettings>
                <e-treegrid-columns>
                    <e-treegrid-column field="TaskID" headerText="Player Jersey" textAlign="Right" width="140"></e-treegrid-column>
                    <e-treegrid-column field="FIELD1" headerText="Player Name" width="140"></e-treegrid-column>
                    <e-treegrid-column field="FIELD2" headerText="Year" textAlign="Right" width="120"></e-treegrid-column>
                    <e-treegrid-column field="FIELD3" headerText="Stint" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="FIELD4" headerText="TMID" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="FIELD5" headerText="LGID" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="FIELD6" headerText="GS" textAlign="Right" width="90"></e-treegrid-column>
                    <e-treegrid-column field="FIELD7" headerText="GP" textAlign="Right" width="90"></e-treegrid-column>
                </e-treegrid-columns>
            </ejs-treegrid>
        </div>
    </div>

}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the TreeGrid component with the infinite scrolling feature.
        </p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Infinite Scrolling in ASP.NET Core Tree Grid control. Explore here for more details." />
}
@section Description{
    <div id="description">
        <p>
            The Tree Grid Infinite scrolling, allows you to load data in lazy loading concept, which means the buffer data is loaded only when the scrollbar reaches the end of the scroller.
            To enable the virtualization, set <code>enableInfiniteScrolling</code> property as true.
        </p>
        <p>
            Note: The <code>height</code> property must be defined when enabling <code>enableInfiniteScrolling</code>.
        </p>
        <p>
            More information on the Infinite scrolling can be found in <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/infinite-scroll" aria-label="Navigate to the documentation for Infinite-scroll in ASP.NET Core TreeGrid control">documentation</a> section.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Tree Grid Infinite Scrolling Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Infinite Scrolling in ASP.NET Core Tree Grid Control</h1>
}
