@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2
@model EJ2CoreSampleBrowser.Pages.TreeGrid.ShowHideColumnsModel

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="content-wrapper">
            <ejs-treegrid id="TreeGrid" dataSource="@TreeData.GetDefaultData()" height="400" childMapping="Children" treeColumnIndex="1">
                <e-treegrid-columns>
                    <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="80"></e-treegrid-column>
                    <e-treegrid-column field="TaskName" headerText="Task Name" width="210"></e-treegrid-column>
                    <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" width="100"></e-treegrid-column>
                    <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="85"></e-treegrid-column>
                    <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="85"></e-treegrid-column>
                </e-treegrid-columns>
            </ejs-treegrid>
        </div>
    </div>

    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div>Column</div>
                </td>
                <td style="width: 70%;padding-right: 10px">
                    <ejs-dropdownlist id="Columns" dataSource="@Model.Columns" placeholder="Select a Column" index="0" popupHeight="220px" value="@("TaskId")" change="columnChange" width="120px">
                        <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                </td>
            </tr>
            <tr>
                <td class="left-side" style="width: 30%; padding-bottom:10px; padding-left: 10px;">
                    <ejs-button id="hide" content="HIDE"></ejs-button>
                </td>
                <td style="padding-bottom:10px; width: 70%;">
                    <ejs-button id="show" content="SHOW" disabled="true"></ejs-button>
                </td>
            </tr>
            <tr>
                <td style="width: 50%">
                    <div style="padding-top: 10px">
                        Hidden Columns
                    </div>
                </td>
                <td style="width: 50%; padding:10px 10px 0px 0px">
                    <textarea id="hiddencolumns" style="resize: none;height:65px;background-color: #fff; padding: 6px"
                              class="form-control" readonly="readonly"></textarea>
                </td>
            </tr>
        </table>
    </div>

    <script>
        var show;
        var hide;
        function columnChange(e) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            show = document.getElementById("show").ej2_instances[0];
            hide = document.getElementById("hide").ej2_instances[0];
            let columnName = e.value;
            let column = treegrid.getColumnByField(columnName);
            if (column.visible === undefined || column.visible) {
                show.disabled = true;
                hide.disabled = false;
            } else {
                hide.disabled = true;
                show.disabled = false;
            }
        }
        var hiddenColumns = document.getElementById('hiddencolumns');
        document.getElementById('show').addEventListener('click', () => {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            show = document.getElementById("show").ej2_instances[0];
            hide = document.getElementById("hide").ej2_instances[0];
            var dropDownListObject = document.getElementById("Columns").ej2_instances[0];
            var columnName = dropDownListObject.value;
            var column = treegrid.getColumnByField(columnName);
            treegrid.showColumns(column.headerText, 'headerText');
            show.disabled = true;
            hide.disabled = false;
            hiddenColumns.value = hiddenColumns.value.replace(column.headerText + '\n', '');
        });
        document.getElementById('hide').addEventListener('click', () => {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            show = document.getElementById("show").ej2_instances[0];
            hide = document.getElementById("hide").ej2_instances[0];
            var dropDownListObject = document.getElementById("Columns").ej2_instances[0];
            var columnName = dropDownListObject.value;
            var column = treegrid.getColumnByField(columnName);
            if (treegrid.getHeaderTable().querySelectorAll('th.e-hide').length === 3) {
                alert('Atleast one Column should be visible');
            } else {
                treegrid.hideColumns(column.headerText, 'headerText');
                hide.disabled = true;
                show.disabled = false;
                hiddenColumns.value = hiddenColumns.value + column.headerText + '\n';
            }
        });
    </script>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Show or Hide Column in ASP.NET Core Tree Grid control. Explore here for more details." />
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates dynamic show/hide columns feature of TreeGrid.
            Select column name from the properties panel and click hide/show to toggle visibility.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeGrid column can be showed/hidden dynamically using <code>
                showColumns
            </code> and <code>hideColumns</code> methods.
        </p>
        <p>
            In this demo, the columns can be showed and hidden by selecting the column name in the dropdown
            and click the Show or Hide buttons to toggle visibility. And the column`s visibility is toggled based on the
            <code>Columns->HeaderText</code> value.
        </p>
        <br />
        <p>
            The <code>Columns->Visible</code> property specifies the visibility of a column.
            To hide a column at the initial rendering, set the <code>Columns->Visible</code> property to false.
        </p>
    </div>
}

@*custom code end*@
@section Title{
    <title>ASP.NET Core Tree Grid Show or Hide Column Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Show or Hide Column in ASP.NET Core Tree Grid Control</h1>
}
