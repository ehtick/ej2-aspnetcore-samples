@page
@using EJ2CoreSampleBrowser.Models;

@{
    ViewData["Title"] = "DefaultScrolling";
}

<h2>DefaultScrolling</h2>

@section ControlsSection{
    <div class="control-section">
        <ejs-treegrid id="TreeGrid" dataSource="@TreeData.GetDefaultData()" height="410" width="auto" childMapping="Children" treeColumnIndex="1">
            <e-treegrid-columns>
                <e-treegrid-column field='TaskId' headerText='Task ID' width='70' textAlign='Right'></e-treegrid-column>
                <e-treegrid-column field='TaskName' headerText='Task Name' width='200'></e-treegrid-column>
                <e-treegrid-column field='StartDate' headerText='Start Date' width='90' format="yMd" textAlign='Right'></e-treegrid-column>
                <e-treegrid-column field='EndDate' headerText='End Date' width='90' format="yMd" textAlign='Right'></e-treegrid-column>
                <e-treegrid-column field='Duration' headerText='Duration' width='80' textAlign='Right'></e-treegrid-column>
                <e-treegrid-column field='Progress' headerText='Progress' width='80' textAlign='Right'></e-treegrid-column>
                <e-treegrid-column field='Priority' headerText='Priority' width='90'></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
    </div>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the TreeGrid component with the horizontal and vertical scrollbars to view the exceeded TreeGrid content.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The Tree Grid will show scrollbars when the content exceeds the element's width or height.
            The vertical and horizontal scrollbars will be displayed based on the following criteria.
        </p>
        <ul>
            <li>The vertical scrollbar appears when the total height of rows in the Tree Grid exceeds its element's height.</li>
            <li>The horizontal scrollbar appears when the sum of the column`s width exceeds the Tree Grid element's width.</li>
        </ul>
        <p>The <code>height</code> and <code>width</code> properties are used to set the Tree Grid height and width, respectively. The value of these properties can be a numeric, pixel(<code>px</code>) or percentage (<code>%</code>).
        </p>
        <p>
        In this demo, the <code>height</code> and <code>width</code> properties of the Tree Grid are set to <strong><em>400</em></strong> and <strong><em>auto</em></strong>,
        respectively. Now, the Tree Grid will render with a vertical scrollbar when the total height of rows exceeds its element height and horizontal scrollbar will appear when the
        total column width exceeds the element's width.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Tree Grid Default Scrolling Example - Syncfusion Demos </title>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Default Scrolling in ASP.NET Core Tree Grid control. Explore here for more details." />
}
@section Header{
    <h1 class='sb-sample-text'>Example of Default Scrolling in ASP.NET Core Tree Grid Control</h1>
}

