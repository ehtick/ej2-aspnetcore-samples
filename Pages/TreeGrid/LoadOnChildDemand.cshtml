@page
@using Syncfusion.EJ2

@section ControlsSection {
    <div class="control-section">

        <ejs-treegrid id="TreeGrid" height="450" hasChildMapping="isParent" idMapping="TaskID" parentIdMapping="ParentValue"
            enableVirtualization="true" loadChildOnDemand="true" treeColumnIndex="1" expandStateMapping="IsExpanded">
            <e-data-manager
                url="http://localhost:62928/api/TreeUrlDataSource" adaptor="UrlAdaptor"
                crossDomain="true"></e-data-manager>
            <e-treegrid-columns>
                <e-treegrid-column field="TaskID" headerText="Task ID" textAlign="Right" width="120"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" width="150"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date"
                    width="120"></e-treegrid-column>
                <e-treegrid-column field="EndDate" headerText=" End Date" textAlign="Right" format="yMd" type="date"
                    width="120"></e-treegrid-column>
                <e-treegrid-column field="Progress" headerText="Progress" width="110"></e-treegrid-column>
                <e-treegrid-column field="Priority" headerText="Priority" width="130"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
    </div>
}

@*custom code start*@

@section Meta {
    <meta name="description"
        content="This example demonstrates the Load Child On Demand in ASP.NET Core Tree Grid control. Explore here for more details." />
}

@section ActionDescription {
    <div id="action-description">
        <p>
            This example demonstrates how to load child records on demand in the Tree Grid when using remote data. During the initial render, only parent rows are loaded and displayed in a collapsed state. Child records are fetched dynamically when a parent row is expanded.
        </p>
    </div>
}

@section Description {
    <div id="description">
        The <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.treegrid.treegrid.html#Syncfusion_EJ2_TreeGrid_TreeGrid_LoadChildOnDemand'>LoadChildOnDemand</a> property is enabled by default, allowing the Tree Grid to initially render only parent records. This behavior is supported only for remote data sources and helps improve performance by minimizing the initial load. If LoadChildOnDemand is set to false, both parent and child records are loaded together during the initial rendering, and all rows are displayed in an expanded state.
        In this demo, Tree Grid features such as <a target='_blank' href='https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/virtual-scroll'>Virtualization</a> and the <a target='_blank' href='https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/data-binding/remote-data'>DataManager</a> are used.
    </div>
}

@*custom code end*@
@section Title {
    <title>ASP.NET Core Tree Load Child On Demand Data Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Load Child On Demand Data in ASP.NET Core Tree Grid Control</h1>
}
