@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2
@model EJ2CoreSampleBrowser.Pages.TreeGrid.ToolbarTemplateModel

@section ControlsSection{
    <div class="control-section">
        
        <ejs-treegrid id="TreeGrid" dataSource="@TreeData.GetDefaultData()" height="400" allowFiltering="true" toolbar=@Model.ToolbarItems toolbarClick="toolbarClick" childMapping="Children" treeColumnIndex="1">
            <e-treegrid-columns>
                <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="90"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" width="140"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" width="90"></e-treegrid-column>
                <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="85"></e-treegrid-column>
                <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="85"></e-treegrid-column>
                <e-treegrid-column field="Priority" headerText="Priority" textAlign="Right" width="90"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
    </div>

    <script>
        function toolbarClick(args) {
            if (args.item.id === 'toolbarfilter') {
                var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
                treegrid.filterByColumn("TaskName", "startswith", "Testing");;
            }
        }
    </script>

}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Toolbar Template in ASP.NET Core Tree Grid control. Explore here for more details." />
}

@section ActionDescription{
    <div id="action-description">
        This demo explains how to render custom template elements in a toolbar by which any custom operation can be performed in Syncfusion Essential JS2 TreeGrid.
    </div>
}

@section Description{
    <div id="description">
        <p>
            Custom toolbar items can be added by defining the toolbar as a collection of ItemModels.
            Actions for this customized toolbar items are defined in the toolbarClick event.
        </p>
        <p>
            In this sample, rendered the custom template element <code>Quick Filter</code> along with predefined
            toolbar items ExpandAll and CollapseAll.
            While click on the <code>Quick Filter</code> button the column "Task Name" is filtered with the value "Testing".
        </p>
        <p>
            More information on the Toolbar Template can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/tree-grid/tool-bar#custom-toolbar-items" aria-label="Navigate to the documentation for Custom toolbar items in ASP.NET Core TreeGrid control">documentation section</a>.
        </p>
    </div>


}

@*custom code end*@
@section Title{
    <title>ASP.NET Core Tree Grid Toolbar Template Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Toolbar Template in ASP.NET Core Tree Grid Control</h1>
}
