@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2

@section ControlsSection{
    <link href="~/styles/Grid/style.css" rel="stylesheet" />

    <div class="control-section" role="grid" aria-label="TreeGrid Control section">
        <div id="default" style="padding-bottom: 18px;">
            <h4 style="display: inline-block; font-size: 14px;">Feed Delay:</h4>
            <ejs-numerictextbox id="numeric" format="N0" value="1000" min="10" max="5000" step="1" Type="text" width="150px"
                                style="margin-left: 7px;"></ejs-numerictextbox>
            <ejs-button id="updatebtn" content="Start Data Update" style="margin-left: 10px;"></ejs-button>
            <ejs-button id="clearbtn" content="Stop Data Update" style="margin-left: 10px;"></ejs-button>
        </div>
        <ejs-treegrid id="LiveData" dataSource="@TreeLiveData.GetTreeLiveDatas()" height="350" enableHover="false" load="load" childMapping="subTasks"
                      treeColumnIndex="1" queryCellInfo="queryCellInfo" allowSelection="false">
            <e-treegrid-columns>
                <e-treegrid-column field="Id" headerText="ID" isPrimaryKey="true" visible="false" textAlign="Right"
                                   width="140"></e-treegrid-column>
                <e-treegrid-column field="IndexFunds" headerText="Index Funds" width="200"></e-treegrid-column>
                <e-treegrid-column field="Ltp" headerText="Last Traded Price" format="C2" width="150"></e-treegrid-column>
                <e-treegrid-column field="Change" headerText="Change" format="C2" width="100"></e-treegrid-column>
                <e-treegrid-column field="PercentageChange" headerText="% Change" width="110"
                                   format="N0"></e-treegrid-column>
                <e-treegrid-column field="Open" headerText="Open Price" width="150"></e-treegrid-column>
                <e-treegrid-column field="High" headerText="High Price" width="170"></e-treegrid-column>
                <e-treegrid-column field="Low" headerText="Low Price" width="150"></e-treegrid-column>
                <e-treegrid-column field="WeekHigh" headerText="52W H" width="130"></e-treegrid-column>
                <e-treegrid-column field="WeekLow" headerText="52W L" width="130"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>
        <br />
        <div>
            <p>
                <b>
                    Disclaimer :
                </b>The index fund data showcased in this sample is for demonstration purposes only and does not reflect
                actual or
                real-time data.
            </p>
        </div>
    </div>

    <script type="text/javascript">
        function load(args) {
            this.grid.on('data-ready', function () {
                document.getElementById('updatebtn').click();
            });
        }
        var isDataBound = false;
        function queryCellInfo(args) {
            if (args.column.field === 'Ltp') {
                if (args.data.Ltp < 3000) {
                    args.cell.classList.remove('e-increase');
                    args.cell.classList.add('e-decrease');
                } else if (args.data.Ltp > 3000) {
                    args.cell.classList.remove('e-decrease');
                    args.cell.classList.add('e-increase');
                }
            } else if (args.column.field === 'PercentageChange') {
                if (args.data.PercentageChange < 0) {
                    updateCellDetails(args.cell, 'below-0');
                } else {
                    updateCellDetails(args.cell, 'above-0');
                }
            } else if (args.column.field === 'Change') {
                if (args.data.Change < 0) {
                    updateCellDetails(args.cell, 'below-0');
                } else {
                    updateCellDetails(args.cell, 'above-0');
                }
            } else if (args.column.field === 'IndexFunds' && args.data.hasChildRecords) {
                args.cell.getElementsByClassName('e-treecell')[0].classList.add('e-parent');
            }
        }
        isDataBound = false;
        function updateCellDetails(cell, className) {
            var div = document.createElement('div');
            var span1 = document.createElement('span');
            span1.classList.add('rowcell-left');
            div.classList.add(className);
            span1.innerHTML = cell.innerHTML;
            cell.innerHTML = '';
            div.appendChild(span1);
            cell.appendChild(div);
        }
        var timerID;
        document.getElementById('updatebtn').onclick = function () {
            var updateButton = document.getElementById("updatebtn").ej2_instances[0];
            var feedDelayInput = document.getElementById("numeric").ej2_instances[0];
            var clearButton = document.getElementById("clearbtn").ej2_instances[0];
            if (!timerID) {
                updateButton.disabled = true;
                feedDelayInput.enabled = false;
                clearButton.disabled = false;
                timerID = setInterval(
                    updateCellValues,
                    parseInt(feedDelayInput.value)
                );
            }
        };
        document.getElementById('clearbtn').onclick = function () {
            var updateButton = document.getElementById("updatebtn").ej2_instances[0];
            var feedDelayInput = document.getElementById("numeric").ej2_instances[0];
            var clearButton = document.getElementById("clearbtn").ej2_instances[0];
            if (timerID) {
                updateButton.disabled = false;
                feedDelayInput.enabled = true;
                clearButton.disabled = true;
                clearInterval(timerID);
                timerID = undefined;
            }
        };
        function updateCellValues() {
            var oldValue;
            var treegrid = document.getElementById("LiveData").ej2_instances[0];
            for (var i = 0; i < treegrid.grid.currentViewData.length; i++) {
                if (treegrid.grid.currentViewData[i] === undefined) {
                    return;
                }
                var num = Math.floor(Math.random() * 40) + 1;
                num *= Math.floor(Math.random() * 2) === 1 ? 1 : -1;
                if (i % 2 === 0) {
                    num = num * 0.25;
                } else if (i % 3 === 0) {
                    num = num * 0.83;
                } else if (i % 5 === 0) {
                    num = num * 0.79;
                } else if (i % 4 === 0) {
                    num = num * 0.42;
                } else {
                    num = num * 0.51;
                }
                isDataBound = true;
                var maxChange = 2 - treegrid.grid.currentViewData[i].Change;
                var minChange = -2 - treegrid.grid.currentViewData[i].Change;
                var newChange = Math.max(Math.min(num, maxChange), minChange);
                treegrid.grid.setCellValue(
                    treegrid.grid.currentViewData[i].Id,
                    'Change',
                    parseFloat(newChange.toFixed(2))
                );
                isDataBound = true;
                var newPercentageChange;
                if (treegrid.grid.currentViewData[i].IndexFunds === "NIFTY 50") {
                    newPercentageChange = Math.max(Math.min(newChange, 2), -2);
                } else if (treegrid.grid.currentViewData[i].IndexFunds === "NIFTY BANK") {
                    newPercentageChange = Math.max(Math.min(newChange, 4), -4);
                } else {
                    var maxPercentageChange = 2 - treegrid.grid.currentViewData[i].PercentageChange;
                    var minPercentageChange = -2 - treegrid.grid.currentViewData[i].PercentageChange;
                    newPercentageChange = Math.max(Math.min(newChange, maxPercentageChange), minPercentageChange);
                }
                treegrid.grid.setCellValue(
                    treegrid.grid.currentViewData[i].Id,
                    'PercentageChange',
                    parseFloat(newPercentageChange.toFixed(2))
                );
                isDataBound = true;
                var val = treegrid.grid.currentViewData[i].Ltp + newPercentageChange;
                treegrid.grid.setCellValue(treegrid.grid.currentViewData[i].Id, 'Ltp', val)
            }
        }
    </script>

    <style>
        .fluent .e-treegrid .e-rowcell.e-increase,
        .bootstrap5 .e-treegrid .e-rowcell.e-increase,
        .tailwind .e-treegrid .e-rowcell.e-increase,
        .material .e-treegrid .e-rowcell.e-increase,
        .fabric .e-treegrid .e-rowcell.e-increase,
        .bootstrap4 .e-treegrid .e-rowcell.e-increase,
        .bootstrap .e-treegrid .e-rowcell.e-increase,
        .highcontrast .e-treegrid .e-rowcell.e-increase,
        .fluent .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5 .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .material .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4 .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-treegrid .e-rowcell.e-increase,
        .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #DFFFE2;
            color: #00A653;
        }

        .fluent-dark .e-treegrid .e-rowcell.e-increase,
        .bootstrap5-dark .e-treegrid .e-rowcell.e-increase,
        .tailwind-dark .e-treegrid .e-rowcell.e-increase,
        .material-dark .e-treegrid .e-rowcell.e-increase,
        .fabric-dark .e-treegrid .e-rowcell.e-increase,
        .bootstrap-dark .e-treegrid .e-rowcell.e-increase,
        .fluent-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #315C35;
            color: #38FF9C;
        }

        .material3-dark .e-treegrid .e-rowcell.e-increase,
        .material3-dark .e-treegrid .e-rowcell.e-increase:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #143E17;
            color: #8EDA94;
        }

        .fluent .e-treegrid .e-rowcell.e-decrease,
        .bootstrap5 .e-treegrid .e-rowcell.e-decrease,
        .tailwind .e-treegrid .e-rowcell.e-decrease,
        .material .e-treegrid .e-rowcell.e-decrease,
        .fabric .e-treegrid .e-rowcell.e-decrease,
        .bootstrap4 .e-treegrid .e-rowcell.e-decrease,
        .bootstrap .e-treegrid .e-rowcell.e-decrease,
        .highcontrast .e-treegrid .e-rowcell.e-decrease,
        .fluent .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5 .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .material .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap4 .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .highcontrast .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .e-treegrid .e-rowcell.e-decrease,
        .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #FFEBE9;
            color: #FF3740;
        }

        .fluent-dark .e-treegrid .e-rowcell.e-decrease,
        .bootstrap5-dark .e-treegrid .e-rowcell.e-decrease,
        .tailwind-dark .e-treegrid .e-rowcell.e-decrease,
        .material-dark .e-treegrid .e-rowcell.e-decrease,
        .fabric-dark .e-treegrid .e-rowcell.e-decrease,
        .bootstrap-dark .e-treegrid .e-rowcell.e-decrease,
        .fluent-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap5-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .tailwind-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .material-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .fabric-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd),
        .bootstrap-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #55241E;
            color: #FF9CA0;
        }

        .material3-dark .e-treegrid .e-rowcell.e-decrease,
        .material3-dark .e-treegrid .e-rowcell.e-decrease:not(.e-editedbatchcell):not(.e-updatedtd) {
            background-color: #3A1618;
            color: #FF7B81;
        }

        .e-treegrid .e-headercelldiv {
            height: 43px;
            line-height: 39px;
        }

        .fluent .above-0,
        .bootstrap5 .above-0,
        .tailwind .above-0,
        .material .above-0,
        .fabric .above-0,
        .bootstrap4 .above-0,
        .bootstrap .above-0,
        .highcontrast .above-0,
        .fluent .e-rowcell .e-icons.above-0,
        .bootstrap5 .e-rowcell .e-icons.above-0,
        .tailwind .e-rowcell .e-icons.above-0,
        .material .e-rowcell .e-icons.above-0,
        .fabric .e-rowcell .e-icons.above-0,
        .bootstrap4 .e-rowcell .e-icons.above-0,
        .bootstrap .e-rowcell .e-icons.above-0,
        .highcontrast .e-rowcell .e-icons.above-0,
        .above-0,
        .e-rowcell .e-icons.above-0 {
            color: #00A653;
        }

        .fluent-dark .above-0,
        .bootstrap5-dark .above-0,
        .tailwind-dark .above-0,
        .material-dark .above-0,
        .fabric-dark .above-0,
        .bootstrap-dark .above-0,
        .fluent-dark .e-rowcell .e-icons.above-0,
        .bootstrap5-dark .e-rowcell .e-icons.above-0,
        .tailwind-dark .e-rowcell .e-icons.above-0,
        .material-dark .e-rowcell .e-icons.above-0,
        .fabric-dark .e-rowcell .e-icons.above-0,
        .bootstrap-dark .e-rowcell .e-icons.above-0 {
            color: #38FF9C;
        }

        .fluent .below-0,
        .bootstrap5 .below-0,
        .tailwind .below-0,
        .material .below-0,
        .fabric .below-0,
        .bootstrap4 .below-0,
        .bootstrap .below-0,
        .highcontrast .below-0,
        .fluent .e-rowcell .e-icons.below-0,
        .bootstrap5 .e-rowcell .e-icons.below-0,
        .tailwind .e-rowcell .e-icons.below-0,
        .material .e-rowcell .e-icons.below-0,
        .fabric .e-rowcell .e-icons.below-0,
        .bootstrap4 .e-rowcell .e-icons.below-0,
        .bootstrap .e-rowcell .e-icons.below-0,
        .highcontrast .e-rowcell .e-icons.below-0,
        .below-0,
        .e-rowcell .e-icons.below-0 {
            color: #FF3740;
        }

        .fluent-dark .below-0,
        .bootstrap5-dark .below-0,
        .tailwind-dark .below-0,
        .material-dark .below-0,
        .fabric-dark .below-0,
        .bootstrap-dark .below-0,
        .fluent-dark .e-rowcell .e-icons.below-0,
        .bootstrap5-dark .e-rowcell .e-icons.below-0,
        .tailwind-dark .e-rowcell .e-icons.below-0,
        .material-dark .e-rowcell .e-icons.below-0,
        .fabric-dark .e-rowcell .e-icons.below-0,
        .bootstrap-dark .e-rowcell .e-icons.below-0 {
            color: #FF9CA0;
        }

        .fluent .e-treegrid .e-treecell.e-parent,
        .fabric .e-treegrid .e-treecell.e-parent,
        .bootstrap4 .e-treegrid .e-treecell.e-parent,
        .bootstrap .e-treegrid .e-treecell.e-parent,
        .tailwind .e-treegrid .e-treecell.e-parent,
        .material .e-treegrid .e-treecell.e-parent,
        .bootstrap5 .e-treegrid .e-treecell.e-parent {
            color: #0278d7;
        }

        .fluent-dark .e-treegrid .e-treecell.e-parent,
        .bootstrap5-dark .e-treegrid .e-treecell.e-parent {
            color: #0d6efd;
        }

        .tailwind-dark .e-treegrid .e-treecell.e-parent {
            color: rgb(34, 211, 238);
        }

        .material-dark .e-treegrid .e-treecell.e-parent {
            color: #56a4fd;
        }

        .material3 .e-treegrid .e-treecell.e-parent {
            color: #6750a4;
        }

        .material3-dark .e-treegrid .e-treecell.e-parent {
            color: rgb(208, 188, 255);
        }

        .fabric-dark .e-treegrid .e-treecell.e-parent {
            color: #0074cc;
        }

        .bootstrap-dark .e-treegrid .e-treecell.e-parent {
            color: #0070f0;
        }

        .highcontrast .e-treegrid .e-treecell.e-parent {
            color: #ffd939;
        }

        .side-space {
            padding: 0 5px;
        }
    </style>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how frequently Tree Grid cells are updated in real-time data at a set interval.
        </p>
    </div>
}

@section Meta{
    <meta name="description"
          content="This example demonstrates how frequently the Grid cell is updated with real-time data in ASP.NET Core Data Grid control. Explore here for more details." />
}

@section Description{
    <div id="description">
        <p>
            The updating of Tree Grid cells can be done without any performance lagging by using the
            <a target="_blank" href="https://ej2.syncfusion.com/documentation/api/treegrid/#setcellvalue" aria-label="Navigate to the setCellValue method reference for ASP.NET Core TreeGrid control">
                setCellValue
            </a>
            method.
            The style of Tree Grid cells can be customized using the <a target="_blank"
                                                                        href="https://ej2.syncfusion.com/documentation/api/treegrid/#querycellinfo" aria-label="Navigate to the queryCellInfo event reference for ASP.NET Core TreeGrid control">queryCellInfo</a> event.
        </p>
        <p>In this demo,</p>
        <ul>
            <li>
                Clicking the start update button triggers automatic updates of Tree Grid cells at the interval set in the
                feed
                delay
                text box which is a milliseconds format.
            </li>
            <li> Clicking the stop update button will halt the automatic updating of Tree Grid cells.</li>
        </ul>
    </div>
}

@section Title{
    <title>ASP.NET Core Tree Grid Live Data Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Live Data in ASP.NET Core Tree Grid Control</h1>
}

