@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2
@model EJ2CoreSampleBrowser.Pages.TreeGrid.GridLinesModel

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div class="control-section">
                <ejs-treegrid id="TreeGrid" dataSource="@TreeData.GetDefaultData()" allowPaging="true" childMapping="Children" height="350" treeColumnIndex="1" gridLines="Vertical">
                    <e-treegrid-pagesettings pageSize="10"></e-treegrid-pagesettings>
                    <e-treegrid-columns>
                        <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="80"></e-treegrid-column>
                        <e-treegrid-column field="TaskName" headerText="Task Name" width="200"></e-treegrid-column>
                        <e-treegrid-column field="StartDate" headerText="Start Date" textAlign="Right" format="yMd" type="date" width="100"></e-treegrid-column>
                        <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="90"></e-treegrid-column>
                    </e-treegrid-columns>
                </ejs-treegrid>
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr>
                <td style="width: 30%; padding-right: 10px;">
                    <div style="padding-top: 7px">
                        Grid Lines
                    </div>
                </td>
                <td style="width: 100%;">
                    <ejs-dropdownlist id="lines" dataSource="@Model.DropData" change="onChange" index="0" width="125px">
                        <e-dropdownlist-fields text="mode" value="id"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                </td>
            </tr>
        </table>
    </div>
    <script>
        function onChange(e) {
            var treegrid = document.getElementById("TreeGrid").ej2_instances[0];
            treegrid.gridLines = e.value;
        }

    </script>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the GridLines in ASP.NET Core Tree Grid control. Explore here for more details." />
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates visibility of the treegrid lines that separates the rows and columns.
            In this sample, you can change the gridline from the properties panel.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The <code>gridLines</code> property is used to control the line visibility that separates the rows and columns.
            TreeGrid allows us to display the following grid lines,
        </p>
        <ul>
            <li><code>Default</code> - Shows the Horizontal line.</li>
            <li><code>None</code> - Shows no line.</li>
            <li><code>Both</code> - Shows both Horizontal and Vertical lines.</li>
            <li><code>Horizontal</code> - Shows the Horizontal line.</li>
            <li><code>Vertical</code> - Shows the Vertical line.</li>
        </ul>
        <p>
            In this demo, you can modify the visibility of gridlines by selecting values in the dropdown.
        </p>
    </div>
}

@*custom code end*@
@section Title{
    <title>ASP.NET Core Tree Grid GridLines Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of GridLines in ASP.NET Core Tree Grid Control</h1>
}
