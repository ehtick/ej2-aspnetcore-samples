@page

@using Syncfusion.EJ2
@{
    var dataManager = new DataManager() { Url = "http://localhost:62928/api/schedule", Adaptor = "WebApiAdaptor", CrossDomain = true };
}
@section ControlsSection{
    <div class="control-section">
        <ejs-schedule id="schedule" height="650" readonly="true" currentView="Month">
            <e-schedule-eventsettings dataSource="dataManager">
            </e-schedule-eventsettings>
        </ejs-schedule>
    </div>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Remote Data in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases the way of binding remote services to Scheduler component. Here, the DataManager is used to bind the
            remote data with Scheduler.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Scheduler can be bound to remote services by assigning the
            <code>dataSource</code> property with the instance of
            <code><a target="_blank" class="code" href="https://ej2.syncfusion.com/documentation/api/data/dataManager/" aria-label="Navigate to DataManager API in JavaScript DataManager API control">DataManager</a></code>.
        </p>
        <p>
            The DataManager here acts as an interface between the service endpoint and the Scheduler, and will require the below minimal
            information to interact with the service endpoint properly.
        </p>
        <ul>
            <li>
                <code>url</code> - Defines the service endpoint from where the data needs to be fetched
            </li>
            <li>
                <code>adaptor</code> - Defines the adaptor option. By default,
                <code>ODataAdaptor</code> is used for remote binding.
            </li>
        </ul>
        <p>
            Adaptor is responsible for processing response and request from/to the service endpoint.
            <code>@@syncfusion/ejs-data</code> package provides some predefined adaptors which are designed to interact with particular service endpoints. They
            are as follows,
        </p>
        <ul>
            <li>
                <code>UrlAdaptor</code> - Use this to interact with any remote services. This is the base adaptor for all the remote based adaptors.
            </li>
            <li>
                <code>ODataAdaptor</code> - Use this to interact with OData endpoints.
            </li>
            <li>
                <code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.
            </li>
            <li>
                <code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.
            </li>
            <li>
                <code>WebMethodAdaptor</code> - Use this to interact with web methods.
            </li>
        </ul>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Remote Data Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Remote Data in ASP.NET Core Scheduler Control</h1>
                }