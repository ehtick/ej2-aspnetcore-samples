@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var appointments = new ScheduleData().GetScheduleData();
}

@section ControlsSection{
    @{ string template = "<div class='date - text'>${getDateHeaderText(data.date)}</div>${getWeather(data.date)}";}
    <div class="control-section">
        <ejs-schedule id="schedule" cssClass="schedule-date-header-template" width="100%" height="650px" selectedDate="new DateTime(DateTime.Today.Year, 1, 10)" dateHeaderTemplate="@template" renderCell="onRenderCell" eventRendered="onEventRendered">
            <e-schedule-views>
                <e-schedule-view option="Day"></e-schedule-view>
                <e-schedule-view option="Week"></e-schedule-view>
                <e-schedule-view option="WorkWeek"></e-schedule-view>
                <e-schedule-view option="Month"></e-schedule-view>
                <e-schedule-view option="TimelineMonth"></e-schedule-view>
            </e-schedule-views>
            <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
        </ejs-schedule>
    </div>

    <style>
        .schedule-date-header-template.e-schedule .e-vertical-view .e-header-cells,
        .schedule-date-header-template.e-schedule .e-timeline-month-view .e-header-cells {
            padding: 0;
            text-align: center !important;
        }

        .schedule-date-header-template.e-schedule .date-text {
            font-size: 14px;
        }

        .schedule-date-header-template.e-schedule.e-device .date-text {
            font-size: 12px;
        }

        .schedule-date-header-template.e-schedule .weather-image {
            width: 20px;
            height: 20px;
            background-position: center center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .schedule-date-header-template.e-schedule .weather-text {
            font-size: 11px;
        }

        .schedule-date-header-template.e-schedule .e-month-view .weather-image {
            float: right;
            margin: -20px 2px 0 0;
            width: 20px;
            height: 20px;
        }

        .schedule-date-header-template.e-schedule.e-rtl .e-month-view .weather-image {
            float: left;
        }
    </style>
    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        var instance = new ej.base.Internationalization();
        window.getDateHeaderText = function (value) {
            return instance.formatDate(value, { skeleton: 'Ed' });
        };
        var getWeather = function (value) {
            switch (value.getDay()) {
                case 0:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-clear.svg")" alt="Weather Picture"/><div class="weather-text">25&deg;C</div>';
                case 1:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-clouds.svg")" alt="Weather Picture"/><div class="weather-text">18&deg;C</div>';
                case 2:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-rain.svg")" alt="Weather Picture"/><div class="weather-text">10&deg;C</div>';
                case 3:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-clouds.svg")" alt="Weather Picture"/><div class="weather-text">16&deg;C</div>';
                case 4:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-rain.svg")" alt="Weather Picture"/><div class="weather-text">8&deg;C</div>';
                case 5:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-clear.svg")" alt="Weather Picture"/><div class="weather-text">27&deg;C</div>';
                case 6:
                    return '<img class="weather-image" src="@Url.Content("~/css/schedule/images/weather-clouds.svg")" alt="Weather Picture"/><div class="weather-text">17&deg;C</div>';
                default:
                    return null;
            }
        };
        window.getWeather = getWeather;
        onRenderCell = function (args) {
            if (this.currentView === 'Month' && args.elementType === 'monthCells') {
                var ele = document.createElement('div');
                ele.innerHTML = getWeather(args.date);
                (args.element).appendChild(ele.firstChild);
            }
        };
        function onEventRendered(args) {
            applyCategoryColor(args, this.currentView);
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Date Header in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo depicts the way to add images and custom text to the date header bar by making use of the date header template
            option.
        </p>
    </div>

}

@section Description{
    <div id="description">
        <p>
            In this demo, the <code>dateHeaderTemplate</code> option is used to customize the date header cells of day, week and
            workweek views. In month view, the date header is not applicable and therefore the same customizations can be added
            beside the date text in the month cells by making use of the <code>renderCell</code> event.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Date Header Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Date Header in ASP.NET Core Scheduler Control</h1>
                }
