@page
@model EJ2CoreSampleBrowser.Pages.Schedule.RecurrencePopulateRule

@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper recurrence-editor-wrap">
            <div style="padding-bottom:15px;">
                <ejs-dropdownlist id="scheduleview" dataSource="@Model.data" change="onRuleChange" popupHeight="200" popupWidth="auto" index="2">
                    <e-dropdownlist-fields text="rule" value="rule"></e-dropdownlist-fields>
                </ejs-dropdownlist>
            </div>
            <div>
                <ejs-recurrenceeditor id="recurrence" value='("FREQ=DAILY;INTERVAL=2;COUNT=8")'></ejs-recurrenceeditor>
            </div>
        </div>
    </div>

    <style>
        .recurrence-editor-wrap {
            margin: 0 20%;
        }

        @@media (max-width: 580px) {
            .recurrence-editor-wrap {
                margin: 0 5%;
            }
        }
    </style>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var recObject = document.getElementById('recurrence').ej2_instances[0];
            recObject.setRecurrenceRule('FREQ=DAILY;INTERVAL=2;COUNT=8');
        });
        function onRuleChange(e) {
            var recObject = document.getElementById('recurrence').ej2_instances[0];
            recObject.setRecurrenceRule((e.value).toString());
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Populate Rule in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases how to fill the recurrence editor fields with appropriate values based on the user-provided recurrence
            rule string.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this demo, the <code>setRecurrenceRule</code> method is used to populate the fields of recurrence editor based on the static rule options selected from the dropdown list.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Populate Rule Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Populate Rule in ASP.NET Core Scheduler Control</h1>
                }