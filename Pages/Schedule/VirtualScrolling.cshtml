@page
@model EJ2CoreSampleBrowser.Pages.Schedule.VirtualScrolling

@using Syncfusion.EJ2

@{
    var virtualDataSource = new VirtualScrolling().generateStaticEvents(new DateTime(DateTime.Today.Year, 4, 1), 300, 12);
    var resources = new VirtualScrolling().GenerateResourceData(1, 300);
    var resourceData = new string[] { "Resources" };
}

@section ControlsSection{
    <div class="col-lg-12 control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" cssClass="virtual-scroll" width="100%" height="650" selectedDate="new DateTime(DateTime.Today.Year, 4, 1)" currentView="TimelineMonth">
                <e-schedule-views>
                    <e-schedule-view option="TimelineMonth" eventTemplate="#timeline-event-template" allowVirtualScrolling="true"></e-schedule-view>
                    <e-schedule-view option="Month" eventTemplate="#timeline-event-template" allowVirtualScrolling="true"></e-schedule-view>
                </e-schedule-views>
                <e-schedule-group enableCompactView="false" resources="@resourceData"></e-schedule-group>
                <e-schedule-resources>
                    <e-schedule-resource field="ResourceId" dataSource="@resources" title="Resource" name="Resources" textField="Text" idField="Id" colorField="Color" allowMultiple="true"></e-schedule-resource>
                </e-schedule-resources>
                <e-schedule-eventsettings dataSource="@virtualDataSource"></e-schedule-eventsettings>
            </ejs-schedule>
        </div>
    </div>
    <style>
        .virtual-scroll.e-schedule .template-wrap .subject {
            padding: 10px 25px;
        }

        .virtual-scroll.e-schedule .e-month-view .template-wrap .subject {
            padding: 3px 10px;
        }

        .virtual-scroll.e-schedule .e-month-view .e-date-header-wrap table col,
        .virtual-scroll.e-schedule .e-month-view .e-work-cells {
            width: 46px;
        }

        .virtual-scroll.e-schedule .e-more-appointment-wrapper .template-wrap .subject {
            padding: 0 0 0 5px;
        }

        .virtual-scroll.e-schedule .template-wrap {
            width: 100%;
        }

        .virtual-scroll.e-schedule .e-timeline-month-view .e-resource-left-td {
            width: 150px;
        }
    </style>
    <script id="timeline-event-template" type="text/x-template">
        <div class='template-wrap' style='background:${PrimaryColor}'>
            <div class="subject" style='background:${SecondaryColor};'>${Subject}</div>
        </div>
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Virtual Scrolling in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This example illustrates how to dynamically load the resources and events as you scroll through the scheduler.
            All the events in this example are loaded at the initial rendering of scheduler, but the events in the visible
            area alone will be rendered. Here, the scheduler is made to dynamically load 300 resources along with the
            events count of 3600 (300 resources * 12 events).
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, the virtual scrolling option is enabled on timeline month and month views to load the large number of
            resources and its associated events. To enable the dynamic loading of events and resources in the
            Scheduler, set the <code>allowVirtualScrolling</code> property to <code>true</code> within the view-specific settings.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Virtual Scrolling Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Virtual Scrolling in ASP.NET Core Scheduler Control</h1>
                }