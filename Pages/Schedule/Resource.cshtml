@page
@using EJ2CoreSampleBrowser.Models
@model EJ2CoreSampleBrowser.Pages.Schedule.Resource

@{
    var scheduleResource = new ScheduleData().GetResourceSampleData();
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <ejs-schedule id="schedule" cssClass='schedule-resource' width='100%' height='650px' selectedDate="new DateTime(DateTime.Today.Year, 6, 6)">
                <e-schedule-eventsettings dataSource="@scheduleResource"></e-schedule-eventsettings>
                <e-schedule-resources>
                    <e-schedule-resource field="OwnerId" title="Owners" dataSource="@Model.ownerCollections" allowMultiple="true"
                                         name="Owners" textField="OwnerText" idField="OwnerId" colorField="Color">
                    </e-schedule-resource>
                </e-schedule-resources>
            </ejs-schedule>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Resources" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 100%">
                        <ejs-checkbox id="margaret" cssClass="margaret" label="Margaret" value="1" checked="true" change="onChange">
                        </ejs-checkbox>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 100%">
                        <ejs-checkbox id="robert" cssClass="robert" label="Robert" value="2" checked="true" change="onChange">
                        </ejs-checkbox>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 100%">
                        <ejs-checkbox id="laura" cssClass="laura" label="Laura" value="3" checked="true" change="onChange">
                        </ejs-checkbox>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    @*custom code start*@
    <style>
        .property-panel-content .e-checkbox-wrapper.margaret .e-frame {
            background-color: #ea7a57;
            border-color: transparent;
        }

        .property-panel-content .e-checkbox-wrapper.robert .e-frame {
            background-color: #df5286;
            border-color: transparent;
        }

        .property-panel-content .e-checkbox-wrapper.laura .e-frame {
            background-color: #865fcf;
            border-color: transparent;
        }
    </style>
    @*custom code end*@

    <script type="text/javascript">
        function onChange() {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var ownerOneObj = document.getElementById('margaret').ej2_instances[0];
            var ownerTwoObj = document.getElementById('robert').ej2_instances[0];
            var ownerThreeObj = document.getElementById('laura').ej2_instances[0];
            var predicate;
            var checkBoxes = [ownerOneObj, ownerTwoObj, ownerThreeObj];
            checkBoxes.forEach(function (checkBoxObj) {
                if (checkBoxObj.checked) {
                    if (predicate) {
                        predicate = predicate.or('OwnerId', 'equal', parseInt(checkBoxObj.value, 10));
                    } else {
                        predicate = new ej.data.Predicate('OwnerId', 'equal', parseInt(checkBoxObj.value, 10));
                    }
                }
            });
            scheduleObj.eventSettings.query = new ej.data.Query().where(predicate);
        }
    </script>

}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Resources in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates how to dynamically show or hide the appointments of resources on Scheduler based on the resource selection.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this example, the resource appointments are dynamically shown or hidden on the Scheduler, by passing the
            filtered event data of selected resources to the <code>query</code> option of the <code>eventSettings</code>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Resources Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Resources in ASP.NET Core Scheduler Control</h1>
                }