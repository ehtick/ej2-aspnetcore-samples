@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var appointments = new ScheduleData().GetRecurrenceData();
}
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" height="650" selectedDate="new DateTime(DateTime.Today.Year, 2, 20)" eventRendered="onEventRendered">
                <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
                <e-schedule-views>
                    <e-schedule-view option="Day"></e-schedule-view>
                    <e-schedule-view option="Week"></e-schedule-view>
                    <e-schedule-view option="Month"></e-schedule-view>
                </e-schedule-views>
            </ejs-schedule>
        </div>
    </div>

    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50%">
                    <td style="width: 100%">
                        <ejs-checkbox id="editFollowingEvents" change="onChange" checked="false" label="Enable Following Events"></ejs-checkbox>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
        function onChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.eventSettings.editFollowingEvents = args.checked;
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Recurring Events in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases the scheduler with recurring meetings handled by a top-level manager on a regular pattern.
        </p>
    </div>
}

@section Description{
    <div id='description'>
        <p>
            In this demo, the recurrence events are defined with different repeat patterns. It can be defined through
            <code>recurrenceRule</code> field which should accept the valid rule string following the
            <a target="_blank" href="https://tools.ietf.org/html/rfc5545#section-3.3.10" aria-label="Navigate to the documentation for Internet Calendaring and Scheduling Core Object Specification">iCalendar</a> specifications. The recurring events are differentiated from other events by a repeat marker added
            to the right-bottom of it. These events can repeat on daily, weekly, monthly or yearly basis.
        </p>
        <p>
            Here, the daily patterned events are depicted in blue color, weekly events are differentiated with green color, monthly events
            are depicted in orange color and the yearly event is depicted in the all-day section with another green shade for
            reference.
        </p>
        <p>
            Scheduler requires only the <code>startTime</code> and <code>endTime</code> fields as mandatory to be mapped from the dataSource. The Scheduler events can be categorized into 3 types based on its time range and all-day type.
        </p>
        <table style="width:100%">
            <tr>
                <th style="width:100px">
                    <strong>Event</strong>
                </th>
                <th>
                    <strong>Description</strong>
                </th>
            </tr>
            <tr>
                <td style="padding:4px 0;">Normal events</td>
                <td>
                    The events that has its start and end time duration on the same date.
                </td>
            </tr>
            <tr>
                <td style="padding:4px 0;">Spanned events</td>
                <td>
                    The events on which its start and end time spans over multiple days and usually displays together with all-day events.
                </td>
            </tr>
            <tr>
                <td style="padding:4px 0;">All-day events</td>
                <td>
                    The events that are defined as all-day in its event object by setting
                    <code>isAllDay</code> to true.
                </td>
            </tr>
        </table>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Recurring Events Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Recurring Events in ASP.NET Core Scheduler Control</h1>
                }