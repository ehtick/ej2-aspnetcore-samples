@page
@model EJ2CoreSampleBrowser.Pages.Schedule.ViewBasedSettings

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2
@{
    string agendaTemplate = "<div><div class='subject'>${Subject}</div><div ${if(Description !== null && Description !== undefined)}<div class='group'>${Description}</div>${/if}<div class='location'>${getTimeString(data.StartTime)}${if(City !== null && City !== undefined)}, ${City}${/if}</div></div>";
    string monthEventTemplate = "<div class='e-subject'>${Subject}</div>";
    String[] Group = new String[] { "Owners" };
    var appointments = new ScheduleData().GetFifaEventsData();
}
@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper schedule-wrapper">
            <ejs-schedule id="schedule" width="100%" height="650" currentView="Month" selectedDate="new DateTime(DateTime.Today.Year, 6, 20)">
                <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
                <e-schedule-resources>
                    <e-schedule-resource field="GroupId" title="Owner" name="Owners" dataSource="@Model.Resources" textField="GroupText" idField="GroupId" colorField="GroupColor"></e-schedule-resource>
                </e-schedule-resources>
                <e-schedule-views>
                    <e-schedule-view option="Day" startHour="07:00" endHour="18:00"></e-schedule-view>
                    <e-schedule-view option="Week" startHour="09:00" endHour="19:00" showWeekend="false">
                        <e-schedule-view-timescale interval="60" slotCount="4"></e-schedule-view-timescale>
                    </e-schedule-view>
                    <e-schedule-view option="Month" eventTemplate="@monthEventTemplate">
                        <e-schedule-view-group resources="@Group"></e-schedule-view-group>
                    </e-schedule-view>
                    <e-schedule-view option="Agenda" eventTemplate="@agendaTemplate"></e-schedule-view>
                </e-schedule-views>
            </ejs-schedule>
        </div>
    </div>

    <style>
        .e-schedule .e-agenda-view .e-appointment .subject {
            font-size: 14px;
        }

        .e-schedule .e-agenda-view .e-appointment .group {
            font-size: 12px;
            font-weight: 500;
        }

        .e-schedule .e-month-view .e-appointment .e-appointment-details {
            padding: 1px;
            padding-left: 3px;
        }

        .e-schedule .e-agenda-view .e-appointment .location {
            font-size: 12px;
        }

        .e-schedule .e-date-header-wrap .e-resource-cells {
            font-weight: 500;
        }
    </style>
    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        var instance = new ej.base.Internationalization();
        window.getTimeString = function (value) {
            return instance.formatDate(value, { skeleton: 'Hm' });
        };
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Individual View Settings in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo illustrates how to customize each view with specific configurations like applying event template on agenda view,
            setting different start/end hour to day and week views and enabling grouping in month view. It also shows how to
            hide the weekend days and to set different time intervals on week view.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this demo, the
            <code>views</code> property is defined to accept the array of view options and therefore for each view, it is possible to set different
            configurations. In day view, the
            <code>startHour</code> is set to 7 and
            <code>endHour</code> set to 18 whereas in week view, the same is set as 9 and 19 respectively. Also, the
            <code>showWeekend</code> property is set to false only on week view along with different timescale interval. The customized template is applied
            to the events on Agenda view and on month view, the grouping functionality is enabled by setting
            <code>group</code> property.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Individual View Settings Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Individual View Settings in ASP.NET Core Scheduler Control</h1>
                }