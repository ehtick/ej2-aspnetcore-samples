@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var appointments = new ScheduleEvents().GetAppointmentData();
}
@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" height="650px" selectedDate="new DateTime(DateTime.Today.Year, 1, 10)">
                <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
            </ejs-schedule>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" class="property-panel-table" style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 100%">
                        <div class='datepicker-control-section'>
                            <ejs-datepicker id="datepicker" value="new DateTime(DateTime.Today.Year, 1, 10)" ShowClearButton="false" placeholder="Current Date" floatLabelType="Always" change="onChange"></ejs-datepicker>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script type="text/javascript">
        function onChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.selectedDate = args.value;
            scheduleObj.dataBind();
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo showcases how the flat Scheduler looks like with its default set of minimal configurations. Here, some
            of the documentary shows are displayed as events parallel to its relevant telecast timings. The show names are
            given as event's subject and simply notified of the start and end of it.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The ASP.NET Core Scheduler, a.k.a. event calendar, facilitates almost all calendar features, thus allowing users
            to manage their time efficiently. It features easy resource scheduling, appointments rescheduling through
            editor pop-ups, drag and drop, and a resizing action. It includes wide variety of view modes with unique
            configuration options for each view. The available view modes are listed below, out of which the <code>Week</code>
            view is set as active.
        </p>
        <ul>
            <li>Day</li>
            <li>Week</li>
            <li>Work Week</li>
            <li>Month</li>
            <li>Agenda</li>
            <li>Month Agenda</li>
            <li>Timeline Day</li>
            <li>Timeline Week</li>
            <li>Timeline Work Week</li>
            <li>Timeline Month</li>
        </ul>
        <p>
            To navigate between views and dates, the navigation options are available at the Scheduler header bar and the
            active view option is highlighted by default. The date range of the active view will also be displayed in the
            header bar, clicking on which will open a calendar popup for ease of desired date selection.
        </p>
        <p>
            <strong>Touch actions on Mobile mode</strong>
        </p>
        <table style="width:100%">
            <tr>
                <th style="width:100px">
                    <strong>Action</strong>
                </th>
                <th>
                    <strong>Description</strong>
                </th>
            </tr>
            <tr>
                <td style="vertical-align: top;padding:4px 0">Single Tap</td>
                <td>
                    <ol style="padding-left:12px;">
                        <li>Single tapping on events, opens the popup showing event information</li>
                        <li>Single tapping on cells, will display a “+” icon on the cell. Again tapping on it will open the new event editor.</li>
                    </ol>
                </td>
            </tr>
            <tr>
                <td style="vertical-align: top;padding: 4px 0;">Tap hold </td>
                <td>
                    <ol style="padding-left:12px;">
                        <li>Tap holding on cells, opens the new event editor. </li>
                        <li>
                            Tap holding on events, opens a small popup at the top holding the options to edit or delete and
                            also displays the selected event's subject. As a continuation of this action, if user keeps on
                            single tapping on other events, it will allow the multiple event selection. Also, the previous
                            popup remains in opened state, showing the count of the number of events selected.
                        </li>
                        <li>Tap hold the event and try moving it over the scheduler to enable drag and drop action.</li>
                    </ol>
                </td>
            </tr>
        </table>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core Scheduler Control</h1>
                }