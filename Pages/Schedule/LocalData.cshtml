@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var appointments = new ScheduleData().GetZooEventData();
}
@section ControlsSection{
    <div class="control-section">
        <ejs-schedule id="schedule" height="650" selectedDate="new DateTime(DateTime.Today.Year, 2, 15)" eventRendered="onEventRendered">
            <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
        </ejs-schedule>
    </div>

    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var categoryColor = args.data.CategoryColor;
            if (!args.element || !categoryColor) {
                return;
            }
            if (scheduleObj.currentView === 'Agenda') {
                (args.element.firstChild).style.borderLeftColor = categoryColor;
            } else {
                args.element.style.backgroundColor = categoryColor;
            }
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Local Data in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo shows the way of binding an array of JavaScript objects (local JSON datasource) to Scheduler.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            Scheduler can be bound either to local or remote data services which will load the data by default on demand to reduce the
            data transfer and load time. In this sample, the
            <code>dataSource</code> property available within the
            <code>eventSettings</code> needs to be assigned with the valid local JSON data.
        </p>
        <p>The <code>eventRendered</code> event is used to customize the events. In this sample, background color of the event is changed based on the custom field 'CategoryColor'</p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Local Data Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Local Data in ASP.NET Core Scheduler Control</h1>
                }