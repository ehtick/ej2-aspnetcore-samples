@page
@model EJ2CoreSampleBrowser.Pages.Schedule.GroupByDate

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var scheduleResourceData = new ScheduleData().GetResourceData();
    string[] resources = new string[] { "Owners" };
}

@section ControlsSection{
    <div class="control-section">
        <div class="content-wrapper">
            <div class="col-lg-12" style="padding-top:15px">
            <ejs-checkbox id="hideNonWorkingDays" change="onChange" checked="true" label="Hide non workingdays"></ejs-checkbox>
            </div>
            <div class="col-lg-12" style="padding-top:15px">
            <ejs-schedule id="schedule" width="100%" height="650px" selectedDate="new DateTime(DateTime.Today.Year, 4, 6)">
                <e-schedule-group byDate="true" hideNonWorkingDays="true" resources="@resources"></e-schedule-group>
                <e-schedule-resources>
                    <e-schedule-resource dataSource="@Model.owners" field="TaskId" title="Assignee" name="Owners" textField="text" idField="id" colorField="color" workDaysField="workDays"  allowMultiple="true"></e-schedule-resource>
                </e-schedule-resources>
                <e-schedule-views>
                    <e-schedule-view option="Day"></e-schedule-view>
                    <e-schedule-view option="Week"></e-schedule-view>
                    <e-schedule-view option="Month"></e-schedule-view>
                    <e-schedule-view option="Agenda"></e-schedule-view>
                </e-schedule-views>
                <e-schedule-eventsettings dataSource="@scheduleResourceData">
                    <e-eventsettings-fields>
                        <e-field-subject name="Subject" title="Task"></e-field-subject>
                        <e-field-location name="Location" title="Project Name"></e-field-location>
                        <e-field-description name="Description" title="Comments"></e-field-description>
                    </e-eventsettings-fields>
                </e-schedule-eventsettings>
            </ejs-schedule>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function onChange(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            if(args.checked) {
                scheduleObj.group.hideNonWorkingDays = true;
            }
            else {
                scheduleObj.group.hideNonWorkingDays = false;
            }
        }
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Date-wise Grouping in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This demo illustrates the daily tasks of two employees grouped by date-wise.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this demo, there are 2 resources defined namely
            <strong>Alice</strong> and
            <strong>Smith</strong> under the resource
            <code>dataSource</code>. The Scheduler can be switched to group by date, by setting
            <code>true</code> to the option
            <code>byDate</code> within the
            <code>group</code> property.
        </p>
        <p>
            The different work days for the each resources are provided by using the 
            <code>workDaysField</code> property and the Scheduler
            will be displayed the provided dates alone when 
            <code>hideNonWorkingDays</code> property set as <code>true</code>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Date-wise Grouping Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Date-wise Grouping in ASP.NET Core Scheduler Control</h1>
                }