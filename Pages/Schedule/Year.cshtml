@page
@model EJ2CoreSampleBrowser.Pages.Schedule.Year

@using Syncfusion.EJ2

@{
    var generateEvent = new Year().GenerateEvents();
    var resourcesData = new string[] { "Categories" };
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" cssClass="year-view" width="100%" height="650px" firstMonthOfYear="0" monthsCount="12">
                <e-schedule-views>
                    <e-schedule-view option="Year" isSelected="true"></e-schedule-view>
                    <e-schedule-view option="TimelineYear" displayName="Horizontal Timeline Year"></e-schedule-view>
                    <e-schedule-view option="TimelineYear" displayName="Vertical Timeline Year" orientation="Vertical">
                        <e-schedule-view-group resources="@resourcesData"></e-schedule-view-group>
                    </e-schedule-view>
                </e-schedule-views>
                <e-schedule-resources>
                    <e-schedule-resource dataSource="@Model.categories" field="TaskId" title="Category" name="Categories" textField="text" idField="id" groupIDField='groupId' colorField="color" allowMultiple="true"></e-schedule-resource>
                </e-schedule-resources>
                <e-schedule-eventsettings dataSource="@generateEvent">
                </e-schedule-eventsettings>
            </ejs-schedule>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id='property' title='Properties'>
            <tbody>
                <tr>
                    <td>
                        <ejs-dropdownlist id="firstMonthElement" placeholder="First month of year" floatLabelType="Always" dataSource="@Model.months" value="0" change="firstMonthOfYear">
                            <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </td>
                </tr>
                <tr>
                    <td>
                        <ejs-numerictextbox id="numberOfMonthsElement" placeholder="Number of months" floatLabelType="Always" min="1" max="24" value="12" format="###.##" Type="text" change="numberOfMonths"></ejs-numerictextbox>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        .year-view.e-schedule .e-timeline-year-view .e-resource-column-table,
        .year-view.e-schedule .e-timeline-year-view .e-resource-left-td {
            width: 120px;
        }
        /* custom code start*/
        .col-lg-2.property-section .property-panel-table td {
            padding-bottom: 1rem;
        }
        /* custom code end*/
    </style>

    <script type="text/javascript">
        function firstMonthOfYear(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.firstMonthOfYear = args.value;
        }

        function numberOfMonths(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            scheduleObj.monthsCount = args.value;
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Year View in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This example showcases the year and timeline year views of the Scheduler with the firstMonthOfYear and monthCount properties customizations.
            Once the property value has been changed in the properties, it will be reflected in the Scheduler.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this demo, we have showcased the year and timeline year views that help to view the appointment in an annual calendar view. The view options are enabled by using the views property.
            In the <code>TimelineYear</code>, <code>Horizontal</code> and <code>Vertical</code> orientations are available to view the events with a different layout. Also this demo explains the
            customization of the different starting month of the year using <code>firstMonthOfYear</code> property and the number of months using the <code>monthsCount</code> property.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Year View Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Year View in ASP.NET Core Scheduler Control</h1>
                }