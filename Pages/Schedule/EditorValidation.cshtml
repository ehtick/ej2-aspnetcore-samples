@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule
@{
    Dictionary<string, object> ValidationRules = new Dictionary<string, object>() { { "required", true } };
    Dictionary<string, object> locationValidationRules = new Dictionary<string, object>() { { "required", true }, { "regex", new string[] { "^[a-zA-Z0-9- ]*$", "Special characters are not allowed in this field" } } };
    Dictionary<string, object> descriptionValidationRules = new Dictionary<string, object>() { { "required", true }, { "minLength", 5 }, { "maxLength", 500 } };
    var appointments = new ScheduleData().GetScheduleData();
}
@section ControlsSection{
    <div class="control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" width="100%" height="650px" selectedDate="new DateTime(DateTime.Today.Year, 1, 10)" eventRendered="onEventRendered">
                <e-schedule-eventsettings dataSource="@appointments">
                    <e-eventsettings-fields>
                        <e-field-subject name="Subject" validation="ValidationRules"></e-field-subject>
                        <e-field-location name="Location" validation="locationValidationRules"></e-field-location>
                        <e-field-description name="Description" validation="descriptionValidationRules"></e-field-description>
                        <e-field-starttime name="StartTime" validation="ValidationRules"></e-field-starttime>
                        <e-field-endtime name="EndTime" validation="ValidationRules"></e-field-endtime>
                    </e-eventsettings-fields>
                </e-schedule-eventsettings>
            </ejs-schedule>
        </div>
    </div>

    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Field Validation in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo shows the way of adding default and custom validation rules to the editor fields of Schedule.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this demo, the specific fields of Scheduler editor window such as
            <code>subject</code>,
            <code>location</code>,
            <code>description</code>,
            <code>startTime</code> and
            <code>endTime</code> are made to undergo validation such that if it is left as blank, then the default required validation message will
            be displayed in a separate tooltip, on clicking a save button.
        </p>
        <p>
            Additionally, the regex condition has been added to the <code>location</code> field, so that if any special characters are typed into it, then the custom validation message will be displayed.
            The <code>description</code> field has been validated to restrict the character count to be typed into it between 5 and 500 and not beyond that.
            This validation can be given by making use of the <code>validation</code> API available within each <code>fields</code> of <code>eventSettings</code> property.
        </p>
        <p>
            Apart from this validation feature, the built-in validation has been provided to the start and end time fields - so that,
            when the selected end time occurs before the start time, a validation message will be displayed as well as when some
            unwanted characters are typed into the date fields, the invalid date message will be alerted.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Field Validation Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Field Validation in ASP.NET Core Scheduler Control</h1>
                }