@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var appointments = new ScheduleData().GetEmployeeEventData();
}

@section ControlsSection{
    <div class="col-lg-9 control-section">
        <div class="schedule-wrapper">
            <ejs-schedule id="schedule" height="650" selectedDate="new DateTime(DateTime.Today.Year, 2, 15)" startHour="08:00" endHour="20:00" eventRendered="onEventRendered">
                <e-schedule-views>
                    <e-schedule-view option="Day"></e-schedule-view>
                    <e-schedule-view option="Week"></e-schedule-view>
                    <e-schedule-view option="TimelineDay"></e-schedule-view>
                    <e-schedule-view option="TimelineWeek"></e-schedule-view>
                </e-schedule-views>
                <e-schedule-workhours highlight="false"></e-schedule-workhours>
                <e-schedule-eventsettings dataSource="@appointments"></e-schedule-eventsettings>
            </ejs-schedule>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id='property' title='Properties' class='property-panel-table' style="width: 100%;">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 100%;">
                        <div>
                            <ejs-timepicker id="startTime" format="HH:mm" value="new DateTime(DateTime.Today.Year, DateTime.Today.Month, DateTime.Today.Day, 8, 0, 0)" placeholder="Start Hour" floatLabelType="Always"></ejs-timepicker>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 100%;">
                        <div>
                            <ejs-timepicker id="endTime" format="HH:mm" value="new DateTime(DateTime.Today.Year, DateTime.Today.Month, DateTime.Today.Day, 20, 0, 0)" placeholder="End Hour" floatLabelType="Always"></ejs-timepicker>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 100%;">
                        <div class="evtbtn" title="Submit" style="padding-bottom: 10px">
                            <ejs-button id="submit" content="Submit"></ejs-button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script src="~/scripts/schedule/applyCategoryColor.js"></script>
    <script type="text/javascript">
        document.getElementById("submit").addEventListener('click', function () {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            var start = document.getElementById('startTime');
            var end = document.getElementById('endTime');
            scheduleObj.startHour = start.value;
            scheduleObj.endHour = end.value;
        });
        function onEventRendered(args) {
            var scheduleObj = document.getElementById('schedule').ej2_instances[0];
            applyCategoryColor(args, scheduleObj.currentView);
        }
    </script>
}

@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Day Hour Limit in ASP.NET Core Scheduler control. Explore here for more details."/>
                }
@*custom code end*@

@section ActionDescription{
    <div id="action-description">
        <p>
            This demo depicts how to restrict the start and end hours of Schedule, thus limiting it to display only the given hour range.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            In this demo, the Scheduler is made to display from 8 AM to 8 PM and the rest of the hours are hidden, as it is restricted
            to start from <code>08:00</code> hours and end on <code>20:00</code> hours by setting to
            <code>startHour</code> and <code>endHour</code> properties respectively.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Scheduler Day Hour Limit Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Day Hour Limit in ASP.NET Core Scheduler Control</h1>
                }