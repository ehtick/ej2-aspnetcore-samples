@page
@model EJ2CoreSampleBrowser.Pages.Dialog.ComponentsDialog
@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2

@{
    var defaultAnimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.None };
    

    var OkButton = new
    {
        content = "OK",
        isPrimary = true
    };
    var CancelButton = new
    {
        content = "CANCEL",
    };
    var order = OrdersDetails.GetAllRecords();
    var ScheduleData = new ScheduleEvents().GetAppointmentData();
    
}
@section ControlsSection {
    <div class="col-lg-12 control-section" id="target">

        <ejs-button id="normalBtn" content="Open"></ejs-button>
        <ejs-dialog id="defaultDialog" animationSettings="defaultAnimation" width="700px" target="#target" open="dialogOpen"
                    close="dialogClose" showCloseIcon="true" created="created" header="Syncfusion Components inside Dialog">
            <e-content-template>
                 <ejs-tab id="ej2Tab" selected="selected">
                        <e-content-template>
                            <div>
                                <div class="e-tab-header">
                                    <div>Grid</div>
                                    <div>Scheduler</div>
                                    <div>Chart</div>
                                    <div>Rich Text Editor</div>
                                    <div>Forms</div>
                                </div>
                                <div class="e-content">
                                    <div>
                                        <ejs-grid id="Grid" dataSource="order" allowPaging="true">
                                                <e-grid-columns>
                                                    <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="120"></e-grid-column>
                                                    <e-grid-column field="CustomerID" headerText="Customer Name" width="150"></e-grid-column>
                                                    <e-grid-column field="OrderDate" headerText=" Order Date" format="yMd" width="130"></e-grid-column>
                                                    <e-grid-column field="Freight" headerText="Freight" format="C2" width="120"></e-grid-column>
                                                    <e-grid-column field="ShippedDate" headerText="Shipped Date" format="yMd" width="140"></e-grid-column>
                                                    <e-grid-column field="ShipCountry" headerText="Ship Country" width="150"></e-grid-column>
                                                </e-grid-columns>
                                                <e-grid-pagesettings pageSizes="true" pageSize="5"></e-grid-pagesettings>
                                            </ejs-grid>
                                    </div>
                                    <div>
                                        <ejs-schedule id="schedule" height="650px" selectedDate="new DateTime(2019, 1, 10)" created="scheduleCreated">
                                                <e-schedule-eventsettings dataSource="ScheduleData"></e-schedule-eventsettings>
                                            </ejs-schedule>
                                    </div>
                                    <div>
                                        <ejs-chart id="chartComponent" load="window.onChartLoad" title="Inflation - Consumer Price" height="300px">
                                                <e-chart-tooltipsettings enable="true">
                                                </e-chart-tooltipsettings>
                                                <e-chart-primaryxaxis valueType="DateTime"
                                                                      labelFormat="y"
                                                                      intervalType="Years"
                                                                      edgeLabelPlacement="Shift">
                                                    <e-majorgridlines width="0"></e-majorgridlines>
                                                </e-chart-primaryxaxis>
                                                <e-chart-primaryyaxis labelFormat="{value}%"
                                                                      rangePadding="None"
                                                                      minimum=0
                                                                      maximum=100
                                                                      interval=20>
                                                    <e-linestyle width="0"></e-linestyle>
                                                    <e-majorticklines width="0"></e-majorticklines>
                                                </e-chart-primaryyaxis>
                                                <e-chart-chartarea>
                                                    <e-chartarea-border width="0"></e-chartarea-border>
                                                </e-chart-chartarea>
                                                <e-series-collection>
                                                    <e-series dataSource="@Model.chartData" name="Germany" xName="xValue" width="2" opacity="1" yName="yValue" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Line">
                                                        <e-series-marker visible="true" height="10" width="10"></e-series-marker>
                                                    </e-series>
                                                    <e-series dataSource="@Model.chartData" name="England" xName="xValue" width="2" opacity="1" yName="yValue1" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Line">
                                                        <e-series-marker visible="true" height="10" width="10"></e-series-marker>
                                                    </e-series>
                                                </e-series-collection>
                                            </ejs-chart>
                                    </div>
                                    <div>
                                        <ejs-richtexteditor id="default">
                                            <e-content-template>
                                                <div>
                                                    <p>
                                                        The Rich Text Editor component is WYSIWYG ('what you see is what you get') editor that provides the best user experience to create and update the content.
                                                        Users can format their content using standard toolbar commands.
                                                    </p>
                                                    <p><b> Key features:</b></p>
                                                    <ul>
                                                        <li><p> Provides IFRAME and DIV modes </p></li>
                                                        <li><p> Capable of handling markdown editing.</p></li>
                                                        <li><p> Contains a modular library to load the necessary functionality on demand.</p></li>
                                                        <li><p> Provides a fully customizable toolbar.</p></li>
                                                        <li><p> Provides HTML view to edit the source directly for developers.</p></li>
                                                    </ul>
                                                </div>
                                            </e-content-template>
                                        </ejs-richtexteditor>
                                    </div>
                                    <div>
                                        <form method="post">
                                            <div id="formId" class="form-horizontal e-lib e-formvalidator">
                                                    <div class="form-title"><span>Add Customer Details</span></div>
                                                    <div class="form-group">
                                                        <div class="e-float-input">
                                                            <ejs-textbox id="user" placeholder="User Name" floatLabelType="Auto" ejs-for="@Model.UserName"></ejs-textbox>
                                                            <span asp-validation-for="UserName"></span>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="e-float-input">
                                                            <ejs-datepicker id="date" ejs-for="@Model.DOB" placeholder="Date of Birth"></ejs-datepicker>
                                                            <span asp-validation-for="DOB"></span>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="e-float-input">
                                                            <ejs-textbox id="address" placeholder="Address" floatLabelType="Auto" ejs-for="@Model.Address" multiline="true"></ejs-textbox>
                                                            <span asp-validation-for="Address"></span>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="e-float-input">
                                                            <ejs-textbox id="city" placeholder="City" floatLabelType="Auto" ejs-for="@Model.City"></ejs-textbox>
                                                            <span asp-validation-for="City"></span>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="e-float-input">
                                                            <ejs-textbox id="state" placeholder="State" floatLabelType="Auto" ejs-for="@Model.State"></ejs-textbox>
                                                            <span asp-validation-for="State"></span>
                                                        </div>
                                                    </div>
                                                    <div class="e-row">
                                                        <div style="width: 220px;margin:0px auto;height: 100px;padding-top: 25px;">
                                                            <div style="display: inline-block;">
                                                                <ejs-button id="validateSubmit" content="Add Customer" isPrimary="true" htmlAttributes="@Model.submitType"></ejs-button>
                                                            </div>
                                                            <div style="float: right;">
                                                                <ejs-button id="resetBtn" content="Clear" htmlAttributes="@Model.resetType"></ejs-button>
                                                            </div>
                                                        </div>
                                                    </div>
                                             </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </e-content-template>
                </ejs-tab>
            </e-content-template>
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="OkButton" click="dlgButtonClick"></e-dialog-dialogbutton>
                <e-dialog-dialogbutton buttonModel="CancelButton" click="dlgButtonClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
    </div>

}
<style>
    .control-section {
        padding-left: 10px;
    }
    #target {
        height: 100%;
        min-height: 520px;
    }

    @@media screen and (min-width: 150px) and (max-width: 480px) {
        .control-section {
            margin-bottom: 30px;
        }

        .control-wrapper {
            margin-bottom: 0px;
        }
    }

    #defaultDialog {
        top: 0% !important;
    }

    .e-btn-hide {
        display: none;
    }

    .form-title {
        text-align: center;
        padding: 10px;
        font-size: 16px;
        font-weight: 500;
        color: rgba(0, 0, 0, 0.70);
    }

    .e-error,
    .e-float-text {
        font-weight: 500;
    }

    .e-custom-label {
        font-size: 14px;
        font-weight: 500;
        margin-left: 20px;
    }

    #formId {
        padding-top: 10px;
        border: 1px solid #ccc;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.36);
        border-radius: 5px;
        background: #f9f9f9;
        height: 267px;
        overflow-y: scroll;
    }

    
    .material3-dark #formId,
    .material-dark #formId,
    .bootstrap5-dark #formId {
        background: #212529;
    }

    .bootstrap-dark #formId {
        background: #1a1a1a;
    }
    .fabric-dark #formId {
        background: #201f1f;
    }
    .tailwind-dark #formId,
     .tailwind3-dark #formId{
        background: #1f2937;
    }
    .fluent-dark #formId {
    background: #111111;
    }
    .material-dark .form-title,
    .material3-dark .form-title,
    .bootstrap-dark .form-title,
    .fabric-dark .form-title,
    .tailwind-dark .form-title,
    .tailwind3-dark .form-title,
    .bootstrap5-dark .form-title,
    .fluent-dark .form-title {
        color: rgb(249 249 249);
    }

    .highcontrast form,
    .highcontrast .header {
        color: #fff;
        background: #000000;
    }

    .header {
        color: rgba(0, 0, 0, 0.7);
    }

    table,
    td,
    th {
        padding: 3px;
    }

    .form-horizontal .form-group {
        margin-left: 20px;
        margin-right: 20px;
        margin-bottom: 5px;
    }

  </style>

@section PreScripts{
    <script>
        var dialogObj, scheduleObj; 
        var btnElement = document.getElementById("normalBtn");
        btnElement.addEventListener('click', function () {
            dialogObj.show();
        });
        function dialogClose() {
            btnElement.style.display = "block";
        }
        function dialogOpen() {
            btnElement.style.display = "none";
        }
        function dlgButtonClick() {
            dialogObj.hide();
        }
        function created() {
            dialogObj = this;
            /* custom code start */
            document.getElementById("defaultDialog").ej2_instances[0].zIndex = 10000;
            /* custom code end */
        }
        function selected(args) {
            if (args.selectedIndex == 1) {
                scheduleObj.refresh();
            }
        }
        function scheduleCreated() {
            scheduleObj = this;
        }
        window.onChartLoad = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/dark/i, "Dark").replace(/light/i, "Light"));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates how to integrate other ASP.NET Core UI components within the dialog control. In the below example, the dialog component renders with the Grid, Schedule, Chart, Rich Text Editor, Tabs, and Form components.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Since the dialog is a container component, you can integrate other ASP.NET Core UI components within the dialog. The dialog can be rendered with simple plain-text, HTML string, or ASP.NET Core UI components. In the above sample, major components such as Grid, Schedule, Chart, and Rich Text Editor are used inside the dialog.
        </p>
      </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Components inside Dialog in ASP.NET Core Dialog control. Explore here for more details."/>
                }

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Dialog Components inside Dialog Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Components inside Dialog in ASP.NET Core Dialog Control</h1>
                }
