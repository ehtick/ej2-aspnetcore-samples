@page

@using Syncfusion.EJ2
@{
    var defaultanimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.None };
    var defaultbutton = new
    {
        content = "Next",
        isPrimary = true
    };
    var defaultbutton1 = new
    {
        content = "Close",
        isPrimary = true
    };
}

@section ControlsSection {
    <div class="col-lg-12 control-section" id="target">
        <ejs-button id="dialogBtn" cssClass="dlgbtn" content="Open Dialog"></ejs-button>
        <ejs-dialog id="firstDialog" animationSettings="defaultanimation" width="330px" visible="true" height="260px" target="#target" open="dialogOpen"
                    close="dialogClose" showCloseIcon="true" header="First Dialog" created="firstDlgCreated">
            <e-content-template>
                <p>This is the first dialog and acts as a parent dialog, you can open the second (child) dialog by clicking 'Next'.</p>
            </e-content-template>
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="defaultbutton" click="dlgButtonClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
        <ejs-dialog id="secondDialog" header="Second Dialog" visible="false" isModal="true" animationSettings="defaultanimation" width="285px" height="215px" target="#target" open="dialogOpen"
                    close="dialogClose2" showCloseIcon="true" created="secondDlgCreated">
            <e-content-template>
                <p>This is the second dialog and act as a child dialog.</p>
            </e-content-template>
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="defaultbutton1" click="dlg2ButtonClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
    </div>
}

@section PreScripts{
    <script>
         var firstDialogObj, secondDialogObj;
        function firstDlgCreated() {
            firstDialogObj = this;
            /* custom code start */
            document.getElementById("firstDialog").ej2_instances[0].zIndex = 10000;
            /* custom code end */
        }
        function secondDlgCreated() {
            secondDialogObj = this;
            /* custom code start */
            document.getElementById("secondDialog").ej2_instances[0].zIndex = 10000;
            /* custom code end */
        }
        document.getElementById('dialogBtn').onclick = function () {
            firstDialogObj.show();
            secondDialogObj.hide();
        };
        function dlgButtonClick() {
            secondDialogObj.show();
        }
        function dlg2ButtonClick() {
            secondDialogObj.hide();
        }
        function dialogClose() {
            document.getElementById('dialogBtn').style.display = 'block';
        }
        function dialogClose2() {
            document.getElementById('dialogBtn').style.display = 'none';
        }
        function dialogOpen() {
            document.getElementById('dialogBtn').style.display = 'none';
        }
    </script>
}

<style>
    #target {
        height: 100%;
        min-height: 350px;
    }
    .e-btn-hide {
        display: none;
    }
    /* custom code start */
    #control-container {
        padding: 0px !important;
    }

    .dlgbtn {
        margin-right: 10px;
    }

    #container {
        height: 100%;
        min-height: 350px;
        position: relative;
    }

    @@media screen and (min-width: 150px) and (max-width: 480px) {
        .control-section {
            margin-bottom: 30px;
        }

        .control-wrapper {
            margin-bottom: 0px;
        }
    }
    /* custom code end */
</style>

@section ActionDescription{
    <div id="action-description">
        <p>
            This example demonstrates how to display multiple dialogs one over the other.
            The second dialog is configured with draggable behavior to adjust its position.
            You can invoke the second dialog from first dialog's button.
            Enable the "open dialog" button to reopen the dialog if the first dialog is closed.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            You can configure the dialog as a parent and child, and invoke the child dialog from its parent dialog.
            In addition, multiple dialogs can be shown at a time in a page.
            The Z- index order will be controlled automatically in the browser and manually using the <code>zIndex</code> property.
        </p>
    </div>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Multiple Dialogs in ASP.NET Core Dialog control. Explore here for more details."/>
                }

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Dialog Multiple Dialogs Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multiple Dialogs in ASP.NET Core Dialog Control</h1>
                }
