@page
@model EJ2CoreSampleBrowser.Pages.Uploader.DefaultFunctionalities

@using Syncfusion.EJ2

@{
    var asyncSettings = new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = @Url.Content("http://localhost:62928/api/FileUploader/Save"), RemoveUrl = @Url.Content("http://localhost:62928/api/FileUploader/Remove") };
}

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control_wrapper">
            <ejs-uploader id="UploadFiles" removing="onFileRemove" dropArea=".control-fluid" asyncSettings="@asyncSettings">
            </ejs-uploader>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div id="property" title="Properties">
            <div style="margin-left: 50px; padding-top:25px;">
                <ejs-checkbox id="checkAutoUpload" label="Auto Upload" checked="true" change="onChange"></ejs-checkbox>
            </div>
            <div style="margin-left: 50px; padding-top:25px;">
                <ejs-checkbox id="sequentialUpload" label="Sequential Upload" checked="false" change="onChanged"></ejs-checkbox>
            </div>
        </div>
    </div>
}

<style>
    .control_wrapper {
        max-width: 400px;
        margin: auto;
    }

    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
    }

    .control_wrapper .e-upload .e-upload-drag-hover {
        margin: 0;
    }
</style>

@section PreScripts {
    <script>
        function onFileRemove(args) {
            args.postRawFile = false;
        }
        var dropElement = document.getElementsByClassName('control-fluid')[0];
        function onChange (args) {
            var uploadObj = document.getElementById("UploadFiles")
            uploadObj.ej2_instances[0].autoUpload = args.checked;
            uploadObj.ej2_instances[0].clearAll();
        }
        function onChanged(args) {
            var uploadObj = document.getElementById("UploadFiles")
            uploadObj.ej2_instances[0].sequentialUpload = args.checked;
            uploadObj.ej2_instances[0].clearAll();
        }
    </script>
}


@section ActionDescription{
    <div id="action-description">
        <p>
            This <a href="https://www.syncfusion.com/aspnet-core-ui-controls/file-upload"
        target="_blank" aria-label="Navigate to explore the Syncfusion ASP.NET Core File Upload">ASP.NET Core File Upload</a> example demonstrates the default functionalities of the file upload component with auto upload and sequential upload options.
            Browse or drag-and-drop the files which you want to upload to the server and upload it.</p>

    </div>
}

@section Description{
    <div id="description">
        <p>
            The Uploader component is useful to upload images, documents, and other files. By default, the component allows to upload multiple files to browse and upload it to server.
            The selected files append to the file list that contains file details such as name, type, and size.
        </p>
        <p>
            You can manage the files in server after received the uploaded files. When the files are successfully uploaded to server, the remove button will be change to bin button.
            The uploaded files can be removed by click on the bin button.
        </p>
        <p>
            The progress bar displays for each file upload to denote its upload progress.
            Once the file upload gets success, the progress bar disappear and corresponding upload status message will be displayed in same place.
        </p>
        <p>More information on the Uploader instantiation can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/uploader/getting-started" aria-label="Navigate to the documentation for getting started with ASP.NET Core Uploader control" > Documentation section</a>.</p>

    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core File Upload control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core File Upload Default Functionalities Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core File Upload Control</h1>
                }