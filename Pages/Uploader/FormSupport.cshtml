@page

@using Syncfusion.EJ2

@{
     var Modalanimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.Zoom };
}

@section ControlsSection{
    <div class="col-lg-12 control-section">

        <h4 class="form-title">Photo Contest</h4>
        <div class="control_wrapper" id="control_wrapper">
            <!-- Initialize Uploader -->
            <form id="form1" method="post">
                <div class="form-group" style="padding-top: 11px;">
                    <div class="e-float-input">
                        <input type="text" id="name" name="name" data-required-message="* Enter your name" required="" data-msg-containerid="nameError">
                        <span class="e-float-line"></span>
                        <label class="e-float-text e-label-top" for="name">Name</label>
                    </div>
                    <div id="nameError"></div>
                </div>
                <div class="form-group" style="padding-top: 11px;">
                    <div class="e-float-input">
                        <input type="email" id="email" name="email" data-validation="email" data-required-message="* Please enter valid email" required="" data-msg-containerid="mailError">
                        <span class="e-float-line"></span>
                        <label class="e-float-text e-label-top" for="email">Email</label>
                    </div>
                    <div id="mailError"></div>
                </div>
                <div class="form-group" style="padding-top: 11px;">
                    <div class="e-float-input" id="mobile-no">
                        <input type="tel" maxLength="10" id="mobileno" name="mobile" data-required-message="* Enter your mobile number" required="" data-msg-containerid="noError">
                        <span class="e-float-line"></span>
                        <label class="e-float-text e-label-top" for="mobile">Mobile No</label>
                    </div>
                    <div id="noError"></div>
                </div>
                <div class="form-group" style="padding-top: 11px;">
                    <div class="e-float-input upload-area">
                        <input type="text" id="upload" readonly name="upload" data-required-message="* Select any file" required="" data-msg-containerid="uploadError">
                        <button id="browse" type="button" class="e-control e-btn e-info" onclick="browseClick()">Browse...</button>
                        <span class="e-float-line"></span>
                        <label class="e-float-text e-label-top" for="upload">Choose a file</label>
                    </div>
                    <div id="uploadError"></div>
                    <ejs-uploader id="fileupload" autoUpload="false" selected="onFileSelect" multiple="false" allowedExtensions="image/*" > </ejs-uploader>
                </div>
                <div class="form-group" style="padding-top: 11px;">
                    <div class="e-float-input">
                        <textarea class="address-field" rows="2" id="Address"></textarea>
                        <span class="e-float-line"></span>
                        <label class="e-float-text e-label-top">Address</label>
                    </div>
                </div>
            </form>
            <div class="submitBtn">
                <button class="submit-btn e-btn" id="submit-btn" onclick="onFormSubmit()">Submit</button>
                <div class="desc"><span>*This button is not a submit type and the form submit handled from externally.</span></div>
            </div>
            <ejs-dialog id="confirmationDialog" header="Success" showCloseIcon="true" width="335px" visible="false" content="Your details have been updated successfully, Thank you." target=".control-fluid" isModal="true" animationSettings="@Modalanimation"></ejs-dialog>
        </div>
    </div>
}

<link href="~/css/uploader/forms.css" rel="stylesheet" />

@section PreScripts {
    <script>
        window.onload = function () {

            var confirm = document.getElementById("confirmationDialog").ej2_instances[0];
            confirm.visible = false;
        }

        function onFileSelect(args) {
            var inputElement = document.getElementById('upload');
            inputElement.value = args.filesData[0].name;
            formObj.validate('upload');
        }

        var options = {
            customPlacement: function (inputElement, errorElement) {
                inputElement = inputElement.closest('.form-group').querySelector('.error');
                inputElement.parentElement.appendChild(errorElement);
            },
            rules: {
                'name': {
                    required: true
                },
                'email': {
                    required: true
                },
                'upload': {
                    required: true
                },
                'mobile': {
                    required: true
                }
            }
        };

        var inputElement = document.getElementById('upload');

        var formID = document.getElementById('form1');

        var formObj = new ej.inputs.FormValidator(formID, options);
        function onFormSubmit() {
            var confirm = document.getElementById("confirmationDialog").ej2_instances[0];
            var formStatus = formObj.validate();
            if (formStatus) {
                formObj.element.reset();
                confirm.show();
            }
        }

        function browseClick() {
            document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();
            return false;
        };
    </script>
}


@section ActionDescription{
    <div id="action-description">
        <p>
            This <a href="https://www.syncfusion.com/aspnet-core-ui-controls/file-upload"
        target="_blank" aria-label="Navigate to explore the Syncfusion ASP.NET Core File Upload">ASP.NET Core File Upload</a> example demonstrates the Uploader control supported with HTML form upload.
        </p>
        <p>
            Fill the mandatory details in a form and click the submit button.
        </p>

    </div>
}

@section Description{
    <div id="description">
        <p>
            The Uploader control works in synchronous mode using HTML form. When the end-user submits the form, the selected files are submitted to server with the **name** attribute of input element.
            More information on the form support can be found on this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/uploader/form-support" aria-label="Navigate to the documentation for Forms Support in ASP.NET Core Uploader control">documentation section</a>.

        </p>

    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Form Support in ASP.NET Core File Upload control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core File Upload Form Support Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Form Support in ASP.NET Core File Upload Control</h1>
                }