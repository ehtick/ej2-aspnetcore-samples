@page

@using Syncfusion.EJ2;
@using Syncfusion.EJ2.CircularGauge
@section Meta{
    <meta name="description" content="This example demonstrates the Radial Slider in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates how to create a range slider component by utilizing the functions available in the circular gauge.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure a new range slider in the circular gauge. It is possible to achieve this by combining ranges and a marker pointer. The marker pointer has been made interactive, so the value changes as you drag it.
        </p>
        <p>
            More information on the circular gauge can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/getting-started" aria-label="documentation section">documentation section</a>.
            .
        </p>
    </div>
}
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { Size = "0px" };
    }
    <style>
    .templateAlign {
        font-style: oblique;
        margin-left: 8px;
        font-size: 20px;
    }
</style>
    <div class="control-section">
        <ejs-circulargauge id="circular" enablePointerDrag=true dragMove="gaugeDragMove" load="gaugeLoad" style='display:block;' background="transparent">
            <e-circulargauge-axes>
                <e-circulargauge-axis startAngle="0" endAngle="0" radius="80%" labelStyle="@new CircularGaugeLabel{Offset=-1, Font=labelFont}">
                    <e-circulargauge-annotations>
                        <e-circulargauge-annotation content="#annotation-template" angle=180 radius="0%" zIndex="1"></e-circulargauge-annotation>
                    </e-circulargauge-annotations>
                    <e-axis-linestyle width="0"></e-axis-linestyle>
                    <e-axis-majorticks height=0 color="transparent"></e-axis-majorticks>
                    <e-axis-minorticks height=0 color="transparent"></e-axis-minorticks>
                    <e-circulargauge-pointers>
                        <e-circulargauge-pointer type="@Syncfusion.EJ2.CircularGauge.PointerType.Marker" value="30" pointerWidth=7 markerShape="@Syncfusion.EJ2.CircularGauge.GaugeShape.Circle" radius="97%" markerHeight="25" color="#2C75DC" markerWidth="25">
                            <e-pointer-animation enable="false"></e-pointer-animation>
                        </e-circulargauge-pointer>
                    </e-circulargauge-pointers>
                    <e-circulargauge-ranges>
                        <e-circulargauge-range start="0" end="30" startWidth="12" endWidth="12" radius="100%" color="#2C75DC" />
                        <e-circulargauge-range start="30" end="100" startWidth="12" endWidth="12" radius="100%" color="#BFD6F5" />
                    </e-circulargauge-ranges>
                </e-circulargauge-axis>
            </e-circulargauge-axes>
        </ejs-circulargauge>
    </div>
    <!-- custom code start -->
    <style>
        .control-section {
            min-height: 450px;
        }
    </style>
    <!-- custom code end -->
    <script id='annotation-template' type="text/x-template">
        <div id='templateWrap'>
            <div class='templateAlign'><span>30%</span></div>
        </div>
    </script>
}
<script>
    var pointerValue = 30;
    var annotationValue = 30;
    var circulargauge;
    window.gaugeLoad = function (args) {
    @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
    @* custom code end *@
        circulargauge = args.gauge;
    }
    window.gaugeDragMove = function (args) {
     this.pointerValue = Math.round(args.currentValue);
     circulargauge.axes[0].pointers[0].animation.enable = false;
        if (this.pointerValue != null) {
            circulargauge.setPointerValue(0, 0, this.pointerValue);
            circulargauge.setRangeValue(0, 0, 0, this.pointerValue);
            circulargauge.setRangeValue(0, 1, this.pointerValue, 100);
            circulargauge.setAnnotationValue(0, 0, '<div style="font-style: oblique; margin-left: 8px;font-size: 20px;"><span>' + Math.ceil(this.pointerValue) + '%</span></div>');
     }        
    }
</script>
@section Title{
    <title>ASP.NET Core CircularGauge Radial Slider Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Radial Slider in ASP.NET Core CircularGauge Control</h1>
                }