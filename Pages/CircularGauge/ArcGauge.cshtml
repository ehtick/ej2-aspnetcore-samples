@page

@using Syncfusion.EJ2;
@using Syncfusion.EJ2.CircularGauge
@section Meta{
    <meta name="description" content="This example demonstrates the Arc Gauge in ASP.NET Core CircularGauge control. Explore here for more details." />
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample shows the work progress using a circular gauge and a range bar pointer with rounded corners.
        </p>
    </div>

}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render the range and range bar pointer with rounded corners. A slider is placed at the bottom of the circular gauge using annotation to change the range bar pointer value. Based on the value, the color of the pointer can also be changed.
        </p>
        <p>
            More information on the ranges can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/circular-gauge/gauge-ranges" aria-label="documentation section">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
    @{
        var minor = new Syncfusion.EJ2.CircularGauge.CircularGaugeTick {  Height = 0, Width = 0, Color = "transparent" };
        var major = new Syncfusion.EJ2.CircularGauge.CircularGaugeTick {  Height = 0, Width = 0, Color = "transparent" };
        var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "inherit", Size = "0px" };
        var titleFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "inherit" };
    }

    <script id='pointerValue' type="text/x-template">
        <div id='sliderwrap'>
            <div class='des'>
                <div id='default'></div>
            </div>
        </div>
    </script>
    <style>
        .sliderwrap {
            margin-top: 4px;
            width: 300px;
            align-self: center;
        }

        #slider.e-control.e-slider .e-handle {
            margin-top: 0px;
            background-color: #fff;
            border: 2px solid #666;
            width: 15px;
            height: 15px;
        }

        .e-control-wrapper.e-slider-container.e-horizontal .e-slider-track {
            background: -webkit-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);
            background: linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);
            background: -moz-linear-gradient(left, #ea501a 0, #ea501a 20%, #f79c02 40%, #e5ce20 60%, #a1cb43 80%, #82b944 100%);
        }

        .e-limit-bar.e-limits {
            background-color: transparent !important;
        }

        .e-control-wrapper.e-slider-container.e-horizontal .e-range {
            height: 0px !important;
            width: 0px !important;
            background-color: transparent;
        }

        #slider.e-control.e-slider .e-slider-track {
            height: 8px;
            top: calc(50% - 4px);
            border-radius: 5px;
        }
        .material3 #slider.e-control.e-slider .e-handle, .material3-dark #slider.e-control.e-slider .e-handle {
            margin-top: 6px;
        }
        .fluent2 #slider.e-control.e-slider .e-handle, .fluent2-dark #slider.e-control.e-slider .e-handle, .fluent2-highcontrast #slider.e-control.e-slider .e-handle {
            margin-top: 2.5px;
        }
        .material #slider.e-control.e-slider .e-handle {
            margin-top: -2px;
        }
        .highcontrast #slider.e-control.e-slider .e-handle {
            margin-top: 1px;
        }
        .bootstrap #slider.e-control.e-slider .e-handle, .bootstrap-dark #slider.e-control.e-slider .e-handle {
            margin-top: 2px;
        }
    </style>
    <div class="control-section" >
        <div id="range-container">
            <ejs-circulargauge id="range-container" loaded="gaugeLoaded" load="gaugeLoad" title="Progress Tracker" titleStyle="titleFont" background="transparent">
                <e-circulargauge-axes>
                    <e-circulargauge-axis startAngle="200" endAngle="160" minimum="0" maximum="100" radius="80%" majorTicks="major" minorTicks="minor" labelStyle="@new CircularGaugeLabel{Font=labelFont, UseRangeColor=true,Position=Syncfusion.EJ2.CircularGauge.Position.Inside}">
                        <e-axis-linestyle width="0"></e-axis-linestyle>
                        <e-circulargauge-pointers>
                            <e-circulargauge-pointer type=RangeBar value=60 radius="90%" color="#e5ce20" pointerWidth=30 roundedCornerRadius=20>
                                <e-pointer-border width=0></e-pointer-border>
                                <e-pointer-animation enable=false></e-pointer-animation>
                            </e-circulargauge-pointer>
                        </e-circulargauge-pointers>
                        <e-circulargauge-ranges>
                            <e-circulargauge-range start=0 end=100 radius="90%" startWidth="30" endWidth="30" color="#E0E0E0" roundedCornerRadius=20></e-circulargauge-range>
                        </e-circulargauge-ranges>
                        <e-circulargauge-annotations>
                            <e-circulargauge-annotation content="<div id=pointervalue style=font-size:35px;width:120px;text-align:center>60/100</div>" angle="0" zIndex="1.0" radius="0%"></e-circulargauge-annotation>
                            <e-circulargauge-annotation content="<div id=slider style=height:70px;width:250px;></div>" angle="0" zIndex="1.0" radius="-100%"></e-circulargauge-annotation>
                        </e-circulargauge-annotations>
                    </e-circulargauge-axis>
                </e-circulargauge-axes>
            </ejs-circulargauge>
        </div>
        <div id='template'>
            <div class='sliderwrap'>
                <div id='default'></div>
            </div>
        </div>
    </div>
}
<script>

    var gauge;
    function gaugeLoaded(args) {
        var annotation = document.getElementById(args.gauge.element.id + '_Annotations_0');
        if (annotation) {
            annotationRender('slider', gauge.axes[0].pointers[0].value);
            if (document.getElementById('pointervalue')) {
                document.getElementById('pointervalue').innerHTML = gauge.axes[0].pointers[0].value.toString() + '/100';
            }
        }
    }

    function annotationRender(id, sliderValue){
        var first = new ej.inputs.Slider({
            // Set the value for slider
            min: 0, max: 100,
            type: 'MinRange',
            limits: { enabled: true, minStart: 0, minEnd: 100 },
            value: sliderValue,
            change: (args) => {
                sliderValue = args.value;
                if (!isNaN(sliderValue)) {
                    gauge['isProtectedOnChange'] = true;
                    if (sliderValue >= 0 && sliderValue < 20) {
                        gauge.axes[0].pointers[0].color = '#ea501a';
                    } else if (sliderValue >= 20 && sliderValue < 40) {
                        gauge.axes[0].pointers[0].color = '#f79c02';
                    } else if (sliderValue >= 40 && sliderValue < 60) {
                        gauge.axes[0].pointers[0].color = '#e5ce20';
                    } else if (sliderValue >= 60 && sliderValue < 80) {
                        gauge.axes[0].pointers[0].color = '#a1cb43';
                    } else if (sliderValue >= 80 && sliderValue < 100) {
                        gauge.axes[0].pointers[0].color = '#82b944';
                    }
                    gauge.setPointerValue(0, 0, sliderValue);
                    if (document.getElementById('pointervalue')) {
                        document.getElementById('pointervalue').innerHTML = gauge.axes[0].pointers[0].value.toString() + '/100';
                    }
                }
            }
        });
        first.appendTo('#' + id);
    }

    window.gaugeLoad = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        gauge = args.gauge;
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
        @* custom code end *@
    }
</script>
@section Title{
    <title>ASP.NET Core CircularGauge Arc Gauge Example - Syncfusion Demos </title>
                }
@section Header{
    <h1 class='sb-sample-text'>Example of Arc Gauge in ASP.NET Core CircularGauge Control</h1>
                }
