@page
@model EJ2CoreSampleBrowser.Pages.MultiColumnComboBox.FilteringModel

@using Syncfusion.EJ2
@using Newtonsoft.Json

@{
    var mccbDropdownListData = new string[] { "StartsWith", "EndsWith", "Contains" };
}

@section ControlsSection {
    <div class="col-lg-8 control-section">
        <div class='control-wrapper'>
            <div style='padding-top:60px;'>
                <label>Select an employee</label>
                <ejs-multicolumncombobox id="filtering" dataSource="@Model.employee" popupHeight="230px" popupWidth="585px"
                    placeholder="e.g. Alice Johnson" allowFiltering="true" >
                    <e-multicolumncombobox-fields text="Name" value="Experience"></e-multicolumncombobox-fields>
                    <e-multicolumncombobox-columns>
                        <e-multicolumncombobox-column field="Name" header="Name" width="100"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Department" header="Department" width="110"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Role" header="Role" width="140"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Location" header="Location" width="100"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Experience" header="Experience in Years" width="150"></e-multicolumncombobox-column>
                    </e-multicolumncombobox-columns>
                </ejs-multicolumncombobox>
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <label>Choose filter type</label>
            <ejs-dropdownlist id="filtertype" dataSource="@mccbDropdownListData" placeholder="Select a filter type" popupHeight="220px" change="onChange" />
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 250px;
        }

        @@media screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }
    </style>
    <!-- custom code end-->
    <script type="text/javascript">
        function onChange(args) {
               var multicolumnEle = document.getElementById('filtering');
               var mccbInstance = ej.base.getInstance(multicolumnEle, ejs.multicolumncombobox.MultiColumnComboBox);
               mccbInstance.filterType = args.value;       
        }
    </script>
}

@section Meta {
    <meta name="description" content="This example demonstrates the Filtering in ASP.NET Core MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription {
    <div id="action-description">
        <p>This sample demonstrates the built-in support to filter the datasource when <code>allowFiltering</code>is enabled in the MultiColumn ComboBox.</p>
    </div>
}
@section Description {
    <div id="description">
        <p>
            In this sample, the employee data is filtered based on <code>Location</code> column, which illustrates how employee details are filtered dynamically based on typed characters.
        </p>
        <p>
             <p>The <code>MultiColumn ComboBox</code> supports filtering, which allows users to search for and select items by typing keywords. The available items are dynamically filtered based on the input, ensuring quick access to the desired data.</p>
        </p>
    </div>
}
@section Title {
    <title>ASP.NET Core MultiColumn ComboBox Filtering Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Filtering in ASP.NET Core MultiColumn ComboBox Control</h1>
}
