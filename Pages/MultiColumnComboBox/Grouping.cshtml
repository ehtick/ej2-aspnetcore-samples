@page
@model EJ2CoreSampleBrowser.Pages.MultiColumnComboBox.GroupingModel

@using Syncfusion.EJ2

@section ControlsSection {
    <div class="control-section">
        <div class='control-wrapper'>
            <div style='padding-top:60px;'>
                <label>Select a product</label>
                <ejs-multicolumncombobox id="grouping" dataSource="@Model.products" popupHeight="210px" popupWidth="430px" placeholder="e.g. Laptop">
                    <e-multicolumncombobox-fields text="Name" value="Name" groupBy="Category"></e-multicolumncombobox-fields>
                    <e-multicolumncombobox-columns>
                        <e-multicolumncombobox-column field="Name" header="Name" width="110"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Price" header="Price" width="85"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Availability" header="Availability" width="98"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Category" header="Category" width="95"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Rating" header="Rating" width="70"></e-multicolumncombobox-column>
                    </e-multicolumncombobox-columns>
                </ejs-multicolumncombobox>
            </div>
        </div>
    </div>
    <!-- custom code start -->
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 250px;
        }

        @@media screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }
    </style>
    <!-- custom code end-->
}

@section Meta {
    <meta name="description" content="This example demonstrates the grouping support in ASP.NET Core MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription {
    <div id="action-description">
        <p>This sample demonstrates grouping feature of the MultColumn Combobox component. The MultiColumn ComboBox allows to group the relevant items under a corresponding category by mapping the groupBy field, and allows to load the list of employees.</p>
    </div>
}
@section Description {
    <div id="description">
        <p>
            In this sample, the employee data is grouped against <code>Category</code> column, which illustrates how the orders details are grouped based on its category.
        </p>
    </div>
}
@section Title {
    <title>ASP.NET Core MultiColumn ComboBox grouping support Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of grouping support in ASP.NET Core MultiColumn ComboBox Control</h1>
}