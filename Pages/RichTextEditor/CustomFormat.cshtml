@page

@using Syncfusion.EJ2

@{
    var value = "The sample is configured with customized markdown syntax using the __formatter__ property. Type the content and click the toolbar item to view customized markdown syntax. For an unordered list, you need to add a plus sign before the word (e.g., + list1). Or To make a phrase bold, you need to add two underscores before and after the phrase (e.g., __this text is bold__).";
    var items = new object[]
    {
        "Bold", "Italic", "StrikeThrough", "|",
        "Formats", "OrderedList", "UnorderedList", "|",
        "CreateLink", "Image", "|",
        new
        {
            tooltipText = "Preview",
            template = @"<button id='preview-code' class='e-tbar-btn e-control e-btn e-icon-btn' aria-label='Preview Code'>
                        <span class='e-btn-icon e-icons e-md-preview'></span></button>"
        },
        "Undo", "Redo"
    };
}
@section ControlsSection{
    <div class="control-section">
        <div class="control-wrapper">
            <div class="control-section">
                <ejs-richtexteditor id="customformat" value="@value"
                    created="created" height="150px" editorMode="Markdown" placeholder= "Enter your text here...">
                    <e-richtexteditor-toolbarsettings items="@items"></e-richtexteditor-toolbarsettings>
                </ejs-richtexteditor>
            </div>
        </div>
    </div>
<style>
    .e-richtexteditor textarea.e-content {
        float: left;
    }

    .e-richtexteditor .e-rte-content {
        overflow: hidden;
    }

    .e-icon-btn.e-active .e-md-preview::before {
        content: '\e350';
    }

    .e-icon-btn .e-md-preview::before {
        content: '\e345';
    }

    .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {
        content: '\e790';
    }

    .bootstrap4 .e-icon-btn .e-md-preview::before {
        content: '\e787';
    }

    .tailwind .e-icon-btn.e-active .e-md-preview::before,
    .tailwind-dark .e-icon-btn.e-active .e-md-preview::before,
    .tailwind3 .e-icon-btn.e-active .e-md-preview::before,
    .tailwind3-dark .e-icon-btn.e-active .e-md-preview::before,
    .fluent .e-icon-btn.e-active .e-md-preview::before,
    .fluent-dark .e-icon-btn.e-active .e-md-preview::before,
    .fluent2 .e-icon-btn.e-active .e-md-preview::before,
    .fluent2-dark .e-icon-btn.e-active .e-md-preview::before,
    .bootstrap5 .e-icon-btn.e-active .e-md-preview::before,
    .bootstrap5-dark .e-icon-btn.e-active .e-md-preview::before,
    .material3 .e-icon-btn.e-active .e-md-preview::before,
    .material3-dark .e-icon-btn.e-active .e-md-preview::before {
        content: '\e80e';
    }

    .tailwind .e-icon-btn .e-md-preview::before,
    .tailwind-dark .e-icon-btn .e-md-preview::before,
    .tailwind3 .e-icon-btn .e-md-preview::before,
    .tailwind3-dark .e-icon-btn .e-md-preview::before,
    .bootstrap5 .e-icon-btn .e-md-preview::before,
    .bootstrap5-dark .e-icon-btn .e-md-preview::before,
    .fluent .e-icon-btn .e-md-preview::before,
    .fluent-dark .e-icon-btn .e-md-preview::before,
    .fluent2 .e-icon-btn .e-md-preview::before,
    .fluent2-dark .e-icon-btn .e-md-preview::before,
    .material3 .e-icon-btn .e-md-preview::before,
    .material3-dark .e-icon-btn .e-md-preview::before {
        content: '\e7de';
    }

    .e-rte-content .e-content {
        float: right;
        width: 50%;
        overflow: auto;
        height: inherit;
        padding: 8px;
    }

    .e-rte-content .e-content.e-pre-source {
        width: 100%;
    }
</style>
}

@*custom code start*@

@section Meta{
    <meta name="description" content="This demo explains how to convert markdown content (with the custom format) to valid HTML markup using Markdown-to-HTML of the markdown parser in ASP.NET Core."/>
}

@*custom code end*@

@section ActionDescription{
<div id="action-description">
    <p>
        This sample demonstrates how to customize tags of markdown formatting. Type or edit the text and apply the format to
        view customized markdown syntax. For example, apply “+” to Unordered list.
    </p>
</div>
}
@section Description{
    <div id="description">
        The Rich Text Editor allows you to customize the markdown syntax by overriding its default syntax. Configure the customized
        markdown syntax using the <code>formatter</code>property

        <p>The third-party library <code>Marked</code> is used in this sample to convert markdown into HTML content.</p>
    </div>
}
<script>
    var defaultRTE;
    var textArea;
    var mdPreview;
    var mdsource;
    function created() {
        defaultRTE = this;
            mdPreview = document.getElementById('MD_Preview');
            textArea = defaultRTE.contentModule.getEditPanel();
            textArea.addEventListener('keyup', function (e) {
                markdownConversion();
            });
            mdsource = document.getElementById('preview-code');
            mdsource.addEventListener('click', function (e) {
                fullPreview();
            });
    }
    loadExternalFile();
    // Dynamically load the marked.js file
    function loadExternalFile() {
        var script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.19/marked.js';
        document.getElementsByTagName('head')[0].appendChild(script);
    }
    function markdownConversion() {
        if (mdsource.classList.contains('e-active')) {
            var id = defaultRTE.getID() + 'html-view';
            var htmlPreview = defaultRTE.element.querySelector('#' + id);
            htmlPreview.innerHTML = marked(defaultRTE.contentModule.getEditPanel().value);
        }
    }
    function fullPreview() {
        var id = defaultRTE.getID() + 'html-preview';
        var htmlPreview = defaultRTE.element.querySelector('#' + id);
        if (mdsource.classList.contains('e-active')) {
            mdsource.classList.remove('e-active');
            mdsource.parentElement.title = 'Preview';
            defaultRTE.enableToolbarItem(defaultRTE.toolbarSettings.items);
            textArea.style.display = 'block';
            htmlPreview.style.display = 'none';
        }
        else {
            mdsource.classList.add('e-active');
            defaultRTE.disableToolbarItem(defaultRTE.toolbarSettings.items);
            if (!htmlPreview) {
                htmlPreview = ej.base.createElement('div', { className: 'e-content e-pre-source' });
                htmlPreview.id = id;
                textArea.parentNode.appendChild(htmlPreview);
            }
            textArea.style.display = 'none';
            htmlPreview.style.display = 'block';
            htmlPreview.innerHTML = marked(defaultRTE.contentModule.getEditPanel().value);
            mdsource.parentElement.title = 'Code View';
        }
    }
</script>

@section Title{
    <title>ASP.NET Core Rich Text Editor Custom Format Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Custom Format in ASP.NET Core Rich Text Editor Control</h1>
}