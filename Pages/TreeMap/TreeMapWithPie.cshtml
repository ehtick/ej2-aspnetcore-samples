@page
@model EJ2CoreSampleBrowser.Pages.TreeMap.TreeMapWithPie

@using Syncfusion.EJ2.TreeMap;

@{
    var colorMaps = new[]
    {
        new { from = 1.3, to = 22, color = "#FAB665", minOpacity = 0.5, maxOpacity = 1 }
    };
    var border = new TreeMapBorder { Color = "black", Width = 0.5 };
    var labelStyle = new TreeMapFont { Size = "0px" };
    var titleFont = new TreeMapFont { FontFamily = "Segoe UI" };
    var treeMapPie = new TreeMapWithPie().getDataSource("Continent_Data");
}

@section ControlsSection{
    
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <ejs-treemap id="container" tooltipRendering="tooltipRender" load="treemapLoad" format="n" useGroupingSeparator="true" loaded="treeMapLoaded" resize="treeMapResize" dataSource="@treeMapPie" weightValuePath="Population">
                    <e-treemap-tooltipsettings visible="true" format="${Gender} : ${Population}" textStyle="titleFont"></e-treemap-tooltipsettings>
                    <e-treemap-titlesettings text="Population of the continents based on gender and age group - 2011" textStyle="titleFont"></e-treemap-titlesettings>
                    <e-treemap-leafitemsettings showLabels="false" labelStyle="labelStyle" labelPath="Gender" fill="#A1317D" border="border" templatePosition="@Syncfusion.EJ2.TreeMap.LabelPosition.Center"
                                                labelTemplate="<div style=height:{{:PieHeight}};width:{{:PieWidth}}; id ={{:Id}}></div>"></e-treemap-leafitemsettings>
                    <e-treemap-levels>
                        <e-treemap-level groupPath="Continent" fill="#7E2361" headerAlignment="@Syncfusion.EJ2.TreeMap.Alignment.Center" border="border" headerStyle="titleFont"></e-treemap-level>
                    </e-treemap-levels>
                </ejs-treemap>
                <div style="float: right; margin-right: 10px;">
                    Source:
                    <a href=" http://en.worldstat.info/Asia/" target="_blank" aria-label="worldstat">en.worldstat.info</a>
                </div>
            </div>
        </div>
    </div>
}
<script>
    var chartCollection = [], count = 0;
    @* custom code start *@
    function treemapLoad(args) {
        var theme = themeName ? themeName : 'Material';
        args.treemap.theme = (theme.charAt(0).toUpperCase() +
                theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-high/i, 'High').replace(/5.3/i, '5');
    }
    @* custom code end *@
    function treeMapLoaded(args) {
        var template = document.getElementById(args.treemap.element.id + '_Label_Template_Group');
        if (template) {
            for (var i = 0; i < template.childElementCount; i++) {
                AccumulationChartRender(template.childNodes[i].childNodes[0].id);
            }
            count = 0;
        }
    }

    function tooltipRender(args) {
        if (args.item['groupIndex'] !== 1) {
            args.cancel = true;
        }
    }

    function treeMapResize(args) {
        for (var i = 0; i < chartCollection.length; i++) {
            chartCollection[i].destroy();
        }
    }

    function AccumulationChartRender(id) {
        var chartData = getData();
        var dataSource = chartData['data'];
        var name = chartData['name'];
        var chart = new ej.charts.AccumulationChart({
            background: 'transparent',
            tooltip: {
                enable: true,
                format: '${point.x} : ${point.y}%'
            },
            legendSettings: {
                visible: false
            },
            series: [
                {
                    explode: true,
                    explodeIndex: 0,
                    explodeOffset: '20%',
                    name: name,
                    palettes: ['#1E1E1E', '#00BDAE', '#FFFFFF'],
                    dataSource: dataSource,
                    dataLabel: {
                        visible: false
                    },
                    type: 'Pie',
                    xName: 'x',
                    yName: 'y'
                }
            ]
        });
        chart.appendTo('#' + id);
        chartCollection.push(chart);
    }

    function getData() {
        var dataSource, dataName;
        if (count === 0) {
            dataSource = [
                { 'x': '0-15 years', y: 40.8 }, { 'x': '15-64 years', y: 56.2 },
                { 'x': 'Above 64 years', y: 3.0 }
            ];
            dataName = 'Asia';
        } else if (count === 1) {
            dataSource = [
                { 'x': '0-15 years', y: 15.5 }, { 'x': '15-64 years', y: 12.9 },
                { 'x': 'Above 64 years', y: 41.4 }
            ];
            dataName = 'Asia';
        } else if (count === 2) {
            dataSource = [
                { 'x': '0-15 years', y: 25.1 }, { 'x': '15-64 years', y: 67.8 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'Africa';
        } else if (count === 3) {
            dataSource = [
                { 'x': '0-15 years', y: 15.3 }, { 'x': '15-64 years', y: 68.4 },
                { 'x': 'Above 64 years', y: 16.3 }
            ];
            dataName = 'Africa';
        } else if (count === 4) {
            dataSource = [
                { 'x': '0-15 years', y: 22.8 }, { 'x': '15-64 years', y: 65.9 },
                { 'x': 'Above 64 years', y: 11.4 }
            ];
            dataName = 'Europe';
        } else if (count === 5) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'Europe';
        } else if (count === 6) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'South America';
        } else if (count === 7) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'South America';
        } else if (count === 8) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'Oceania';
        } else if (count === 9) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'Oceania';
        } else if (count === 10) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'North America';
        } else if (count === 11) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'North America';
        } else if (count === 12) {
            dataSource = [
                { 'x': '0-15 years', y: 26.8 }, { 'x': '15-64 years', y: 66.1 },
                { 'x': 'Above 64 years', y: 7.1 }
            ];
            dataName = 'South America';
        }
        count++;
        return { name: dataName, data: dataSource };
    }
</script>
@section Meta{
                    <meta name="description" content="This example demonstrates the TreeMap With Pie in ASP.NET Core TreeMap control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
    <p>
        This sample visualizes the population of various continents in 2011 based on the gender and age group.
    </p>
</div>
}
@section Description{
<div id="description">
    <p>
        In this example, you can see how to render a pie chart as a template for leaf items in treemap. Any custom HTML element can be rendered as label template.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item in touch enabled devices.
    </p>
</div>
}
@section Title{
                    <title>ASP.NET Core TreeMap TreeMap With Pie Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of TreeMap With Pie in ASP.NET Core TreeMap Control</h1>
                }