@page
@using Syncfusion.EJ2
@using EJ2CoreSampleBrowser.Models
@{
    var localdata = new GameList().GameLists();
    var sort = "Ascending";
    var query = "new ej.data.Query().select(['FirstName ', 'EmployeeID']).take(10).requiresCount()";
}

@section ControlsSection{
<div class="control-section">
    <div id='local-data'>
        <div class='control-wrapper'>
            <h4> Local Data</h4>
            <ejs-multiselect id="local" placeholder="Select games" dataSource="@localdata">
                <e-multiselect-fields text="Game" value="Id"></e-multiselect-fields>
            </ejs-multiselect>
        </div>
    </div>
    <div id='remote-data'>
        <div class='control-wrapper'>
            <h4>Remote Data</h4>
            <ejs-multiselect id="remote" placeholder="Select names" query="@query"
                             sortOrder="@sort">
                <e-data-manager adaptor="WebApiAdaptor" url="http://localhost:62928/api/Employees" crossDomain="true"></e-data-manager>
                <e-multiselect-fields text="FirstName" value="EmployeeID"></e-multiselect-fields>
            </ejs-multiselect>
        </div>
    </div>
</div>
<style>
    .control-fluid, .container-fluid {
        padding-right: 15px;
        padding-left: 15px;
    }

    .control-content .control-section{
        border-width: 0px !important;
    }

    .control-section .control-wrapper {
        width: 80%;
        margin: 0 auto;
        min-width: 185px;
        padding-top: 15px;
    }

    .e-bigger .control-section .control-wrapper {
        width: 100%;
    }

    .e-multi-select-wrapper .e-chips > .e-chipcontent {
        max-width: 80%;
        white-space: nowrap;
    }
</style>

}
@section Meta{
<meta name="description" content="This example demonstrates the Data Binding in ASP.NET Core MultiSelect Dropdown control. Explore here for more details."/>
}
@section ActionDescription{
<div id="action-description">
    <p>
        This sample demonstrates the different data binding supports of the MultiSelect. Click the MultiSelect element and choose
        one or more items from the suggestion list. At the very first time, when clicked on the remote data MultiSelect,
        the loader icon will be shown until the remote request get the data from server and display it.
    </p>
</div>
}
@section Description{
<div id="description">
    <p>
        The MultiSelect loads the data either from local data sources or remote data services through the
        <code>dataSource</code> property. It supports the data type of
        <code>array</code> or
        <code>DataManager</code>.
    </p>
    <p>
        The DataManager, that act as an interface between service endpoint and MultiSelect, will require the following minimal
        information to interact with service endpoint properly.
    </p>
    <ul>
        <li>
            <code>DataManager->url</code> - Defines the service endpoint to fetch data.
        </li>
        <li>
            <code>DataManager->adaptor</code> - Defines the adaptor option. By default,
            <code>ODataAdaptor</code> is used for remote binding.
        </li>
    </ul>
    <p>
        Adaptor is responsible for processing response and request from/to the service endpoint.
        <code>syncfusion/ejs-data</code> package provides some predefined adaptors that are designed to interact with particular service endpoints. They
        are:
    </p>
    <ul>
        <li>
            <code>UrlAdaptor</code> - Use this to interact any remote services.
        </li>
        <li>
            <code>ODataAdaptor</code> - Use this to interact with OData endpoints.
        </li>
        <li>
            <code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.
        </li>
        <li>
            <code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.
        </li>
        <li>
            <code>WebMethodAdaptor</code> - Use this to interact with web methods.
        </li>
    </ul>
    <p>
        In this sample, the local data is bound to a collection of sports data and the remote data is bound to a collection of
        customer data as an instance of
        <code>DataManager</code>.
    </p>
    <p>
        More information on the data binding feature configuration can be found in the
        <a href="https://ej2.syncfusion.com/aspnetcore/documentation/multi-select/data-binding" target="_blank "aria-label="Navigate to the documentation for data binding in ASP.NET Core MultiSelect Dropdown control" > Documentation section</a>.
    </p>
</div>
}
@section Title{
<title>ASP.NET Core MultiSelect Dropdown Data Binding Example - Syncfusion Demos </title>
}
@section Header{
<h1 class='sb-sample-text'>Example of Data Binding in ASP.NET Core MultiSelect Dropdown Control</h1>
}
