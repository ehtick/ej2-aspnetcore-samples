@page
@model EJ2CoreSampleBrowser.Pages.Toolbar.DefaultFunctionalitiesModel
@using Syncfusion.EJ2

@section ControlsSection {
    <div class="col-lg-12 control-section">
        <div class="e-sample-resize-container">
            <h5 style="display: inline-block">Simple Toolbar</h5>
            <ejs-toolbar id="defaultToolbar">
                <e-toolbar-items>
                    <e-toolbar-item prefixIcon="e-icons e-cut" tooltipText="Cut"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-copy" tooltipText="Copy"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-paste" tooltipText="Paste"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-bold" tooltipText="Bold"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-underline" tooltipText="Underline"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-italic" tooltipText="Italic"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-align-left" tooltipText="Align-Left"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-align-right" tooltipText="Align-Right"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-align-center" tooltipText="Align-Center"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-justify" tooltipText="Align-Justify"></e-toolbar-item>
                    <e-toolbar-item type="Separator"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-list-unordered" tooltipText="Bullets"></e-toolbar-item>
                    <e-toolbar-item prefixIcon="e-icons e-list-ordered" tooltipText="Numbering"></e-toolbar-item>
                </e-toolbar-items>
            </ejs-toolbar>
            <br /><br />
            <h5 style="display: inline-block">Scrollable Toolbar</h5>
            <ejs-toolbar id="OverflowScrollable" overflowMode="Scrollable" items="@Model.Items"></ejs-toolbar>
            <br /><br />
            <h5 style="display: inline-block">Popup Toolbar</h5>
            <ejs-toolbar id="OverflowPopup" overflowMode="Popup" items="@Model.Items"></ejs-toolbar>
            <br /><br />
            <h5 style="display: inline-block">MultiRow Toolbar</h5>
            <ejs-toolbar id="OverflowMultiRow" overflowMode="MultiRow" items="@Model.Items"></ejs-toolbar>
            <br /> <br />
            <h5 style="display: inline-block">Extended Toolbar</h5>
            <ejs-toolbar id="OverflowExtended" overflowMode="Extended" items="@Model.Items"></ejs-toolbar>
        </div>
    </div>
}

@section ActionDescription{
    <p>
        This sample demonstrates the default functionalities of the <code>Toolbar</code>. Select any command or click the left/right navigation icon or touch swipe to see the hidden commands of the Toolbar
    </p>
}

@section Description{
    <p>
        <strong>Toolbar</strong> is a graphical control on which commands / buttons will be displayed in horizontal order.
        By default scrolling display mode enabled when content exceeds the available viewing area.
    </p>
    <br>
    <p>
        You can use left / right navigation icon or touch swipe to see the hidden commands of the toolbar.
    </p>
    <p>
        Initially toolbar rendered with the <code> left and right navigation</code> icon and you can see hidden commands by <code>moving in right or left</code> direction.
    </p>
    <p>
        When you reach <code>right / left end of toolbar</code>, corresponding  navigation direction will be disabled.
    </p>
    <p>
        In this demo, available responsive mode of ASP.NET Core Toolbar has been showcased. The modes can be set through <code>overflowMode</code> property and the possible modes are <code>Scrollable</code>, <code>Popup</code>Popup, <code>Extended</code> and <code>MultiRow</code>.
    </p>
    <ul>
        <li>
            <code>Scrollable</code> - The scrollable mode is the default mode. When you have excess toolbar items, it can be viewed by scrolling through left and right arrows.
            You can continuously scroll the toolbar content by holding on the navigation icon.In <code>devices</code> navigation icons are not available. you can touch swipe to see the hidden commands of the toolbar.
        </li>
        <li>
            <code>Popup</code> - The overflowing toolbar items which do not fit in viewing area moves to the popup container.
        </li>
        <li>
            <code>Extended</code> - The overflowing toolbar items which do not fit in the available space can be viewed in the next row of the toolbar on clicking the expand icon.
        </li>
        <li>
            <code>MultiRow</code> - The overflowing toolbar items which do not fit in viewing area will be displayed as an in-line of the toolbar.
        </li>
    </ul>
}

@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core Toolbar control. Explore here for more details." />
}

@*custom code start*@
<style>
    .control-wrapper {
        flex-direction: inherit
    }

    @@media only screen and (min-width: 1224px) {
        .e-sample-resize-container {
            width: 80%;
            margin: auto;
        }
    }

    @@media only screen and (min-width: 1824px) {
        .e-sample-resize-container {
            width: 50%;
        }
    }

    .control-section {
        padding-bottom: 100px !important;
    }
</style>
@*custom code end*@
@section Title{
    <title>ASP.NET Core Toolbar Default Functionalities Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core Toolbar Control</h1>
}