@page
@model EJ2CoreSampleBrowser.Pages.TreeView.DefaultFunctionalitiesModel
@using Syncfusion.EJ2
@{
    char[] value = { 'C', 'h', 'i', 'l', 'd' };
    string Child = new string(value);
}
@section ControlsSection {
    <div class="control-section">
        <div class="control_wrapper">
            <ejs-treeview id="treedata">
                <e-treeview-fields child="Child" dataSource="@Model.ParentItems" id="NodeId" parentId="pid" text="NodeText" hasChildren="hasChild" expanded="Expanded"></e-treeview-fields>
            </ejs-treeview>
        </div>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core TreeView control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This <a href="https://www.syncfusion.com/aspnet-core-ui-controls/treeview" target="_blank" aria-label="Navigate to explore the syncfusion ASP.NET Core TreeView example">ASP.NET Core TreeView example</a> demonstrates the default functionalities of the TreeView. Click on node to select it, and click on icon or double click on node to expand/collapse it. The child nodes will be loaded on expand the parent node.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeView component is used to display the data in a hierarchical structure with the configuration options to control the way of data is presented and manipulated. It will pull the data from a data source, such as an array of JSON objects, OData web services, or DataManager binding data fields to the fields property.
        </p>
        <p>
            In this demo, the TreeView is populated with its minimum default settings.
        </p>
        <p>
            More information about Treeview can be found in this
            <a target="_blank"
               href="https://ej2.syncfusion.com/aspnetcore/documentation/treeview/getting-started" aria-label="Navigate to the documentation for getting started with ASP.NET Core TreeView control">
                documentation section
            </a>.
        </p>
    </div>
}
@*custom code start*@
<style>
    .control_wrapper {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }
</style>
@*custom code end*@
@section Title{
    <title>ASP.NET Core TreeView Default Functionalities Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core TreeView Control</h1>
}