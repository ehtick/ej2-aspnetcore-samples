@page
@model EJ2CoreSampleBrowser.Pages.TreeView.TemplateModel
@using Syncfusion.EJ2

@section ControlsSection {
    <div class="control-section">
        <div class="control_wrapper">
            <ejs-treeview id="treedata" nodeTemplate="@Html.Raw("<div><div class=\"treeviewdiv\"><div class=\"nodetext\"><span class=\"treeName\">${Name}</span></div>${if(Count)}<div class=\"nodebadge\"><span class=\"treeCount e-badge e-badge-primary\" >${Count}</span></div>  ${/if} </div></div>")">
                <e-treeview-fields dataSource="@Model.Emp" id="Id" parentId="Pid" text="Name" hasChildren="HasChild" expanded="Expanded" selected="Selected"></e-treeview-fields>
            </ejs-treeview>
        </div>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Template in ASP.NET Core TreeView control. Explore here for more details." />
}

@section ActionDescription{
    <div id="action-description">
        <p>This <a href="https://www.syncfusion.com/aspnet-core-ui-controls/treeview" target="_blank" aria-label="Navigate to explore the syncfusion ASP.NET Core TreeView example">ASP.NET Core TreeView example</a> demonstrates the template functionalities of the TreeView. Select the root node by clicking on it, or expand the root node and select the customized child node.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeView component has an option to customize the node structure through the nodeTemplate property, so that the tree node can be formed with any custom structure.
        </p>
        <p>
            In this demo, the node is formed with the employee's image, name and designation.
        </p>
        <p>
            More information about Treeview can be found in this
            <a target="_blank"
               href="https://ej2.syncfusion.com/aspnetcore/documentation/treeview/template" aria-label="Navigate to the documentation for Template in ASP.NET Core TreeView control">
                documentation section
            </a>.
        </p>
    </div>
}
@*custom code start*@
<style>
    .control_wrapper {
        max-width: 320px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

    .e-treeview .e-list-text {
        width: 100%;
    }

    .treeCount.e-badge {
        padding: 0.4em;
        vertical-align: text-bottom;
    }

    .material .treeCount.e-badge {
        vertical-align: middle;
    }

    .bootstrap5.e-bigger .treeCount.e-badge,
    .bootstrap5-dark.e-bigger .treeCount.e-badge,
    .tailwind.e-bigger .treeCount.e-badge,
    .tailwind-dark.e-bigger .treeCount.e-badge {
        line-height: 10px;
    }

    .bootstrap4 .treeviewdiv .treeCount.e-badge,
    .bootstrap5 .treeviewdiv .treeCount.e-badge,
    .bootstrap5-dark .treeviewdiv .treeCount.e-badge,
    .bootstrap5\.3 .treeviewdiv .treeCount.e-badge,
    .bootstrap5\.3-dark .treeviewdiv .treeCount.e-badge,
    .bootstrap .treeviewdiv .treeCount.e-badge,
    .bootstrap-dark .treeviewdiv .treeCount.e-badge,
    .highcontrast .treeviewdiv .treeCount.e-badge {
        background-color: #008800;
    }

    .highcontrast .treeviewdiv .treeCount.e-badge {
        color: white;
    }

    .nodetext {
        float: left;
    }

    .e-rtl .nodetext {
        float: right;
    }

    .nodebadge {
        float: right;
        margin-right: 5px
    }

    .e-rtl .nodebadge {
        float: left;
        margin-left: 5px
    }
</style>
@*custom code end*@
@section Title{
    <title>ASP.NET Core TreeView Template Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Template in ASP.NET Core TreeView Control</h1>
}