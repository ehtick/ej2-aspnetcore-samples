@page
@model EJ2CoreSampleBrowser.Pages.TreeView.LocalDataModel
@{
    char[] value = { 'C', 'h', 'i', 'l', 'd' };
    string Child1 = new string(value);

    
}

@using Syncfusion.EJ2
@section ControlsSection {
    <div class="col-lg-12 control-section">
        <div class="col-lg-6 nested-data">
            <div class="content">
                <h4>Hierarchical Data</h4>
                <ejs-treeview id="continents">
                    <e-treeview-fields child="Child1" dataSource="@Model.Continents" id="Code" text="Name" selected="Selected" expanded="Expanded"></e-treeview-fields>
                </ejs-treeview>
            </div>
        </div>
        <div class="col-lg-6 list-data">
            <div class="content">
                <h4>List Data</h4>
                <ejs-treeview id="listdata">
                    <e-treeview-fields dataSource="@Model.ListData" id="id" parentId="pid" text="name" hasChildren="hasChild" expanded="expanded"></e-treeview-fields>
                </ejs-treeview>

            </div>
        </div>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Local Data in ASP.NET Core TreeView control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This <a href="https://www.syncfusion.com/aspnet-core-ui-controls/treeview" target="_blank" aria-label="Navigate to explore the syncfusion ASP.NET Core TreeView example">ASP.NET Core TreeView example</a> demonstrates the binding of local data to the TreeView. Click on node to select it, and click on icon or double click on node to expand/collapse it.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The TreeView component loads the data through the dataSource property, where the data can be either local data or remote data. In case of local data, the data structure can be hierarchical data or list data (with self-referential format i.e., mapped with the id and parentID fields).
        </p>
        <p>
            In this demo, the first TreeView is bound with the hierarchical data that contains array of nested objects. And the second TreeView is bound with the list type data where the parent-child relation is referred by the id and parentID mapping fields.
        </p>
        <p>
            More information about Treeview can be found in this
            <a target="_blank"
               href="https://ej2.syncfusion.com/aspnetcore/documentation/treeview/data-binding" aria-label="Navigate to the documentation for Data Binding in Treeview Control">
                documentation section
            </a>.
        </p>
    </div>
}
@*custom code start*@
<style>
    .nested-data, .list-data {
        padding: 15px;
        margin-bottom: 25px;
    }

    .content {
        margin: 0 auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

        .content h4 {
            padding: 0 10px;
        }
</style>
@*custom code end*@
@section Title{
    <title>ASP.NET Core TreeView Local Data Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Local Data in ASP.NET Core TreeView Control</h1>
}