@page

@{
    var cellSpacing = new double[] { 10, 10 };
}

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="content-wrapper" style="max-width: 100%">
            <ejs-dashboardlayout id="dynamicLayout" allowResizing="true" columns="6" cellSpacing="@cellSpacing">
                <e-dashboardlayout-panels>
                    <e-dashboardlayout-panel row="0" col="0" sizeX="2" sizeY="2" content="<div></div>" header="<div>Panel 1</div>">
                    </e-dashboardlayout-panel>
                    <e-dashboardlayout-panel row="0" col="2" sizeX="2" sizeY="2" content="<div></div>" header="<div>Panel 2</div>">
                    </e-dashboardlayout-panel>
                    <e-dashboardlayout-panel row="0" col="4" sizeX="2" sizeY="2" content="<div></div>" header="<div>Panel 3</div>">
                    </e-dashboardlayout-panel>
                    <e-dashboardlayout-panel row="2" col="0" sizeX="4" sizeY="2" content="<div></div>" header="<div>Panel 4</div>">
                    </e-dashboardlayout-panel>
                    <e-dashboardlayout-panel row="2" col="4" sizeX="2" sizeY="2" content="<div></div>" header="<div>Panel 5</div>">
                    </e-dashboardlayout-panel>
                </e-dashboardlayout-panels>
            </ejs-dashboardlayout>
        </div>
        <div id="content"></div>
    </div>
    <div class="col-lg-4 property-section dashboard">
        <div class="property-panel-header">
            Properties
        </div>
        <div class="row property-panel-content">
            <div class="card-body">
                <div class="form-group row">
                    <label for="settings-margin-input" class="col-sm-4 col-form-label form-label">CellSpacing</label>
                    <div class="col-sm-8">
                        <ejs-numerictextbox id="cellspacing" min="1" max="20" floatLabelType="Never" placeholder="Ex: 10" change="valueChange" value="10"></ejs-numerictextbox>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="settings-bubble-up-input" class="col-sm-4 col-form-label form-label">AllowFloating</label>
                    <div class="col-sm-8">
                        <ejs-checkbox id="floating" checked="true" name="floating" change="onChange"></ejs-checkbox>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="settings-bubble-up-input" class="col-sm-4 col-form-label form-label">AllowResizing</label>
                    <div class="col-sm-8">
                        <ejs-checkbox id="resizing" checked="true" name="resizing" change="onChange"></ejs-checkbox>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-12">
                        <ejs-button id="add" cssClass="e-primary" content="Add Panel"></ejs-button>
                        <ejs-button id="remove" cssClass="e-danger" content="Remove Panel"></ejs-button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="template" id="settingsbody">

</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('remove').onclick = function (e) {
            var dashboardObject = document.getElementById('dynamicLayout').ej2_instances[0];
            if (dashboardObject.panels.length > 0) {
                for (var i = dashboardObject.panels.length - 1; i < dashboardObject.panels.length; i++) {
                    dashboardObject.removePanel(dashboardObject.panels[dashboardObject.panels.length - 1 - i].id);
                }
            }
        };
        var count = 5;
        document.getElementById('add').onclick = function (e) {
            count = count + 1;
            var dashboardObject = document.getElementById('dynamicLayout').ej2_instances[0];
            var panel = [{
                'id': count.toString() + '_layout', 'sizeX': 2, 'sizeY': 2, 'row': 0, 'col': 0,
                content: "<div></div>",
                header: "<div>Panel " + count.toString() + "</div>"
            }];
            dashboardObject.addPanel(panel[0]);
        };
    });
    function valueChange(args) {
        var dashboardObject = document.getElementById('dynamicLayout').ej2_instances[0];
        dashboardObject.cellSpacing = [parseInt(args.value, 10), parseInt(args.value, 10)];
    }

    function onChange(args) {
        var dashboardObject = document.getElementById('dynamicLayout').ej2_instances[0];
        if (args.event.currentTarget.firstChild.childNodes[0].id === "floating") {
            dashboardObject.allowFloating = args.checked;
        }
        if (args.event.currentTarget.firstChild.childNodes[0].id=== "resizing") {
            dashboardObject.allowResizing = args.checked;
        }
    }

</script>

<style>
    #sizeX,
    #sizeY {
        height: 18px !important;
    }

    .form-label {
        margin-bottom: 0;
        font-size: 12px;
        line-height: 1.5;
        font-size: 13px;
        font-weight: 500;
    }

    .e-panel-header {
        padding: 10px;
        margin-bottom: 0;
        background-color: rgba(0, 0, 0, .03);
    }

    body.tailwind-dark .e-dashboardlayout.e-control .e-panel {
        border: 1px solid #d7d7d7;
    }

    .panel-content {
        vertical-align: middle;
        font-size: 15px;
        font-size: 15px;
        font-weight: 500;
        color: rgba(0, 0, 0, 0.61);
        text-align: center;
    }


    .e-panel-content {
        height: calc(100% - 28px);
        width: 100%;
        display: block;
    }

    .e-panel .e-header-text {
        padding: 12px 0 12px 0;
    }

    #dashboard .e-panel-container .e-panel-header {
        border-bottom: 1px solid #888383;
    }

    body.material-dark .property-section {
        color: #ffffff;
    }


    .e-dashboardlayout.e-control .e-panel .e-panel-header {
        font-size: 15px;
        font-weight: 500;
        height: 37px;
        padding: 10px;
        vertical-align: middle;
        /* text-align: left; */
        border-bottom: 0.5px solid #e3e3e3;
    }

    .image-pattern-style {
        background-color: transparent;
        background-size: contain;
        background-repeat: no-repeat;
        height: 75px;
        width: calc((100% - 12px) / 3);
        cursor: pointer;
        border: 1px solid #D5D5D5;
        background-position: center;
        float: left;
        margin-right: 3px;
        line-height: 75px;
        text-align: center;
    }

        .image-pattern-style:hover {
            border-color: gray;
            border-width: 1px;
        }

    .row {
        margin-left: 0px;
        margin-right: 0px;
    }

    .row-header {
        font-size: 13px;
        font-weight: 500;
    }

    .e-selected-style {
        border-color: #006CE6;
        border-width: 2px;
    }

    .e-panel-content {
        padding: 15px;
    }

    #reset {
        display: block;
        margin: 0 auto;
        width: 90px;
    }

    .menu {
        display: block;
        height: 30px;
        width: 12px;
        text-align: center;
    }

        .menu:hover,
        .e-clear-icon:hover {
            cursor: pointer;
        }

        .menu::before {
            content: '\e10d';
            font-family: 'e-icons';
        }

    .e-clear-icon::before {
        content: '\e932';
        font-size: 12px;
        font-family: 'e-icons';
    }

    .header-border {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 100%;
        border-top: 5px solid #2684ff
    }

    .e-template-icon {
        display: block;
        padding: 12px 0 12px 0;
    }

    .sb-property-border {
        border: 1px solid lightgray;
    }

    .tailwind-dark .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header, .tailwind .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
        border-radius: 6px;
    }

    .property-section.dashboard .e-input-group.e-control-wrapper {
        width: 122px;
    }

</style>

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the properties of DashboardLayout component from the property pane. Select any combination of properties from the property pane to customize the DashboardLayout.
        </p>
    </div>

}

@section Description{
    <div id="description">
        <p>
            This sample allows to configure the <code><a href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Layouts.DashboardLayout.html#Syncfusion_EJ2_Layouts_DashboardLayout_CellSpacing" target="_blank" aria-label="Navigate to the cellSpacing property reference for ASP.NET Core DashboardLayout control">cellSpacing</a></code>,
            <code><a href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Layouts.DashboardLayout.html#Syncfusion_EJ2_Layouts_DashboardLayout_AllowFloating" target="_blank" aria-label="Navigate to the AllowFloating property reference for ASP.NET Core DashboardLayout control">allowFloating</a></code> and
            <code><a href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Layouts.DashboardLayout.html#Syncfusion_EJ2_Layouts_DashboardLayout_AllowResizing" target="_blank" aria-label="Navigate to the AllowResizing property reference for ASP.NET Core DashboardLayout control">allowResizing</a></code> properties of the dashboard layout component.
        </p>
    </div>

}
@section Title{
                    <title>ASP.NET Core Dashboard Layout API Example - Syncfusion Demos </title>
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the API in ASP.NET Core Dashboard Layout control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of API in ASP.NET Core Dashboard Layout Control</h1>
                }
