@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;

@section ControlsSection {
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <ejs-gantt id='UndoRedo' dataSource="@GanttData.UndoRedoData()" gridLines="Both" allowResizing="true"
                    allowSorting="true" enableContextMenu="true" treeColumnIndex="1" height="650px" rowHeight="46"
                    toolbarClick="toolbarClick" taskbarHeight="25" allowSelection="true" highlightWeekends="true"
                    allowFiltering="true" actionComplete="actionComplete" resizeStop="resizeStop" allowRowDragAndDrop="true" enableUndoRedo="true"
                    allowReordering="true" projectStartDate="06/24/2025" projectEndDate="08/31/2025"
                    toolbar="@(new List<object>() { "Add", "Edit", "Update", "Delete", "Cancel", "Search",
                                                        new { text = "Undo", tooltipText = "Undo", id = "Undo" },
                                                        new { text = "Redo", tooltipText = "Redo", id = "Redo" }
                                                    })"
                    undoRedoActions="@(new List<string>() { "Sorting", "Add", "ColumnReorder", "ColumnResize", "ColumnState", "Delete", "Edit", "Filtering", "Indent", "Outdent", "NextTimeSpan", "PreviousTimeSpan", "RowDragAndDrop", "Search" })">
                    <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate" endDate="EndDate"
                        duration="Duration" progress="Progress" dependency="Predecessor" child="SubTasks" notes="Notes">
                    </e-gantt-taskfields>
                    <e-gantt-columns>
                        <e-gantt-column field="TaskId" width="80"></e-gantt-column>
                        <e-gantt-column field="TaskName" headerText="Job Name" width="250"
                            clipMode="EllipsisWithTooltip"></e-gantt-column>
                        <e-gantt-column field="StartDate"></e-gantt-column>
                        <e-gantt-column field="Duration"></e-gantt-column>
                        <e-gantt-column field="Progress"></e-gantt-column>
                        <e-gantt-column field="Predecessor"></e-gantt-column>
                    </e-gantt-columns>
                    <e-gantt-splittersettings columnIndex="2"></e-gantt-splittersettings>
                    <e-gantt-editsettings allowAdding="true" allowEditing="true" allowDeleting="true"
                        allowTaskbarEditing="true" showDeleteConfirmDialog="true"></e-gantt-editsettings>
                    <e-gantt-labelSettings rightLabel="TaskName"></e-gantt-labelSettings>
                    <e-gantt-timelinesettings>
                        <e-timelinesettings-toptier unit="Week" format="MMM dd, y"></e-timelinesettings-toptier>
                        <e-timelinesettings-bottomtier unit="Day"></e-timelinesettings-bottomtier>
                    </e-gantt-timelinesettings>
                    <e-gantt-editdialogfields>
                        <e-gantt-editdialogfield type="General"></e-gantt-editdialogfield>
                        <e-gantt-editdialogfield type="Dependency"></e-gantt-editdialogfield>
                        <e-gantt-editdialogfield type="Notes"></e-gantt-editdialogfield>
                    </e-gantt-editdialogfields>
                </ejs-gantt>
            </div>
        </div>
    </div>
    <script>
        function toolbarClick(args) {
            var ganttObj = document.getElementById("UndoRedo").ej2_instances[0];
            if (args.item.text === "Undo") {
                ganttObj.undo();
            } else if (args.item.text === "Redo") {
                ganttObj.redo();
            }
            updateBadges();
        }

        function actionComplete() {
            updateBadges();
        }
        function resizeStop() {
            updateBadges();
        }
        document.addEventListener('DOMContentLoaded', function () {
            var ganttObj = document.getElementById("UndoRedo").ej2_instances[0];
            var toolbar = document.querySelector(".e-gantt-toolbar");
            if (toolbar) {
                var undoBtn = toolbar.querySelector('[aria-label="Undo"]');
                var redoBtn = toolbar.querySelector('[aria-label="Redo"]');
                if (undoBtn) {
                    undoBtn.classList.add("e-overlay");
                }
                if (redoBtn) {
                    redoBtn.classList.add("e-overlay");
                }
                if (redoBtn.classList.contains("e-overlay") && undoBtn.classList.contains("e-overlay")) {
                    undoBtn.style.pointerEvents = "none";
                    redoBtn.style.pointerEvents = "none";
                    undoBtn.style.boxShadow = "0 0 0 transparent";
                    redoBtn.style.boxShadow = "0 0 0 transparent";
                }
                else {
                    undoBtn.style.boxShadow = "";
                    redoBtn.style.boxShadow = "";
                }
                updateBadges();
            }
        });

        function updateBadges() {
            var ganttObj = document.getElementById("UndoRedo").ej2_instances[0];
            var toolbar = document.querySelector(".e-gantt-toolbar");
            var undoBtn = toolbar ? toolbar.querySelector('[aria-label="Undo"]') : null;
            var redoBtn = toolbar ? toolbar.querySelector('[aria-label="Redo"]') : null;
            var undoCount = ganttObj.getUndoActions().length;
            var redoCount = ganttObj.getRedoActions().length;

            if (undoBtn) {
                if (undoCount === 0) {
                    undoBtn.classList.add("e-overlay");
                    undoBtn.style.cursor = "default";
                    undoBtn.style.pointerEvents = "none";
                } else {
                    undoBtn.classList.remove("e-overlay");
                    undoBtn.style.cursor = "pointer";
                    undoBtn.style.pointerEvents = "auto";
                }
            }

            if (redoBtn) {
                if (redoCount === 0) {
                    redoBtn.classList.add("e-overlay");
                    redoBtn.style.cursor = "default";
                    redoBtn.style.pointerEvents = "none";

                } else {
                    redoBtn.classList.remove("e-overlay");
                    redoBtn.style.cursor = "pointer";
                    redoBtn.style.pointerEvents = "auto";

                }
            }

            if (redoBtn.classList.contains("e-overlay")) {
                redoBtn.style.boxShadow = "0 0 0 transparent";
            } else {
                redoBtn.style.boxShadow = ""; // Clears inline style, allowing CSS to apply
            }

            if (undoBtn.classList.contains("e-overlay")) {
                undoBtn.style.boxShadow = "0 0 0 transparent";
            } else {
                undoBtn.style.boxShadow = ""; // Clears inline style
            }
            setBadge(undoBtn, undoCount);
            setBadge(redoBtn, redoCount);
        }

        function setBadge(button, count) {
            if (!button) return;
            var badge = button.querySelector(".e-badge.e-badge-danger.e-badge-notification.e-badge-overlap.e-badge-circle");
            if (!badge) {
                badge = document.createElement("span");
                badge.className = "e-badge e-badge-danger e-badge-notification e-badge-overlap e-badge-circle";
                button.appendChild(badge);
            }
            var tailwind3 = document.body.classList.contains('tailwind3') ||
                document.body.classList.contains('tailwind3-dark');
            var bootstrap5 = document.body.classList.contains('bootstrap5.3') ||
                document.body.classList.contains('bootstrap5.3-dark');
            var material3 = document.body.classList.contains('material3-dark') ||
                document.body.classList.contains('material3');
            var fluent2 = document.body.classList.contains('fluent2-dark') ||
                document.body.classList.contains('fluent2');
            var fluent = document.body.classList.contains('fluent-dark') ||
                document.body.classList.contains('fluent');
            if (tailwind3) {
                badge.style.backgroundColor = "#c2410c";
                badge.style.color = "#fff";
                badge.style.marginTop = "3px";
                badge.style.paddingTop = "2px";

            }
            else if (bootstrap5) {
                badge.style.backgroundColor = "#ffc107";
                badge.style.color = "#000";
                badge.style.paddingTop = "3px";
                badge.style.marginTop = "6px";

            }
            else if (fluent2) {
                badge.style.backgroundColor = "#fde300";
                badge.style.color = "#000";
                badge.style.paddingTop = "4px";
                badge.style.marginTop = "6px";
            }
            else if (fluent) {
                badge.style.backgroundColor = "#fde300";
                badge.style.color = "#000";
                badge.style.paddingTop = "2px";
                badge.style.marginTop = "8px";
            }
            else if (material3) {
                badge.style.backgroundColor = "#b3261e";
                badge.style.color = "#fff";
                badge.style.paddingTop = "3px";

            }
            badge.textContent = count;
            badge.style.display = count > 0 ? "inline-block" : "none";
        }
    </script>
    <style>
        #Undo,
        #Redo {
            position: relative;
            overflow: visible;
            /* Allow the badge to overflow outside the button if needed */
        }

        #UndoRedo_Gantt_Toolbar {
            overflow: hidden;
        }

        #UndoRedo .e-badge.e-badge-danger.e-badge-notification.e-badge-overlap.e-badge-circle {
            margin-top: 6px;
            z-index: 4;
        }

        .fluent2-highcontrast #UndoRedo .e-badge.e-badge-danger.e-badge-notification.e-badge-overlap.e-badge-circle {
            margin-top: 7px;
            z-index: 4;
        }
    </style>
}


@section ActionDescription {
    <div id="action-description">
        <p>This sample showcases the undo-redo functionality in the Gantt Chart, allowing users to revert or reapply their recent actions such as task edits, additions, and deletions.</p>
    </div>
}
@section Description {

    <div id="description">
         <p>The undo feature lets users reverse the most recent changes made to tasks, dependencies, columns, or timeline settings. The redo feature restores actions that were previously undone. Both can be triggered using keyboard shortcuts (<code>Ctrl + Z</code> for Undo, <code>Ctrl + Y</code> for Redo) or via toolbar buttons.</p>
    <p>
        You can configure which actions are tracked using the <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/api/gantt/#undoredoactions">undoRedoActions</a> property. Supported actions include: 
        <code>Edit</code>, <code>Add</code>, <code>Delete</code>, <code>Sorting</code>, <code>ColumnReorder</code>, <code>ColumnResize</code>, <code>Search</code>, <code>Filtering</code>, <code>ZoomIn</code>, <code>ZoomOut</code>, <code>ZoomToFit</code>, <code>ColumnState</code>, <code>Indent</code>, <code>Outdent</code>, <code>RowDragAndDrop</code>, <code>TaskbarDragAndDrop</code>, <code>PreviousTimeSpan</code>, and <code>NextTimeSpan</code>
    </p>
    <p>The number of undo-redo steps stored can be controlled using the <code>undoRedoStepsCount</code> property, which defaults to 10.</p>
    <p>
        In this demo, the undo-redo feature is enabled by setting <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/api/gantt/#enableundoredo">
        enableUndoRedo</a> to <code>true</code>
    </p>
    <br>
    <p>More information on the Essential<sup>®</sup> JS2 Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/undo-redo">documentation section</a>.</p>
    </div>
}
@section Meta {
    <meta name="description"
        content="This example demonstrates the Undo Redo in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title {
    <title>ASP.NET Core Gantt Undo Redo Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Undo Redo in ASP.NET Core Gantt Control</h1>
}
