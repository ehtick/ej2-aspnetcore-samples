@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;

@section ControlsSection {
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <div class="content-wrapper">
                    <ejs-gantt id='Baseline' dataSource="GanttData.BaselineData()" height="650px" rowHeight="46"
                        taskbarHeight="25" undoRedoActions="@(new string[] { "Add", "Edit", "Delete" })"
                        parentTaskbarTemplate='#parenttask' enableUndoRedo="true" queryTaskbarInfo="queryTaskbarInfo"
                        queryCellInfo="queryCellInfo" allowPdfExport="true" dataBound="ganttdataBound" allowResizing="true"
                        treeColumnIndex="1" gridLines="Horizontal" renderBaseline="true" includeWeekend="true"
                        allowSelection="true" projectStartDate="07/02/2025" projectEndDate="09/15/2025">
                        <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate" endDate="EndDate"
                            baselineStartDate="BaselineStartDate" baselineEndDate="BaselineEndDate" duration="Duration"
                            baselineDuration="Duration" parentID="ParentID" dependency="Predecessor" progress="Progress">
                        </e-gantt-taskfields>
                        <e-gantt-columns>
                            <e-gantt-column field="TaskId" visible="false" headerText="Task ID"></e-gantt-column>
                            <e-gantt-column field="TaskName" headerText="Task Name" allowReordering="false"
                                width="200"></e-gantt-column>
                            <e-gantt-column field="StartDate" width="105"></e-gantt-column>
                            <e-gantt-column field="Duration" width="95"></e-gantt-column>
                            <e-gantt-column field="BaselineStartDate" headerText="Baseline StartDate"
                                width="162"></e-gantt-column>
                            <e-gantt-column field="BaselineDuration" headerText="Baseline Duration" width="156"
                                editType="stringedit"></e-gantt-column>
                            <e-gantt-column field="variance" headerText="Variance" width="97"
                                allowEditing="false"></e-gantt-column>
                        </e-gantt-columns>
                        <e-gantt-timelinesettings>
                            <e-timelinesettings-toptier unit="Month" format="MMMM yyyy"></e-timelinesettings-toptier>
                            <e-timelinesettings-bottomtier unit="Day"></e-timelinesettings-bottomtier>
                        </e-gantt-timelinesettings>
                        <e-gantt-splittersettings columnIndex="4"></e-gantt-splittersettings>
                        <e-gantt-labelsettings rightLabel="#rightLabel"></e-gantt-labelsettings>
                        <e-gantt-tooltipsettings taskbar="#tooltip"></e-gantt-tooltipsettings>
                        <e-gantt-dayworkingtimecollection>
                            <e-gantt-dayworkingtime from="0" to="24"></e-gantt-dayworkingtime>
                        </e-gantt-dayworkingtimecollection>
                    </ejs-gantt>
                </div>
                <div style="float: right; margin:10px 10px 0px 0px;">
                    Source:
                    <a href="https://en.wikipedia.org/wiki/Service_(motor_vehicle)" target='_blank'
                        aria-label="Navigate to the wikipedia about the motor vehicle service">https://en.wikipedia.org/</a>
                </div>
            </div>
        </div>
    </div>
    <script type="text/x-jsrender" id="tooltip">
                <table>
                    <tbody>
                        <tr><td colspan="3">${TaskName}</td></tr>
                        <tr>
                            <td > Start Time </td> <td>:</td>
                            <td>${this.getFormatedDate(StartDate)}</td>
                        </tr>
                        <tr>
                            <td> End Time</td> <td>:</td>
                            <td >${this.getFormatedDate(EndDate)}</td>
                        </tr>
                        <tr>
                            <td> Planned start time</td> <td>:</td>
                            <td>${this.getFormatedDate(BaselineStartDate)}</td>
                        </tr>
                        <tr>
                            <td> Planned end time</td> <td>:</td>
                            <td>${this.getFormatedDate(BaselineEndDate)}</td>
                            </tr>
                    </tbody>
                </table>
            </script>
    <script type="text/x-jsrender" id="parenttask">
                <div class="e-gantt-parent-taskbar e-row-expand e-custom-parent" style="height:10px; margin-top: 17px; background:#F3F4F6; border: 1px solid #9CA3AF; border-radius:5px;text-overflow:ellipsis;" >

                    <div class="e-gantt-child-progressbar e-custom-progress" style="height:100%; width:${ganttProperties.progress}%; background:#9CA3AF; border-radius:5px;">

                    </div>
                    <span class="e-label" style="position:absolute; top:0px; right:6px; font-size:12px; margin: 0px; text-overflow:ellipsis; white-space:nowrap;">${TaskName} | ${this.getFormatedDate(ganttProperties.startDate)} - ${this.getFormatedDate(ganttProperties.endDate)} | ${ganttProperties.duration} days</span>
                </div>
        
            </script>
    <script type="text/x-template" id="rightLabel">
                    ${if(ganttProperties.parentId)}
                        <span class='e-label'>${TaskName}</span>
                    ${/if}
            </script>
    <script>
        // Theme color definitions
        var themeColors = {
            'material3': {
                onTime: '#F0FDF4',
                delayed: '#FFF7ED',
                baseline: '#DAA520',
                onTimeProgress: '#15803D',
                delayedProgress: '#C2410C'
            },
            'material3-dark': {
                onTime: '#122A2C',
                delayed: '#282125',
                baseline: '#9CA3AF',
                onTimeProgress: '#22C55E',
                delayedProgress: '#FB923C'
            },
            'tailwind3': {
                onTime: '#F0FDF4',
                delayed: '#FFF7ED',
                baseline: '#DAA520',
                onTimeProgress: '#15803D',
                delayedProgress: '#C2410C'
            },
            'tailwind3-dark': {
                onTime: '#122A2C',
                delayed: '#282125',
                baseline: '#9CA3AF',
                onTimeProgress: '#22C55E',
                delayedProgress: '#FB923C'
            },
            'bootstrap5.3': {
                onTime: '#F0FDF4',
                delayed: '#FFF7ED',
                baseline: '#DAA520',
                onTimeProgress: '#15803D',
                delayedProgress: '#C2410C'
            },
            'bootstrap5.3-dark': {
                onTime: '#122A2C',
                delayed: '#282125',
                baseline: '#9CA3AF',
                onTimeProgress: '#22C55E',
                delayedProgress: '#FB923C'
            },
            'fluent2': {
                onTime: '#F0FDF4',
                delayed: '#FFF7ED',
                baseline: '#DAA520',
                onTimeProgress: '#15803D',
                delayedProgress: '#C2410C'
            },
            'fluent2-dark': {
                onTime: '#122A2C',
                delayed: '#282125',
                baseline: '#9CA3AF',
                onTimeProgress: '#22C55E',
                delayedProgress: '#FB923C'
            },
            'fluent2-highcontrast': {
                onTime: '#122A2C',
                delayed: '#282125',
                baseline: '#9CA3AF',
                onTimeProgress: '#22C55E',
                delayedProgress: '#FB923C'
            }
        };

        function ganttdataBound() {
            var gantt = document.getElementById("Baseline").ej2_instances[0];
            gantt.autoFitColumns(['TaskId','TaskName', 'StartDate', 'Duration', 'BaselineStartDate', 'baselineDur', 'variance']);
        }
        function getCurrentTheme() {
            var bodyClasses = document.body.className.split(' ');
            if (bodyClasses.indexOf('material3-dark') !== -1) return 'material3-dark';
            if (bodyClasses.indexOf('tailwind3-dark') !== -1) return 'tailwind3-dark';
            if (bodyClasses.indexOf('bootstrap5.3-dark') !== -1) return 'bootstrap5.3-dark';
            if (bodyClasses.indexOf('fluent2-dark') !== -1) return 'fluent2-dark';
            if (bodyClasses.indexOf('fluent2-highcontrast') !== -1) return 'fluent2-highcontrast';
            if (bodyClasses.indexOf('material3') !== -1) return 'material3';
            if (bodyClasses.indexOf('tailwind3') !== -1) return 'tailwind3';
            if (bodyClasses.indexOf('bootstrap5.3') !== -1) return 'bootstrap5.3';
            return 'fluent2';
        }

        var currentTheme = getCurrentTheme();
        var colors = themeColors[currentTheme];

        // Set baselineColor dynamically after Gantt initialization
        document.addEventListener('DOMContentLoaded', function () {
            var gantt = document.getElementById('Baseline').ej2_instances[0];
            gantt.baselineColor = colors.baseline;
        });
        function queryTaskbarInfo(args) {
            var taskbarColor = !args.data.ganttProperties.baselineStartDate || !args.data.ganttProperties.baselineEndDate || args.data.ganttProperties.startDate <= args.data.ganttProperties.baselineStartDate ? colors.onTime : colors.delayed;
            var progressColor = !args.data.ganttProperties.baselineStartDate || !args.data.ganttProperties.baselineEndDate || args.data.ganttProperties.startDate <= args.data.ganttProperties.baselineStartDate ? colors.onTimeProgress : colors.delayedProgress;
            if (args.taskbarType !== 'ParentTask') {
                if (currentTheme === 'material3' || currentTheme === 'material3-dark') {
                    if (args.taskbarType !== 'Milestone') {
                        args.taskbarElement.querySelectorAll('.e-gantt-child-taskbar-inner-div')[0].style.setProperty('background', taskbarColor, 'important');
                    } else {
                        args.taskbarElement.querySelectorAll('.e-gantt-milestone')[0].style.setProperty('border', progressColor, 'important');
                        args.rowElement.querySelectorAll('.e-baseline-gantt-milestone-container')[0].style.setProperty('border', colors.baseline, 'important');
                    }
                }
                args.taskbarBgColor = taskbarColor;
                args.milestoneColor = progressColor;
                args.taskbarBorderColor = progressColor;
                args.progressBarBgColor = progressColor;
            }
        }

        function queryCellInfo(args) {
            if (args.column.field === "variance") {
                var start = args.data.ganttProperties.startDate;
                var baselineStart = args.data.ganttProperties.baselineStartDate;
                var baselineEnd = args.data.ganttProperties.baselineEndDate;
                if (!baselineStart || !baselineEnd || !start || start <= baselineStart) {
                    args.data.variance = 0;
                    args.data.taskData.variance = 0;
                    args.cell.innerText = "0 days";
                    return;
                }
                var diffInDays = (start - baselineStart) / (1000 * 60 * 60 * 24);
                var roundedDiff = Math.round(diffInDays);
                args.data.variance = roundedDiff;
                args.data.taskData.variance = roundedDiff;
                args.cell.innerText = roundedDiff + " days";
            }
        }
    </script>
    <style>
        .e-baseline-bar {
            height: 6px !important;
        }

        .fluent2-highcontrast .e-custom-parent,
        .e-dark-mode .e-custom-parent {
            background: #232937 !important;
            border: 1px solid #2F3542 !important;
        }

        .fluent2-highcontrast .e-custom-progress,
        .e-dark-mode .e-custom-progress {
            background: #2F3542 !important;
        }
    </style>
}

@section ActionDescription {
    <div id="action-description">
        <p>This sample visualizes the complete car service schedule using the Gantt Chart. Baselines are enabled
            to highlight deviations between planned and actual service dates, helping track schedule accuracy across all
            tasks and milestones.</p>
    </div>
}
@section Description {
     <p> In this demo sample, the baseline feature in the Gantt Chart, which helps visualize the variance between planned and actual task 
        schedules. Baselines provide a clear reference for tracking project deviations and are rendered for all task types including child tasks, 
        parent tasks, and milestones.</p>
    <p>To enable baselines in the Gantt Chart, set the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_RenderBaseline">renderBaseline</a> property to <code>true</code> and define the planned schedule using the 
        <code>baselineStartDate</code> field. You can either specify the <code>baselineEndDate</code> directly or use the <code>baselineDuration</code> property to calculate it 
        automatically. Setting <code>baselineDuration</code> to zero is particularly useful for milestones, as it clearly marks a planned point in time. 
        The appearance of baselines can be customized using the <code><a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_BaselineColor"></a></code> property to visually distinguish planned timelines from actual 
        task progress.timelines from actual progress.</p>
    <p>More information on the Essential<sup>®</sup> ASP.NET Core Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/baseline">documentation section</a>.</p>
}
@section Meta {
    <meta name="description"
        content="This example demonstrates the Baseline in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title {
    <title>ASP.NET Core Gantt Baseline Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Baseline in ASP.NET Core Gantt Control</h1>
}