@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;

@section ControlsSection {
    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <div class="container switch-control" style="display: flex; gap: 20px; align-items: center;">
                    <div style="display: flex; align-items: center;">
                        <label class="overlapgantt" for="checked" style="margin-right: 10px; font-size: 15px;"> Allow
                            Taskbar DragAndDrop </label>
                        <ejs-switch id="checked" change="dragDropChange"></ejs-switch>
                    </div>
                    <div style="display: flex; align-items: center;">
                        <label class="overlapgantt" for="unchecked" style="margin-right: 10px; font-size: 15px;"> Allow
                            Taskbar Overlap </label>
                        <ejs-switch id="unchecked" change="overlapChange" checked="true"></ejs-switch>
                    </div>
                </div>
                <div>
                    <ejs-gantt id='ResourceMultiTaskbar' dataSource="@GanttData.MultiTaskbarData()"
                        resources="@GanttData.MultitaskbarResource()" viewType="ResourceView" allowResizing="true"
                        allowSelection="true" highlightWeekends="true" treeColumnIndex="1" height="650px" rowHeight="46"
                        taskbarHeight="25" showOverAllocation="true" enableMultiTaskbar="true" projectStartDate="03/26/2025"
                        projectEndDate="05/30/2025" taskType="FixedWork"
                        toolbar="@(new List<string>() { "Add", "Edit", "Update", "Delete", "Cancel", "ExpandAll", "CollapseAll" })">
                        <e-gantt-editsettings allowAdding="true" allowEditing="true" allowDeleting="true"
                            allowTaskbarEditing="true" showDeleteConfirmDialog="true"></e-gantt-editsettings>
                        <e-gantt-columns>
                            <e-gantt-column field="TaskId" visible="false"></e-gantt-column>
                            <e-gantt-column field="TaskName" headerText="Name" width="250"></e-gantt-column>
                            <e-gantt-column field="Work" headerText="Work"></e-gantt-column>
                            <e-gantt-column field="Progress"></e-gantt-column>
                            <e-gantt-column field="ResourceGroup" headerText="Group"></e-gantt-column>
                            <e-gantt-column field="StartDate"></e-gantt-column>
                            <e-gantt-column field="Duration"></e-gantt-column>
                        </e-gantt-columns>
                        <e-gantt-labelSettings taskLabel="TaskName"></e-gantt-labelSettings>
                        <e-gantt-splitterSettings columnIndex="2"></e-gantt-splitterSettings>

                        <e-gantt-resourcefields id="ResourceId" name="ResourceName" unit="ResourceUnit"
                            group="ResourceGroup">
                        </e-gantt-resourcefields>
                        <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate" endDate="EndDate"
                            duration="Duration" progress="Progress" dependency="Predecessor" child="SubTasks" work="Work"
                            expandState="IsExpand" resourceInfo="Resources">
                        </e-gantt-taskfields>
                    </ejs-gantt>
                </div>
            </div>
        </div>
    </div>
    <style>
        .e-bigger .overlapgantt {
            margin: 5px 5px 0px 5px !important;
        }
    </style>
    <script>
        function dragDropChange(args) {
            var ganttObj = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            if (args.checked) {
                ganttObj.allowTaskbarDragAndDrop = true;
            } else {
                ganttObj.allowTaskbarDragAndDrop = false;
            }
        }
        function overlapChange(args) {
            var ganttObj = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            if (args.checked) {
                ganttObj.allowTaskbarOverlap = true;
            } else {
                ganttObj.allowTaskbarOverlap = false;
            }
        }
    </script>
}

@section ActionDescription {
    <div id="action-description">
        <p>This sample demonstrates how to visualize a list of tasks assigned to a resource within a collapsed parent row.
            It also allows modifying task scheduling actions such as dragging, left resizing, and progress editing while
            keeping the parent row collapsed.
            This functionality can be enabled by setting the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableMultiTaskbar">enableMultiTaskbar</a>
            property to <code>true</code>.
        </p>
    </div>

}
@section Description {

    <div id="description">
        <p>
            This example demonstrates how to enable taskbar drag-and-drop functionality for reassigning tasks between
            resources vertically by setting the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowRowDragAndDrop">allowTaskbarDragAndDrop</a>
            property to true.
            Additionally, you can prevent taskbar overlap within a resource's tasks by disabling the <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_AllowTaskbarOverlap">allowTaskbarOverlap</a>
            property.
        </p>
        <p>
            In this example, resources are assigned to tasks using predefined resource IDs, allowing efficient task
            distribution. The resource details are displayed using the LabelSetting <code>labelSetting</code> property.
            You can also perform CRUD operations on resource allocation using toolbar actions, considering availability and
            task complexity.
        </p>
        <p>The resources and their assigned tasks are grouped into categories. Resources can be mapped using the following
            <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_ResourceFields">resourceFields:</a>.
        </p>
        <p><code>ID</code>: Maps the resource ID.</p>
        <p><code>Name</code>: Maps the resource name.</p>
        <p><code>Unit</code>: Maps the resource unit.</p>
        <p><code>Group</code>: Maps the resource group.</p>

        <p style="font-weight: 500">Injecting module:</p>
        <p>
            The Gantt control features are segregated into individual feature-wise modules. To use a selection, inject the
            <code>Selection</code> module using the <code>Gantt.Inject(Selection)</code> method. To use markers, inject the
            <code>DayMarkers</code> module using the <code>Gantt.Inject(DayMarkers)</code> method.
            To edit, inject the <code>Toolbar</code> module using the <code>Gantt.Inject(Toolbar)</code> method and
            <code>Edit</code> module
            using the <code>Gantt.Inject(Edit)</code> method.
        </p>
        <br>
    <p>More information on the Essential<sup>®</sup> Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/multi-taskbar">documentation section</a>.</p>
    </div>

}
@section Meta {
    <meta name="description"
        content="This example demonstrates the Resource Multi Taskbar in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title {
    <title>ASP.NET Core Gantt Resource Multi Taskbar Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Resource Multi Taskbar in ASP.NET Core Gantt Control</h1>
}
