@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;

@section ControlsSection{

    <div class="control-section">
        <div class="row">
            <div class="col-md-12">
                <ejs-gantt id='VirtualScroll' dataSource="@GanttData.VirtualData()" 
height="650px" rowHeight="46" taskbarHeight="25"
 enableTimelineVirtualization="true"
                           highlightWeekends="true" enableVirtualization="true" allowSelection="true" gridLines="Both" treeColumnIndex="1" projectStartDate="04/01/2025" projectEndDate="2/31/2030">
                    <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate"
                                        duration="Duration" progress="Progress" parentID="ParentID">
                    </e-gantt-taskfields>
                    <e-gantt-columns>
                        <e-gantt-column field="TaskId"></e-gantt-column>
                        <e-gantt-column field="TaskName" width="200px"></e-gantt-column>
                        <e-gantt-column field="StartDate"></e-gantt-column>
                        <e-gantt-column field="Duration"></e-gantt-column>
                        <e-gantt-column field="Progress"></e-gantt-column>
                    </e-gantt-columns>
                    <e-gantt-labelSettings taskLabel="Progress"></e-gantt-labelSettings>
                    <e-gantt-splittersettings columnIndex="2"></e-gantt-splittersettings>
                </ejs-gantt>
            </div>
        </div>
    </div>

}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the Virtual Scroll support in the Gantt Chart. This feature allows users to load a large amount of data effectively. It also reduces the DOM element's weight by virtually updating DOM during the vertical scroll and also in timeline during horizontal scroll.
        </p>
    </div>
}
@section Description{

    <div id="description">
        <p>
            Virtualization support is used to render large number of tasks in Gantt with effective performance. In this mode all the tasks are fetched from data source initially, then some of the records are rendered in DOM which are compact to the current viewport area. While scrolling, tasks are updated in DOM as per current viewport position. This mode can be enabled by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableVirtualization">enableVirtualization</a> property as true. Additionally, the Gantt component now includes the timeline virtualization feature by setting the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableTimelineVirtualization">enableTimelineVirtualization</a> to true.
        </p>
        <p>This demo highlights the utilization of row and timeline virtualization features within the Gantt.</p>
        <p>By default during Virtual scroll Shimmer effect is enabled you can disable this by changing <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_EnableVirtualMaskRow">enableVirtualMaskRow</a> to false</p>
       <br>
    <p>More information on the Essential<sup>®</sup> Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/virtual-scroll">documentation section</a>.</p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Virtual Scrolling in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title{
    <title>ASP.NET Core Gantt Virtual Scrolling Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Virtual Scrolling in ASP.NET Core Gantt Control</h1>
}
