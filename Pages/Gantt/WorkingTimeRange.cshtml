@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;

@section ControlsSection {

    <div class="control-section">
        <div class="col-lg-8 control-section">
            <div class="content-wrapper">
                <div id="container">
                    <ejs-gantt id='WorkingTimeRange' dataSource="@GanttData.WorkTimeRange()" treeColumnIndex="1"
                        height="650px" rowHeight="46" taskbarHeight="25" highlightWeekends="true"
                        projectStartDate="04/02/2025" projectEndDate="04/28/2025" durationUnit="Hour">
                        <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate" endDate="EndDate"
                            duration="Duration" progress="Progress" dependency="Predecessor" child="SubTasks">
                        </e-gantt-taskfields>
                        <e-gantt-columns>
                            <e-gantt-column field="TaskId" visible="false" width="80"></e-gantt-column>
                            <e-gantt-column field="TaskName" headerText="Name" width="250"
                                clipMode="EllipsisWithTooltip"></e-gantt-column>
                            <e-gantt-column field="StartDate"></e-gantt-column>
                            <e-gantt-column field="Duration"></e-gantt-column>
                            <e-gantt-column field="Progress"></e-gantt-column>
                            <e-gantt-column field="Predecessor"></e-gantt-column>
                        </e-gantt-columns>
                        <e-gantt-splitterSettings columnIndex="1"></e-gantt-splitterSettings>
                        <e-gantt-timelineSettings>
                            <e-timelinesettings-toptier unit="Day"></e-timelinesettings-toptier>
                            <e-timelinesettings-bottomtier unit="Hour"></e-timelinesettings-bottomtier>
                        </e-gantt-timelineSettings>
                        <e-gantt-labelSettings leftLabel="TaskName"></e-gantt-labelSettings>
                    </ejs-gantt>
                </div>
            </div>
        </div>
        <div class="col-lg-4 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <colgroup>
                    <col style="width:55%" />
                    <col style="width:45%" />
                </colgroup>
                <tr>
                    <td style="width:100%">
                        <label htmlFor='Time range'>Time Range for all days</label>
                    </td>
                </tr>
                <tr>
                    <td style="width:100%">
                        <div style="font-size: 15px;">Work Start Time</div>
                    </td>
                    <td style="width:100%">
                        <div style="padding-top: 0px; width: 150px">
                            <ejs-numerictextbox id="WorkStartTime" min="0" max="24" value="8" change="Change1"
                                showSpinButton="true" step="0.5">
                            </ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:100%">
                        <div style="font-size: 15px;">Work End Time</div>
                    </td>
                    <td style="width:100%">
                        <div style="padding-top: 10px;">
                            <ejs-numerictextbox id="WorkEndTime" min="0" max="24" value="17" change="Change1"
                                showSpinButton="true" step="0.5">
                            </ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 100%">
                        <div>
                            <ejs-button style="margin:10px;" id="update" content="update"></ejs-button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:30%">
                        <label style="margin-top: 20px;">Time Range for each day</label>
                    </td>
                </tr>
                <tr>
                    <td style="width:30%">
                        <div>Working Days</div>
                    </td>
                    <td style="width:70%">
                        <div id="Days" style="padding-left: 0px;width: 150px;">
                            <ejs-dropdownlist id="dropdown" dataSource="@GanttData.GetDays()" select="SelectedDay"
                                popupHeight="220px" value="@GanttData.GetWorkWeek()">
                                <e-dropdownlist-fields value="id" text="day"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:30%;">
                        <div for="Start">Work Start Time</div>
                    </td>
                    <td style="width:70%">
                        <div style="padding-top: 10px;">
                            <ejs-numerictextbox id="WorkStart" min="0" max="24" value="8" change="Change2"
                                showSpinButton="true" step="0.5">
                            </ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:30%;">
                        <div for="End">Work End Time</div>
                    </td>
                    <td style="width:70%">
                        <div style="padding-top: 10px;">
                            <ejs-numerictextbox id="WorkEnd" min="0" max="24" value="17" change="Change2"
                                showSpinButton="true" step="0.5">
                            </ejs-numerictextbox>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width: 100%">
                        <div>
                            <ejs-button style="margin:10px;" id="perform" content="update"></ejs-button>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <script>
        document.getElementById('perform').onclick = function () {
            var selectedDay = document.getElementById('dropdown').ej2_instances[0].value;
            var startTime = document.getElementById('WorkStart').ej2_instances[0].value;
            var endTime = document.getElementById('WorkEnd').ej2_instances[0].value;
            var ganttChart = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            var workingTime = [];
            var weekWorkingTime = ganttChart.weekWorkingTime;
            var isUpdated = false;
            for (var i = 0; i < weekWorkingTime.length; i++) {
                workingTime.push({ dayOfWeek: weekWorkingTime[i].dayOfWeek, timeRange: weekWorkingTime[i].timeRange });
            }
            for (var i = 0; i < workingTime.length; i++) {
                if (workingTime[i].dayOfWeek === selectedDay) {
                    workingTime[i].dayOfWeek = workingTime[i].dayOfWeek;
                    workingTime[i].timeRange = [{ from: startTime, to: endTime }]
                    isUpdated = true;
                    break;
                }
            }
            if (!isUpdated) {
                workingTime.push({ dayOfWeek: selectedDay, timeRange: [{ from: startTime, to: endTime }] });
            }
            ganttChart.weekWorkingTime = workingTime;
        }
        document.getElementById('update').onclick = function () {
            var ganttChart = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            var startTime = document.getElementById('WorkStartTime').ej2_instances[0].value;
            var endTime = document.getElementById('WorkEndTime').ej2_instances[0].value;
            var workingTime = [{ from: startTime, to: endTime }];
            ganttChart.dayWorkingTime = workingTime;
        }
        function SelectedDay(args) {
            var startTime = 8;
            var endTime = 17;
            var ganttChart = document.getElementsByClassName('e-gantt')[0].ej2_instances[0];
            for (var i = 0; i < ganttChart.weekWorkingTime.length; i++) {
                if (ganttChart.weekWorkingTime[i].dayOfWeek === args.item.innerText) {
                    startTime = ganttChart.weekWorkingTime[i].timeRange[0].from;
                    endTime = ganttChart.weekWorkingTime[i].timeRange[0].to;
                    break;
                }
            }
            document.getElementById('WorkStart').ej2_instances[0].value = startTime;
            document.getElementById('WorkEnd').ej2_instances[0].value = endTime;
        }
        function Change1(args) {
            var startTime = document.getElementById('WorkStartTime').ej2_instances[0].value;
            var endTime = document.getElementById('WorkEndTime').ej2_instances[0].value;
            if (startTime >= endTime) {
                if (startTime < 24) {
                    document.getElementById('WorkEndTime').ej2_instances[0].value = startTime + 1.00;
                }
                else {
                    document.getElementById('WorkEndTime').ej2_instances[0].value = 0.00;
                }
            }
        }
        function Change2(args) {
            var startTime = document.getElementById('WorkStart').ej2_instances[0].value;
            var endTime = document.getElementById('WorkEnd').ej2_instances[0].value;
            if (startTime >= endTime) {
                if (startTime < 24) {
                    document.getElementById('WorkEnd').ej2_instances[0].value = startTime + 1.00;
                }
                else {
                    document.getElementById('WorkEnd').ej2_instances[0].value = 0.00;
                }
            }
        }
    </script>

}

@section ActionDescription {
    <div id="action-description">
        <p>
            This sample visualizes the support for changing the working hours in a day. The selected start and end hours
            from the property panel will be applied to each task available in the project.
        </p>
    </div>
}
@section Description {

    <div id="description">
        <p>
            In this example, you can see how to render a Gantt Chart with the provided data source and customizable working
            hours in a day. You can split the working hours in a day to one or more range. So, You can also provide the <a
                target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_DayWorkingTime"
                aria-label="Navigate to the dayWorkingTime property reference for ASP.NET Core Gantt Chart control">
                dayWorkingTime
            </a> property value as array of object collection. Gantt Chart also supports different <code>durationUnit</code>
            values as follows:
        <ul>
            <li><code>day</code></li>
            <li><code>hour</code></li>
            <li><code>minute</code></li>
        </ul>

        </p>
        <p>
            You can also set different working time range for different working days using <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_WeekWorkingTime"
                aria-label="Navigate to the weekWorkingTime property reference for ASP.NET Core Gantt Chart control">
                weekWorkingTime
            </a> property. The <a target="_blank"
                href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_WeekWorkingTime"
                aria-label="Navigate to the weekWorkingTime property reference for ASP.NET Core Gantt Chart control">
                weekWorkingTime
            </a> property enables you to specify different working hours for each day of the week in your Gantt Chart.
            By configuring this property, you can ensure that tasks are only scheduled during defined working periods,
            avoiding non-working hours.
        </p>
        <p>
        <p>
            Given duration in dataSource will be considered with this unit. In this demo, the <code>hour</code> unit is used
            to render taskbars in day hour timeline mode. Gantt Chart supports only 24hours format as of now. The working
            hours will differ between organizations. This feature will be helpful to keep track of each task and resource
            task status based on the working time of company.
        </p>
        <br>
    <p>More information on the Essential<sup>®</sup> Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/task-scheduling#weekendnon-working-days">documentation section</a>.</p>
    </div>
}
@section Meta {
    <meta name="description"
        content="This example demonstrates the Working Time Range in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title {
    <title>ASP.NET Core Gantt Working Time Range Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Working Time Range in ASP.NET Core Gantt Control</h1>
}
