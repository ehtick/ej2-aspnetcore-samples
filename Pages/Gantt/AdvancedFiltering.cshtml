@page
@using EJ2CoreSampleBrowser.Models;
@using Syncfusion.EJ2.Gantt;
@using Syncfusion.EJ2.Navigations;
@using Syncfusion.EJ2.Buttons;
@using Syncfusion.EJ2.QueryBuilder;

@{
    bool isSideBar = false;
    bool sidebarToggle = false;
}

@section ControlsSection {
    <div class="control-section"  style="padding-top: 0px;">
        <div class="row">
            <div class="content-wrapper">
                <div id="ganttsidebar-parent" style="overflow: hidden;">
                    <ejs-button id='filter-btn' onclick="triggerSidebar()">
                        <e-content-template>
                           <span class='e-quickfilter' style="padding: 3px"></span>
                        Advanced Filters
                        </e-content-template>
                    </ejs-button>
                        <ejs-sidebar id="ganttSidebar" isOpen="@sidebarToggle" type="Over" width="65%" target="#ganttsidebar-parent" position="Right">
                            <e-content-template>
                                <div class="ganttsidebar-header">
                                <div class="title">Advanced Filters</div>
                                <span id="close" class="e-close" onclick="handleClose()"></span>
                            </div>
                            </e-content-template>
                            <e-content-template>
                                <ejs-querybuilder id="ganttquerybuilder" dataSource="@GanttData.ProjectNewData()" allowValidation="true" ruleChange="updateRule"
                                    created="created">
                                    <e-querybuilder-columns>
                                        <e-querybuilder-column field="TaskId" label="ID" type="number"></e-querybuilder-column>
                                        <e-querybuilder-column field="TaskName" label="Task Name" type="string"></e-querybuilder-column>
                                        <e-querybuilder-column field="StartDate" label="Start Date" type="date" format="MM/dd/yyyy"></e-querybuilder-column>
                                        <e-querybuilder-column field="Duration" label="Duration" type="number"></e-querybuilder-column>
                                        <e-querybuilder-column field="EndDate" label="End Date" type="date" format="MM/dd/yyyy"></e-querybuilder-column>
                                        <e-querybuilder-column field="Progress" label="Progress" type="number"></e-querybuilder-column>
                                        <e-querybuilder-column field="Predecessor" label="Predecessor" type="string"></e-querybuilder-column>
                                    </e-querybuilder-columns>
                                </ejs-querybuilder>
                            </e-content-template>
                            <e-content-template>
                                <div class="ganttbtn-container">
                                    <ejs-button id="apply" isPrimary="true" content="Apply" onclick="handleApply()"></ejs-button>
                                    <ejs-button id="clear" content="Clear" onclick="handleClear()"></ejs-button>
                                </div>
                            </e-content-template>
                        </ejs-sidebar>
                    <ejs-gantt id='AdvancedFiltering' dataSource="@GanttData.ProjectNewData()"
                            treeColumnIndex="0" height="650px" rowHeight="46" taskbarHeight="25" allowFiltering="true"
                            includeWeekend="true"
                            projectStartDate="03/30/2025"
                            projectEndDate="07/20/2025" rowSelected="window.rowSelectEvent">
                        <e-gantt-taskfields id="TaskId" name="TaskName" startDate="StartDate"
                            endDate="EndDate" duration="Duration" dependency="Predecessor" progress="Progress"
                            parentID="ParentID">
                        </e-gantt-taskfields>
                        <e-gantt-columns>
                            <e-gantt-column field="TaskId" headerText="ID" width="120"></e-gantt-column>
                            <e-gantt-column field="TaskName" headerText="Task Name" width="250"></e-gantt-column>
                            <e-gantt-column field="StartDate"></e-gantt-column>
                            <e-gantt-column field="Duration"></e-gantt-column>
                            <e-gantt-column field="EndDate"></e-gantt-column>
                            <e-gantt-column field="Progress"></e-gantt-column>
                            <e-gantt-column field="Predecessor"></e-gantt-column>
                        </e-gantt-columns>
                        <e-gantt-splittersettings columnIndex="2"></e-gantt-splittersettings>
                        <e-gantt-labelsettings rightLabel="TaskName"></e-gantt-labelsettings>
                    </ejs-gantt>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var searchQuery;
        var sidebarToggle = false;
        var create;
        var isSideBar = false;
        var predicatevalue;
        var querybuilderevent = false;
 
        window.rowSelectEvent = function () {
            sidebarToggle = false;
            var sidebarObj = document.getElementById("ganttSidebar")?.ej2_instances[0];
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            if (isSideBar) {
                create = queryBuilderObj.getSqlFromRules();
                isSideBar = false;
                sidebarObj.isOpen = false;
            }
        }
 
        function updateRule(args) {
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            predicatevalue = queryBuilderObj.getPredicate(args.rule);
            if (args.Type == "DeleteRule" && predicatevalue != null) {
                searchQuery = new ej.data.Query().where(predicatevalue);
            } else if (predicatevalue == null && args.Type == "DeleteRule") {
                searchQuery = new ej.data.Query().select(['TaskID', 'TaskName', 'StartDate', 'Duration', 'EndDate', 'Progress', 'Predecessor']);
            }
        }
 
        function triggerSidebar() {
            var sidebarObj = document.getElementById("ganttSidebar")?.ej2_instances[0];
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            sidebarToggle = !sidebarToggle;
            isSideBar = true;
            if (querybuilderevent) {
                create = queryBuilderObj.getSqlFromRules();
            }
            sidebarObj.isOpen = true;
        }
 
        function created() {
            querybuilderevent = true;
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            if (create && create !== "") {
                queryBuilderObj.setRulesFromSql(create);
            }
        }
 
        function handleClose() {
            var sidebarObj = document.getElementById("ganttSidebar")?.ej2_instances[0];
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            sidebarObj.hide();
            create = queryBuilderObj.getSqlFromRules();
            sidebarToggle = false;
            isSideBar = false;
        }
 
        function handleApply() {
            var ganttObj = document.getElementById("AdvancedFiltering").ej2_instances[0];
            if (predicatevalue != null) {
                searchQuery = new ej.data.Query().where(predicatevalue);
            } else {
                searchQuery = new ej.data.Query().select(['TaskID','TaskName', 'StartDate', 'Duration', 'EndDate', 'Progress', 'Predecessor']);
            }
            ganttObj.query = searchQuery;
            ganttObj.refresh();
        }
 
        function handleClear() {
            var ganttObj = document.getElementById("AdvancedFiltering").ej2_instances[0];
            var queryBuilderObj = document.getElementById("ganttquerybuilder")?.ej2_instances[0];
            queryBuilderObj.reset();
            predicatevalue = null;
            searchQuery = new ej.data.Query();
            ganttObj.query = searchQuery;
            ganttObj.refresh();
        }
    </script>

    <style>
        #filter-btn {
            padding: 5px;
            margin: 5px;
            cursor: pointer;
            float: right;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        #ganttSidebar {
            height: 458px !important;
            border: 1px solid rgb(204, 202, 200) !important;
        }
        #ganttquerybuilder {
            margin: 12px;
        }
        .e-bigger {
            .e-gantt {
                .e-sidebar {
                    width: 100% !important;
                }
            }
        }
        .ganttsidebar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px;
        }
        .ganttsidebar-header {
            .title {
                font-size: 18px;
                font-weight: 500;
            }
        }
        .ganttsidebar-header {
            .e-close {
                background: transparent;
                border: none;
                cursor: pointer;
            }
        }
        .ganttbtn-container {
            padding: 10px;
            float: right;
        }
        .ganttbtn-container #apply {
            margin: 6px;
        }
        .ganttsidebar-header {
            .e-close::before {
                font-family: 'e-icons' !important;
                content: '\e7e7';
                font-size: 15px;
            }
        }
        .ganttsidebar-header {
            .highcontrast .e-close::before {
                content: '\e7fc';
                font-family: 'e-icons';
                font-size: 15px;
            }
        }
        .e-quickfilter::before {
            font-family: 'e-icons' !important;
            content: '\e7f7';
            font-size: 15px;
        }
        .highcontrast .e-quickfilter::before {
            content: '\e21c';
            font-family: 'e-icons';
        }
    </style>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the integration of the QueryBuilder component for complex filtering in the Gantt Chart.
        </p>
    </div>
}
@section Description{

    <div id="description">
        <p>
             In this example, the process involves retrieving the complex query from the <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/query-builder/getting-started">QueryBuilder</a> component and subsequently integrating it into the Gantt Chart by updating its <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/syncfusion.ej2.gantt.gantt.html#Syncfusion_EJ2_Gantt_Gantt_Query">Query</a> Property.
            The QueryBuilder component tool is located in a <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/sidebar/getting-started">SideBar</a> component that appears when you click on the button.
        </p>
        <br>
    <p>More information on the Essential<sup>®</sup> Gantt Chart can be found in this <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/gantt/filtering/filtering">documentation section</a>.</p>
    </div>
}
@section Meta{
    <meta name="description" content="This example demonstrates the Advanced Filtering in ASP.NET Core Gantt control. Explore here for more details." />
}
@section Title{
    <title>ASP.NET Core Gantt Advanced Filtering Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Advanced Filtering in ASP.NET Core Gantt Control</h1>
}
