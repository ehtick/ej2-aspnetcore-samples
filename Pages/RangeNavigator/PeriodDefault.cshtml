@page
@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var line = new { width = 0.0000001 };
        var animation = new Syncfusion.EJ2.Charts.ChartAnimation{ Enable = false };
        string valueX = "12%";
    }

    <div class="control-section" align="center">
        <div class="row">
            <div class="col-sm-12">
                <div class="row" style="width:80%;">
                    <div class="col-sm-8">
                        <div id="text" style="
                    display: flex; font-size: 36px; font-weight: 500;
                    align-items: center;
                    justify-content: space-between;" align="left">
                            Bitcoin (USD) Price
                        </div>
                    </div>
                    <div class="col-sm-4" align="right" style="margin-top: 1%">
                        <div>
                            <label for="switch1" style="font-size: 16px; margin-right: 2%">Closing Price </label>
                            <ejs-switch id="switch" checked="true" change="change"></ejs-switch>
                            <label for="switch2" style="font-size: 16px; margin-left: 2%">OHLC</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="row" align="center">
                    <div id="container"></div>
                    <ejs-rangenavigator id="rangeTop" valueType="DateTime" xName="date" yName="close" load="rangeTopLoad" disableRangeSelector="true"
                                        changed="rangeTopChanged" loaded="rangeTopLoaded">
                        <e-rangenavigator-periodselectorsettings position="Top">
                            <e-periods>
                                <e-period interval="1" intervalType="Months" text="1M"></e-period>
                                <e-period interval="3" intervalType="Months" text="3M"></e-period>
                                <e-period interval="6" intervalType="Months" text="6M"></e-period>
                                <e-period interval="1" text="1Y"></e-period>
                                <e-period interval="2" text="2Y" selected="true"></e-period>
                                <e-period text="All"></e-period>
                            </e-periods>
                        </e-rangenavigator-periodselectorsettings>
                    </ejs-rangenavigator>
                    <ejs-chart id="chart" load="chartLoad" chartMouseMove="chartMouseMoveEvent" chartMouseLeave="chartMouseLeaveEvent" height="250"
                               axisLabelRender="axisLabelRenderEvent" tooltipRender="tooltipRenderEvent">
                        <e-chart-primaryxaxis valueType="DateTime">
                            <e-majorgridlines width="0"></e-majorgridlines>
                        </e-chart-primaryxaxis>
                        <e-chart-primaryyaxis opposedPosition="true" labelFormat="n0">
                            <e-linestyle width="0"></e-linestyle>
                        </e-chart-primaryyaxis>
                        <e-chart-annotations>
                            <e-chart-annotation content="<div id='annotation'></div>" coordinateUnits="Pixel" x=valueX y="25%" region="Chart"></e-chart-annotation>
                        </e-chart-annotations>
                        <e-series-collection>
                            <e-series xName="date" yName="Close" high="High" open="Open" low="Low" close="Close" type="Candle" animation="animation"></e-series>
                        </e-series-collection>
                        <e-chart-chartarea>
                            <e-chartarea-border width="0.000000001"></e-chartarea-border>
                        </e-chart-chartarea>
                        <e-chart-crosshairsettings enable="true"></e-chart-crosshairsettings>
                        <e-chart-tooltipsettings enable="true" shared="true"></e-chart-tooltipsettings>
                    </ejs-chart>

                    <ejs-rangenavigator id="rangeBottom" valueType="DateTime" height="120" load="rangeBottomLoad" changed="rangeBottomChanged">
                        <e-rangenavigator-rangenavigatorseriescollection>
                            <e-rangenavigator-rangenavigatorseries xName="date" yName="Close" type="Line">
                            </e-rangenavigator-rangenavigatorseries>
                        </e-rangenavigator-rangenavigatorseriescollection>
                    </ejs-rangenavigator>
                </div>
            </div>
        </div>
    </div>
    <script src="~/scripts/range-navigator/period-data.js"></script>
    <script src="~/scripts/range-navigator/theme-color.js"></script>
    <script>
        var periodData = periodData;
        var data = [];
        var initialData;
        for (var i = 2110; i < periodData.length; i++) {
            data.push({
                High: periodData[i].High,
                Low: periodData[i].Low,
                Close: periodData[i].Close,
                Open: periodData[i].Open,
                date: new Date(2010, 6, i)
            });
        }
        change = function (args) {
            var chart = document.getElementById('chart').ej2_instances[0];
            chart.series[0].type = !args.checked ? 'Line' : 'Candle';
            chart.annotations[0].content = '';
            chart.refresh();
        }

        switchChange = function (args) {
            console.log(("123"))
        }
        rangeTopLoad = function (args) {
            loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.dataSource = data;
        }

        rangeTopLoaded = function (args) {
            if (!ej.base.Browser.isDevice) {
                document.getElementById('rangeTop_Secondary_Element').style.transform = 'translate(13%)';
            }
        }

        rangeTopChanged = function (args) {
            var chartData = data.filter(function (value) {
                return (value['date'].getTime() >= args.start.getTime() &&
                    value['date'].getTime() <= args.end.getTime());
            });
            if ((document.getElementById('chart').childNodes.length > 1) &&
                (document.getElementById('rangeBottom').childNodes.length > 1)) {
                var rangeBottom = document.getElementById('rangeBottom').ej2_instances[0];
                var chart = document.getElementById('chart').ej2_instances[0];
                rangeBottom.rangeSlider.setSlider(args.start.getTime(), args.end.getTime(), false, false);
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.dataBind();               
            }
        }

        chartLoad = function (args) {
            loadChartTheme(args);
            args.chart.series[0].dataSource = data;
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.tooltip.format = args.chart.series[0].type === 'Candle' ?
                '${point.x}<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b><br/>' +
                'Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b>' :
                '${point.x}<br/>Close : <b>${point.close}</b>';
        }

        axisLabelRenderEvent = function (args) {
            if (args.axis.title === 'Price') {
                var value = Math.round(Number(args.text)) / 1000;
                args.text = '$' + String(value) + 'k';
            }
        }

        rangeBottomLoad = function (args) {
            loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.series[0].dataSource = data;
            args.value = [new Date('2016-05-15'), new Date('2018-05-15')];
        }

        rangeBottomChanged = function (args) {
            if ((document.getElementById('chart').childNodes.length > 1) &&
                (document.getElementById('rangeTop').childNodes.length > 1)) {
                var rangeTop = document.getElementById('rangeTop').ej2_instances[0];
                var chart = document.getElementById('chart').ej2_instances[0];
                rangeTop.periodSelectorModule.datePicker.startDate = args.start;
                rangeTop.periodSelectorModule.datePicker.endDate = args.end;
                rangeTop.dataBind();               
                var filterData = data.filter(function (value) {
                    return (value.date.getTime() >= args.start.getTime() && value.date.getTime() <= args.end.getTime());
                });
                chart.primaryXAxis.zoomPosition = args.zoomPosition;
                chart.primaryXAxis.zoomFactor = args.zoomFactor;
                chart.dataBind();                
            }
        }

        tooltipRenderEvent = function (args) {
            var chart = document.getElementById('chart').ej2_instances[0];
            if (args.text.length > 0) {
                var text = args.text.split('<br/>');
                var html = '<table><thead>' + text[0] + '</thead>';
                var value = void 0;
                for (var i = 1; i < text.length; i++) {
                    value = text[i].split(':');
                    html += '<tr><td style="opacity:0.5">' + value[0] + ':</td><td style="padding-left: 5px;">$' +
                        (+value[1].split(' <b>')[1].split('</b>')[0]).toFixed(2) + '</td></tr>';
                }
                html += '</table>';
                chart.setAnnotationValue(0, '<div id="annotation" style="line-height: 18px; font-size: 13px;background: #fff; opacity:0.9; color: #464e56; ' +
                    ' box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px; border-radius: 3px">' + html + '</div>');
            }
            args.text = '';
        };

        chartMouseLeaveEvent = function (args) {
            removeSecondaryElement();
        }

        chartMouseMoveEvent = function (args) {
            var chart = document.getElementById("chart").ej2_instances[0];
            if (!ej.charts.withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {
                removeSecondaryElement();
            }
        }

        var removeSecondaryElement = function () {
            setTimeout(function () {
                if (document.getElementById('annotation')) {
                    ej.base.remove(document.getElementById('annotation'));
                }
            }, 2000);
        };

    </script>
}
   @*custom code start*@
@section Scripts {

}

<style>
    #chart_tooltip {
        opacity: 0;
    }

    #chart_HorizontalLine, #chart_VerticalLine {
        stroke-dasharray: 2
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Default in ASP.NET Core Range Selector control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
    <p>
        This sample visualize the Bitcoin price change over the period with candle and line series. Period Selector show the information about the data.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the period selector with range navigator to see the price changes for Bitcoin. Tooltip is enabled in this example, to see the tooltip in action, while the selected range is changed.
    </p>
}
@section Title{
                    <title>ASP.NET Core Range Selector Default Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default in ASP.NET Core Range Selector Control</h1>
                }