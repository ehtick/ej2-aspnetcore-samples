@page
@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <br>
        <h4 id="days" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px; text-align:center">Multi Level Labels</h4>
        <div id="container" align="center">
            <ejs-rangenavigator id="container" valueType="DateTime" intervalType="Quarter" enableGrouping="true"
                                groupBy="Years" labelPosition="Outside" load="onChartLoad" xName="x" yName="y" width="2">
                <e-rangenavigator-tooltip enable="true" displayMode="Always"></e-rangenavigator-tooltip>
            </ejs-rangenavigator>
        </div>
    </div>
    <script src="~/scripts/range-navigator/theme-color.js"></script>
    <script>
        var data = [];
        var value = 0; var point = {};
        for (var j = 1; j < 1090; j++) {
            value += (Math.random() * 10 - 5);
            value = value < 0 ? Math.abs(value) : value;
            point = { x: new Date(2000, 0, j), y: value, z: value + 10 };
            data.push(point);
        }
        window.onChartLoad = function (args) {
            loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.dataSource = data;
            args.rangeNavigator.value = [new Date('2001-01-01'), new Date('2002-01-01')];      
        }
    </script>
}
   @*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Multilevel Labels in ASP.NET Core Range Selector control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
<p>
    Axis labels are placed based on the values of the start and end ranges. You can add higher level of labels to the range navigator using multilevel labels.
</p>
}
@section Description{
<p>
    In this example, you can see how to group the axis labels. Here the interval for the second level labels can be customized using <code>groupBy</code>.
</p>
}
@section Title{
                    <title>ASP.NET Core Range Selector Multilevel Labels Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multilevel Labels in ASP.NET Core Range Selector Control</h1>
                }