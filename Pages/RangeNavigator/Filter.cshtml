@page
@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var majorGridLines = new { width = 0.000001 };
        var navigatorBorder = new { width = 0.000001 };
        var animation = new { enable = false };
        var lineStyle = new { width = 0.000001 };
        var majorTickLines = new { width = 0.000001 };
        var minorTickLines = new { width = 0.000001 };
        var crosshairTooltip = new { enable = true };        
        var border = new Syncfusion.EJ2.Charts.ChartBorder { Color = "Transparent", Width = 0 };
    }
    <div class="control-section">
        <h4 id="days" align="center" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;">Filter From Hire Date</h4>
        <div id="container" align="center">
            <ejs-rangenavigator id="container" height="75" valueType="DateTime"
                                allowSnapping="true" intervalType="Quarter"
                                enableGrouping="true" groupBy="Years"
                                enableDeferredUpdate="true" load="onChartLoad"
                                xName="HireDate" yName="yValue" changed="changed">
            </ejs-rangenavigator>
        </div><br />
        <div id="grid" align="center">
            <ejs-grid id="Grid" height="350" align="center" width="80%">
                <e-grid-columns>
                    <e-grid-column field="EmployeeID" headerText="Employee ID" textAlign="Center"></e-grid-column>
                    <e-grid-column field="FirstName" headerText="Name" textAlign="Center"></e-grid-column>
                    <e-grid-column field="Title" headerText="Title" textAlign="Center"></e-grid-column>
                    <e-grid-column field="HireDate" headerText="Hire Date" textAlign="Center" format="yMd"></e-grid-column>
                </e-grid-columns>

            </ejs-grid>
        </div>
    </div>
    <script src="~/scripts/datasource.js"></script>
    <script src="~/scripts/range-navigator/theme-color.js"></script>
    <script>
        var employeeData = employeeData;
        var start, end;
        var dataSource = employeeData.filter((data) => {
            return (data.HireDate >= new Date(1992, 5, 1) && data.HireDate <= new Date(1993, 4, 1));
        });
        window.onChartLoad = function (args) {
            loadRangeNavigatorTheme(args);
            args.rangeNavigator.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.rangeNavigator.dataSource = employeeData;
            args.rangeNavigator.value = [new Date(1992, 5, 1), new Date(1993, 4, 1)];  
        }
        window.changed = function (args) {
            if ((document.getElementById('Grid').childNodes.length > 1)) {
                var grid = document.getElementById('Grid').ej2_instances[0];
                grid.dataSource = employeeData.filter((data) => {
                    return (data.HireDate >= new Date(+args.start) && data.HireDate <= new Date(+args.end));
                });
                grid.refresh();
            }
        }
    </script>
}
   @*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Filter in ASP.NET Core Range Selector control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
<p>
    This sample filters the data by hire date using date-time axis.
</p>
}
@section Description{
<p>
    In this example, you can see how to bind the value of the range navigator to the grid control using the changed event.
</p>
}
@section Title{
                    <title>ASP.NET Core Range Selector Filter Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Filter in ASP.NET Core Range Selector Control</h1>
                }